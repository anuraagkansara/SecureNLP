Disclaimer O
: O
CrowdStrike O
derived O
this O
information O
from O
investigations O
in O
non O
- O
classified O
environments O
. O

Since O
we O
value O
our O
client O
's O
privacy O
and O
interests O
, O
some O
data O
has O
been O
redacted O
or O
sanitized O
. O

Crowdstrike O
presents O
" O
Mo O
' O
Shells O
Mo O
' O
Problems O
" O
- O
A O
four O
part O
series O
featuring O
two O
unique O
web O
shells O
used O
by O
a O
Chinese O
threat O
group O
we O
call O
Deep O
Panda O
. O

The O
series O
will O
culminate O
with O
a O
CrowdCast O
in O
April O
2014 O
detailing O
a O
case O
study O
of O
the O
incident O
response O
investigation O
conducted O
to O
identify O
these O
web O
shells O
. O

Special O
thanks O
to O
Josh O
Phillips O
of O
the O
CrowdStrike O
Global O
Intelligence O
Team O
for O
providing O
the O
technical O
analysis O
in O
this O
blog O
post O
. O

Today O
we O
'll O
cover O
part O
one O
of O
this O
series O
, O
which O
provides O
an O
overview O
of O
what O
web O
shells O
are O
, O
functionality O
of O
two O
web O
shells O
recently O
identified O
during O
an O
incident O
response O
investigation O
and O
how O
they O
were O
leveraged O
by O
the O
attacker O
. O

Parts O
two O
through O
four O
will O
provide O
details O
on O
successful O
analytical O
techniques O
you O
can O
use O
to O
discover O
web O
shells O
within O
your O
environment O
. O

A O
Web O
Shell O
is O
a O
file O
containing O
backdoor O
functionality O
written O
in O
a O
web O
scripting O
language O
such O
ASP O
, O
ASPX O
, O
PHP O
or O
JSP O
. O

When O
a O
web O
shell O
is O
hosted O
on O
an O
internet O
facing O
victim O
system O
, O
an O
adversary O
can O
remotely O
access O
the O
system O
to O
perform O
malicious O
actions O
. O

Deep O
Panda O
is O
a O
China O
based O
threat O
group O
CrowdStrike O
has O
observed O
targeting O
companies O
in O
the O
defense O
, O
legal O
, O
telecommunication O
and O
financial O
industries O
. O

Crowdstrike O
has O
observed O
Deep O
Panda O
adopting O
web O
shells O
as O
their O
primary O
access O
back O
into O
a O
victim O
organization O
. O

This O
is O
an O
interesting O
shift O
as O
web O
shells O
have O
typically O
been O
seen O
as O
only O
a O
first O
stage O
into O
obtaining O
a O
persistent O
foothold O
in O
an O
environment O
. O

Previously O
, O
web O
shells O
were O
quickly O
abandoned O
once O
persistent O
second O
stage O
malware O
was O
successfully O
beaconing O
. O

Using B-Action
a O
web B-Entity
shell I-Entity
as B-Modifier
a O
primary B-Entity
backdoor I-Entity
gives O
Deep O
Panda O
several O
advantages O
. O

To O
assist O
organizations O
with O
identifying O
web O
shells O
in O
their O
environment O
, O
this O
post O
will O
cover O
two O
popular O
Deep O
Panda O
web O
shells O
. O

By O
gaining O
insight O
into O
their O
capabilities O
and O
footprint O
, O
organizations O
should O
find O
it O
feasible O
to O
detect O
and O
remediate O
these O
backdoors O
. O

Showimg.asp B-Entity
is O
an O
example O
of O
an O
early O
stage O
web O
shell O
used O
to O
build B-Action
an O
initial B-Entity
foothold I-Entity
within I-Entity
a I-Entity
network I-Entity
. O

After O
it O
is O
replaced O
by O
more O
robust O
backdoors O
, O
it O
may O
be O
left O
in O
place O
as O
a O
last O
resort O
should O
remediation O
take O
place O
. O

At O
a O
diminutive O
28 O
bytes O
, O
it O
is O
one O
of O
the O
smallest O
Active O
Server O
Page O
( O
ASP O
) O
backdoors O
in O
the O
wild O
. O

In O
a O
recent O
case O
, O
we O
witnessed O
this O
web O
shell O
written O
to O
a O
standalone O
file O
( O
named O
showimg.asp O
) O
, O
but O
it O
could O
easily O
be O
injected O
into O
an O
existing O
page O
, O
making O
it O
even O
stealthier O
. O

The O
code O
for O
this O
web O
shell O
can O
be O
found O
below O
. O

ASP O
uses O
Microsoft O
Visual O
Basic O
( O
VBScript O
) O
as O
its O
implementation O
language O
. O

The O
code O
above O
uses O
the O
chr O
( O
) O
function O
to O
convert O
an O
integer O
into O
a O
character O
, O
which O
is O
then O
passed O
as O
an O
argument O
to O
the O
ASP O
Request O
( O
) O
object O
. O

The O
Request O
( O
) O
object O
will O
search O
the O
Query O
String O
for O
any O
keys O
matching O
the O
input O
. O

In O
our O
case O
, O
the O
code O
is O
equivalent O
to O
Request O
. O
QueryString O
( O
' O
* O
' O
) O
. O

The O
request O
object O
will O
look O
for O
chr(42 O
) O
which O
is O
an O
asterisk O
( O
* O
) O
, O
returning O
whatever O
is O
passed O
to O
it O
in O
a O
HTTP O
GET O
or O
POST O
. O

Next O
, O
the O
Execute O
( O
) O
function O
will O
execute O
any O
value O
returned O
by O
the O
lookup O
. O

Effectively O
, O
an O
attacker O
can O
form O
a O
request O
that O
will O
execute O
any O
VBScript O
code O
. O

As O
you O
might O
imagine O
, O
this O
is O
a O
powerful O
capability O
. O

For O
example O
, O
this O
code O
can O
perform O
any O
of O
the O
following O
actions O
. O

This O
web O
shell O
is O
an O
example O
of O
a O
" O
thick O
client O
" O
shell O
, O
meaning O
that O
while O
the O
server O
side O
code O
is O
quite O
small O
, O
attackers O
typically O
use O
a O
larger O
GUI O
client O
to O
construct O
the O
sent O
commands O
. O

The O
client O
GUI O
runs O
on O
the O
attacker O
's O
system O
and O
hence O
is O
not O
typically O
found O
within O
the O
victim O
network O
. O

As O
a O
simple O
example O
of O
an O
encoded O
command O
, O
the O
following O
GET O
request O
would O
cause O
the O
backdoor O
to O
execute O
the O
code O
Response O
. O
Write(" O
< O
h1>Hello O
World</h1 O
> O
" O
) O
and O
would O
render O
" O
Hello O
World O
" O
to O
be O
printed O
in O
the O
web O
browser O
. O

Path O
: O
C:\inetpub\wwwroot\aspnet_client\system_web\<VERSION>\ O
MD5 O
Hash O
: O
cc875db104a602e6c12196fe90559fb6 O
File O
Size O
: O
45187 O
Table O
4 O
: O
Metadata O
of O
" O
system_web.aspx O
" O
System_web.aspx O
is O
an O
excellent O
example O
of O
a O
more O
robust O
web O
shell O
used O
to O
replace O
Deep O
Panda O
's O
traditional O
beaconing O
command O
and O
control O
infrastructure O
. O

It O
is O
an O
ASP.NET O
backdoor O
written O
in O
C O
# O
, O
with O
far O
more O
capabilities O
than O
we O
saw O
with O
the O
showimage.asp O
sample O
. O

The O
web O
shell O
supports O
a O
form O
of O
authentication O
to O
protect O
against O
unauthorized O
access O
. O

This O
prevents O
its O
discovery O
from O
search O
engine O
indexing O
, O
vulnerability O
scanning O
tools O
and O
other O
unauthorized O
access O
to O
the O
backdoor O
. O

In O
order O
to O
bypass O
authentication O
, O
a O
user O
session O
must O
satisfy O
one O
of O
three O
options O
. O

Since O
web O
shells O
are O
text O
- O
based O
, O
we O
can O
easily O
see O
how O
this O
authentication O
takes O
place O
. O

First O
, O
the O
code O
checks O
if O
a O
cookie O
by O
the O
name O
of O
cp O
exists O
. O

If O
so O
, O
the O
response O
object O
has O
its O
End O
( O
) O
method O
invoked O
, O
denying O
the O
user O
access O
. O

Next O
, O
the O
code O
uses O
the O
IsValidUser()method O
and O
checks O
the O
Hyper O
Text O
Transport O
Protocol O
( O
HTTP O
) O
headers O
for O
the O
Keep O
- O
Alive O
value O
, O
which O
, O
if O
equal O
to O
320 O
, O
will O
return O
true O
. O

If O
the O
value O
does O
not O
equal O
320 O
the O
IsValidUser()method O
iterates O
over O
the O
Request O
. O
UserLanguages O
collection O
searching O
for O
a O
language O
named O
es O
- O
DN O
, O
and O
if O
found O
, O
the O
IsValidUser O
( O
) O
method O
will O
return O
true O
. O

If O
neither O
check O
passes O
, O
the O
code O
returns O
false O
and O
the O
code O
will O
finally O
check O
for O
the O
presence O
of O
a O
cookie O
named O
< O
REDACTED>. O

If O
the O
cookie O
is O
present O
, O
the O
authentication O
step O
is O
satisfied O
. O

If O
not O
, O
a O
blank O
web O
page O
with O
no O
content O
is O
displayed O
. O

After O
successful O
authentication O
, O
the O
attacker O
is O
provided O
with O
the O
following O
page O
. O

System_web.aspx O
packs O
a O
large O
amount O
of O
functionality O
into O
a O
compact O
interface O
. O

It O
provides O
the O
following O
capabilities O
. O

The O
web B-Entity
shell I-Entity
supports B-Action
8 O
main B-Entity
commands I-Entity
, O
with O
most O
command O
execution O
via O
Transact O
- O
SQL O
using O
the O
xp_cmdshell O
function O
. O

This O
command O
depends O
on O
the O
contents O
of O
the O
first O
unlabeled O
textbox1 O
. O

If O
unlabeled O
textbox1 O
is O
empty O
, O
the B-Entity
code I-Entity
will O
enumerate B-Action
attached O
drives B-Entity
. O

Provider= O
or O
Driver= O
- O
Will O
connect O
using O
the O
OleDbConnection O
class O
. O

Data O
Source= O
- O
The O
code O
will O
connect O
using O
the O
SqlConnection O
class O
. O

iis:// O
- O
If O
this O
appears O
in O
unlabeled O
textbox1 O
, O
the O
code O
will O
use O
data O
from O
the O
second O
unlabeled O
textbox2 O
to O
execute O
Active O
Directory O
requests O
. O

This O
command O
also O
depends O
on O
the O
text O
contained O
in O
the O
unlabeled O
textbox1 O
. O

If O
the O
field O
is O
left O
empty O
, O
the O
code O
will O
assume O
a O
valid O
path O
to O
a O
file O
on O
the O
local O
machine O
and O
will O
read O
and O
display O
contents O
to O
user O
. O

Data O
Source= O
- O
the O
code O
will O
assume O
that O
the O
unlabeled O
textbox2 O
contains O
a O
valid O
SQL O
query O
and O
will O
execute O
it O
and O
display O
the O
results O
. O

http:// O
- O
If O
this O
appears O
in O
unlabeled O
textbox1 O
, O
download O
content O
from O
the O
assumed O
URL O
. O

$ O
SEX O
â€“ O
If O
this O
appears O
in O
unlabeled O
textbox1 O
, O
pass O
the O
contents O
to O
the O
Server O
. O
Execute O
( O
) O
method O
. O

Execute O
contents O
in O
unlabeled O
textbox1 O
as O
a O
SQL O
query O
and O
return O
binary O
data O
to O
adversary O
. O

Execute O
contents O
in O
unlabeled O
textbox1 O
as O
a O
SQL O
statement O
and O
return O
valid O
textual O
data O
to O
adversary O
. O

Upload B-Action
the O
file B-Entity
chosen I-Entity
by I-Entity
the I-Entity
Choose I-Entity
File I-Entity
button I-Entity
and O
save O
it O
to O
a O
temporary O
table O
in O
the O
database O
file O
worktbl O
in O
chunks O
of O
10240 O
bytes O
. O

Then O
executes O
xp_cmdshell O
( O
which O
executes O
the O
Bulk O
Copy O
Program O
) O
to O
copy O
the O
data O
from O
that O
table O
to O
a O
file O
whose O
name O
is O
specified O
in O
unlabeled O
textbox2 O
. O

After O
the O
file O
is O
saved O
, O
the O
code O
deletes O
the O
temporary O
table O
. O

If O
unlabeled O
textbox1 O
is O
a O
local O
file O
on O
infected O
system O
, O
the O
file O
is O
read O
and O
displayed O
to O
attacker O
. O

\\ O
- O
If O
unlabeled O
textbox1 O
starts O
with O
\\ O
, O
use O
xp_cmdshell O
to O
execute O
the O
copy O
command O
to O
copy O
file O
to O
% O
windir%\Temp\temp.bin O
. O

Then O
, O
issue O
the O
dir O
command O
and O
display O
results O
to O
user O
. O

Finally O
, O
delete O
the O
temporary O
file O
% O
windir%\Temp\temp.bin O
. O

Perform O
Active O
Directory O
queries O
. O

The O
code O
handles O
create O
, O
delete O
, O
set O
, O
get O
, O
and O
enum O
queries O
, O
while O
any O
query O
not O
matching O
those O
is O
executed O
directly O
. O

All O
commands O
are O
executed O
using O
the O
System O
. O
DirectoryServices O
API O
. O

Simple O
wrapper O
around O
the O
CSharpCodeProvider O
API O
, O
allowing O
the O
adversary O
to O
compile O
and O
execute O
arbitrary O
C O
# O
source O
code O
. O

Login O
Checkbox O
Attempt O
to O
use O
the O
username O
, O
password O
, O
and O
domain O
from O
the O
User O
, O
Pass O
and O
Domain O
fields O
and O
LogonUserA O
( O
) O
Win32 O
API O
function O
to O
impersonate B-Action
a O
specific B-Entity
user I-Entity
. O

Detatch O
Checkbox O
Specifies O
whether O
commands O
run O
from O
the O
Exec O
button O
will O
have O
their O
output O
redirected O
and O
displayed O
to O
the O
adversary O
when O
the O
command O
is O
finished O
executing O
. O

In O
short O
, O
system_web.aspx B-Entity
provides B-Action
an O
adversary B-Entity
with B-Modifier
a O
very B-Entity
stealthy I-Entity
means I-Entity
of I-Entity
near I-Entity
full I-Entity
control I-Entity
of I-Entity
the I-Entity
server I-Entity
on I-Entity
which I-Entity
it I-Entity
resides I-Entity
. O

This O
stealth B-Entity
might O
be B-Action
its O
most B-Entity
important I-Entity
attribute I-Entity
. O

As O
we O
will O
see O
, O
identifying O
web O
shells O
can O
be O
much O
harder O
than O
finding O
malicious O
binaries O
. O

In O
our O
next O
post O
, O
we O
will O
discuss O
techniques O
for O
identifying O
web O
shells O
. O

Stay O
tuned O
for O
Parts O
2 O
- O
4 O
as O
we O
cover O
File O
Stacking O
, O
Web O
Log O
Review O
, O
and O
Network O
Detection O
. O

In O
the O
meantime O
, O
register O
now O
for O
the O
April O
1st O
CrowdCast O
. O

