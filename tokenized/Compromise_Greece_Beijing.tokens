It O
's O
friday O
afternoon O
, O
I O
had O
a O
bit O
of O
free O
time O
and O
stumbled O
across O
this O
tweet O
by O
PhysicalDrive0 O
( O
thx O
! O
) O
two O
hours O
ago O
and O
thought O
to O
give O
it O
a O
try O
to O
finally O
add O
a O
new O
article O
to O
this O
Blog O
( O
first O
of O
2014 O
) O
: O
So O
, O
I O
went O
to O
Google O
to O
search O
for O
the O
domain O
of O
the O
Embassy O
of O
Greece O
Beijing O
and O
added O
the O
( O
allegedly O
) O
malicious O
java O
file O
package O
that O
was O
found O
by O
PhysicalDrive0 O
: O
Next O
, O
I O
loaded O
the O
1.jar O
file O
into O
Java O
Decompiler O
to O
get O
the O
source O
code O
. O
 
It O
showed O
, O
that O
the O
functionality O
is O
obfuscated O
in O
some O
way O
, O
e.g O
. O
 
the O
function O
csfn O
( O
String O
paramString O
) O
decrypts O
all O
strings O
by O
'' O
removing O
'' O
the O
numbers O
of O
the O
string O
parameter O
: O
There O
are O
some O
other O
obfuscation O
techniques O
, O
but O
they O
are O
not O
important O
here O
. O
 
Instead O
, O
the O
following O
deobfuscated O
code O
line O
in O
the O
function O
init O
( O
) O
gives O
us O
an O
idea O
where O
the O
actual O
payload O
is O
located O
: O
We O
can O
also O
see O
, O
that O
the O
java O
package O
contains O
a O
file O
named O
pack O
, O
so O
we O
open O
7-Zip O
and O
unpack O
the O
file O
. O
 
A O
quick O
view O
with O
a O
PE O
viewer O
showed O
, O
that O
it O
is O
a O
x86 O
PE O
executable O
not O
even O
encrypted O
( O
SHA256 O
: O
b832e4b5a4829c8df6de7b42c5cb32ef25b5ab59072b4c2a7838404cd0dd5e5f O
) O
: O
So O
, O
I O
opened O
IDA O
Pro O
to O
take O
a O
quick O
look O
at O
the O
functionality O
. O
 
Together O
with O
the O
strings O
of O
the O
executable O
, O
we O
get O
a O
brief O
idea O
of O
what O
the O
purpose O
of O
this O
malware O
is O
. O
 
The O
important O
strings O
are O
as O
follows O
: O
Together O
with O
the O
output O
of O
IDA O
Pro O
, O
we O
can O
see O
that O
this B-Entity
malware I-Entity
uses O
the O
command O
line O
tool O
cmd.exe O
for O
adding B-Action
several B-Entity
registry I-Entity
keys I-Entity
to B-Modifier
Internet B-Entity
Explorer I-Entity
. O
 
It B-Entity
also O
tries O
to O
retrieve B-Action
possible B-Entity
AntiVirus I-Entity
information I-Entity
by B-Modifier
using B-Entity
the I-Entity
COM I-Entity
interface I-Entity
( O
dc12a687-737f-11cf-884d-00aa004b2e24 O
- O
> O
IWbemLocator O
- O
> O
SELECT O
* O
FROM O
AntiVirusProduct O
) O
. O
 
Furthermore O
, O
it B-Entity
makes O
use O
of O
the O
COM O
to O
launch B-Action
an B-Entity
instance I-Entity
of I-Entity
Internet I-Entity
Explorer I-Entity
( O
d30c1661-cdaf-11d0-8a3e-00c04fc9e26e O
- O
> O
IWebBrowser2 O
) O
, O
supposedly O
to O
contact B-Action
its B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
. O
 
To O
verify O
this O
, O
we O
open O
up O
Wireshark O
and O
run O
the O
executable O
. O
 
As O
a O
result O
, O
we O
get O
the O
following O
network O
information O
: O
Also O
, O
we O
see O
that O
it B-Entity
downloads B-Action
some B-Entity
kind I-Entity
of I-Entity
data I-Entity
( O
Base64 O
encoded O
) O
. O
 
But O
first O
, O
we O
combine O
the O
C O
& O
C O
server O
and O
the O
HTTP O
request O
and O
open O
the O
URL O
in O
our O
favorite O
Browser O
: O
As O
you O
can O
see O
, O
there O
is O
a O
string O
named O
microsoft O
followed O
by O
Base64 O
encoded O
data O
. O
 
Side O
note O
: O
Is O
there O
also O
a O
Linux O
equivalent O
? O
Next O
, O
we O
copy O
the O
Base64 O
encoded O
data O
and O
go O
to O
the O
following O
website O
to O
let O
us O
decode O
it O
into O
a O
file O
( O
because O
I O
had O
the O
feeling O
it O
's O
just O
another O
unencrypted O
executable O
) O
: O
As O
a O
result O
, O
we O
get O
another O
executable O
( O
SHA256 O
: O
a4863f44f48d1c4c050dd7baad767a86b348dd4d33924acf4e0a3cd40c6ae29f O
) O
that O
was O
only O
Base64 O
encoded O
and O
not O
encrypted O
in O
any O
way O
: O
So O
again O
, O
we O
fire O
up O
our O
PE O
viewer O
and O
take O
a O
look O
at O
the O
important O
strings O
: O
Again O
, O
we O
load O
the O
executable O
into O
IDA O
Pro O
and O
quickly O
fly O
over O
the O
assembly O
code O
to O
get O
an O
idea O
of O
the O
functionality O
. O
 
Once O
again O
, O
it B-Entity
creates B-Action
several B-Entity
registry I-Entity
entries I-Entity
with B-Modifier
the B-Entity
help I-Entity
of I-Entity
the I-Entity
command I-Entity
line I-Entity
tool I-Entity
and O
creates B-Action
an B-Entity
instance I-Entity
of I-Entity
the I-Entity
Internet I-Entity
Explorer I-Entity
( O
CoCreateInstance O
( O
) O
- O
> O
d30c1661-cdaf-11d0-8a3e- O
00c04fc9e26e O
) O
for O
contacting B-Action
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
. O
 
This O
time O
, O
the O
network O
information O
is O
as O
follows O
: O
From O
the O
code O
we O
can O
see O
, O
that O
the B-Entity
sample I-Entity
has O
also O
the O
ability O
to O
encode B-Action
/ O
decode O
data B-Entity
from B-Modifier
/ O
to O
Base64 B-Entity
. O
 
The O
dynamic O
analysis O
showed O
the B-Entity
malware I-Entity
sample I-Entity
contacted B-Action
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
, O
but O
was O
n't O
sending O
any O
URL O
parameters O
( O
id1 O
, O
id2 O
) O
. O
 
Also O
the O
server O
did O
n't O
respond O
... O
 
The O
files O
can O
be O
downloaded O
here O
: O
That O
's O
it O
, O
have O
a O
nice O
weekend O
... O
 
