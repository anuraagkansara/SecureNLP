Security O
news O
, O
views O
and O
insight O
from O
the O
ESET O
experts O
BY O
JOAN O
CALVET O
POSTED O
30 O
JUN O
2015 O
11:12AM O
In O
this O
blog O
we O
describe O
a O
sophisticated O
backdoor O
, O
called O
Dino O
by O
its O
creators O
. O
 
We O
believe O
this O
malicious O
software O
has O
been O
developed O
by O
the O
Animal O
Farm O
espionage O
group O
, O
who O
also O
created O
the O
infamous O
Casper O
, O
Bunny O
and O
Babar O
malware O
. O
 
Dino O
contains O
interesting O
technical O
features O
, O
and O
also O
a O
few O
hints O
that O
the O
developers O
are O
French O
speaking O
. O
 
Animal O
Farm O
is O
the O
security O
industry O
's O
name O
for O
a O
group O
of O
attackers O
first O
described O
by O
Canada O
's O
Communications O
Security O
Establishment O
( O
CSE O
) O
in O
a O
set O
of O
slides O
leaked O
by O
Edward O
Snowden O
in O
March O
2014 O
. O
 
In O
those O
slides O
CSE O
assess O
with O
" O
moderate O
certainty O
" O
that O
this O
group O
is O
a O
French O
intelligence O
agency O
. O
 
Since O
then O
, O
several O
examples O
of O
malware O
created O
by O
Animal O
Farm O
have O
been O
found O
and O
publicly O
documented O
, O
in O
particular O
. O
 
Casper O
, O
a O
stealthy O
first O
stage O
implant O
, O
documented O
by O
ESET O
in O
last O
March O
Bunny O
, O
a O
Lua O
based O
backdoor O
, O
documented O
by O
Marion O
Marschalek O
( O
Cyphort O
) O
Babar O
, O
an O
espionage O
platform O
, O
also O
analyzed O
by O
Marion O
Marschalek O
The O
connection O
between O
those O
pieces O
of O
malware O
and O
the O
group O
described O
in O
CSE O
slides O
has O
been O
convincingly O
established O
, O
for O
example O
by O
Paul O
Rascagn O
res O
( O
G O
Data O
) O
. O
 
In O
this O
blog O
post O
we O
add O
a O
new O
piece O
to O
the O
puzzle O
with O
Dino O
, O
another O
malicious O
program O
belonging O
to O
Animal O
Farm O
's O
arsenal O
. O
 
The O
sample O
of O
Dino O
documented O
in O
this O
blog O
post O
was O
used O
in O
2013 O
against O
targets O
in O
Iran O
. O
 
The O
original O
means O
of O
infection O
is O
unknown O
, O
though O
we O
believe O
Dino O
was O
installed O
by O
another O
program O
, O
as O
it O
contains O
an O
uninstallation O
command O
without O
the O
corresponding O
installation O
procedure O
. O
 
Given O
the O
set O
of O
commands O
it O
can O
receive O
, O
Dino B-Entity
's I-Entity
main I-Entity
goal I-Entity
seems O
to O
be B-Action
the O
exfiltration B-Entity
of I-Entity
files I-Entity
from B-Modifier
its O
targets B-Entity
. O
 
The O
binary O
's O
original O
name O
, O
" O
Dino.exe O
" O
, O
has O
been O
left O
visible O
by O
its O
authors O
, O
as O
was O
the O
case O
with O
Casper O
. O
 
Dino O
– O
which O
could O
be O
referring O
to O
the O
pet O
character O
from O
The O
Flintstones O
cartoon O
show O
– O
was O
already O
mentioned O
in O
a O
recent O
Kaspersky O
blog O
as O
a O
" O
full O
featured O
espionage O
platform O
, O
" O
but O
no O
technical O
analysis O
has O
been O
published O
yet O
. O
 
Roughly O
, O
Dino B-Entity
can O
be O
described O
as O
an O
elaborate O
backdoor O
built O
in O
a O
modular O
fashion O
. O
 
Among O
its B-Entity
technical O
innovations O
, O
there O
is O
a O
custom O
file O
system O
to O
execute B-Action
commands B-Entity
in B-Modifier
a O
stealthy B-Entity
fashion I-Entity
, O
and O
a O
complex O
task O
scheduling O
module O
working O
in O
a O
similar O
way O
to O
the O
" O
cron O
" O
Unix O
command O
. O
 
Interestingly O
, O
the O
binary O
contains O
a O
lot O
of O
verbose O
error O
messages O
, O
allowing O
us O
to O
see O
Dino O
's O
developers O
' O
choice O
of O
wording O
. O
 
Also O
, O
a O
few O
technical O
artefacts O
suggest O
that O
Dino O
was O
authored O
by O
native O
French O
speakers O
. O
 
Dino O
has O
been O
developed O
in O
C++ O
and O
presents O
a O
well O
defined O
modular O
architecture O
. O
 
The O
following O
array O
lists O
the O
modules O
contained O
in O
this O
Dino O
binary; O
the O
module O
names O
are O
those O
assigned O
by O
the O
developers O
. O
 
Dino O
heavily O
relies O
on O
a O
custom O
data O
structure O
named O
" O
DataStore O
" O
by O
the O
Animal O
Farm O
developers O
. O
 
In O
particular O
, O
all O
Dino O
's O
modules O
store O
their O
content O
inside O
this O
structure O
, O
making O
its O
understanding O
one O
of O
the O
keys O
to O
analyzing O
Dino O
. O
 
A O
DataStore O
is O
a O
map O
from O
string O
keys O
to O
values O
of O
8 O
possible O
types O
, O
such O
as O
integers O
or O
strings O
. O
 
The O
implementation O
of O
this O
data O
structure O
is O
based O
on O
a O
hash O
table O
. O
 
It O
means O
that O
to O
retrieve O
the O
value O
associated O
with O
a O
key O
, O
one O
has O
to O
calculate O
the O
hash O
of O
the O
key O
to O
locate O
a O
bucket O
from O
which O
the O
value O
can O
be O
retrieved O
. O
 
Dino O
's O
hash O
is O
a O
one O
byte O
value O
calculated O
with O
a O
series O
of O
XOR O
operations O
on O
the O
key O
, O
and O
each O
bucket O
starts O
a O
linked O
list O
containing O
key O
/ O
value O
pairs O
. O
 
The O
code O
responsible O
for O
retrieving O
the O
value O
associated O
with O
a O
key O
is O
shown O
in O
Figure O
1 O
. O
 
Finally O
, O
DataStore O
objects O
can O
be O
serialized O
in O
a O
custom O
format O
, O
which O
begins O
with O
the O
magic O
word O
" O
DxSx O
" O
. O
 
This O
is O
used O
in O
particular O
by O
the O
PSM B-Entity
module I-Entity
to O
save B-Action
the O
content B-Entity
of I-Entity
Dino I-Entity
modules I-Entity
in B-Modifier
an O
encrypted B-Entity
file I-Entity
. O
 
More O
precisely O
, O
when O
a O
modification O
is O
made O
to O
a O
module O
's O
content O
in O
memory O
, O
the O
PSM O
module O
saves O
it O
as O
a O
serialized O
DataStore O
. O
 
When O
Dino O
restarts O
, O
the O
module O
is O
deserialized O
from O
the O
file O
and O
loaded O
into O
memory O
. O
 
Funnily O
enough O
, O
the O
key O
serving O
to O
encrypt O
the O
file O
on O
disk O
is O
" O
PsmIsANiceM0du1eWith0SugarInside O
" O
. O
 
Dino O
's O
configuration O
is O
initially O
stored O
in O
a O
serialized O
DataStore O
object O
contained O
in O
a O
zip O
archive O
at O
the O
end O
of O
the O
Dino O
binary O
. O
 
At O
runtime O
this O
object O
is O
deserialized O
and O
stored O
inside O
the O
CORE O
module O
. O
 
We O
can O
list O
the O
configuration O
's O
content O
with O
Dino O
's O
" O
conf O
–l O
CORE O
" O
command O
– O
described O
later O
– O
which O
displays O
on O
separate O
rows O
each O
key O
's O
name O
, O
its O
associated O
value O
and O
the O
type O
of O
this O
value O
. O
 
Started:5523F782 O
QWORD O
InitialWaitDone:00000001 O
DWORD O
InteractiveDelay:00000005 O
DWORD O
MaxNothingSaidCount:00000078 O
DWORD O
InstallDate O
: O
5523F782 O
QWORD O
fields:78537844 O
… O
[REDACTED] O
… O
66B3900 O
BYTES O
recID:11173 O
01 O
PRS O
WIDESTR O
Version:1.2 O
WIDESTR O
BD_Keys O
: O
4D41474943424F58 O
… O
[REDACTED] O
… O
9EB3506 O
BYTES O
CC_Keys O
: O
4D41474943424F58 O
… O
[REDACTED] O
… O
0000000 O
BYTES O
MaxDelay:00000E10 O
DWORD O
ComServer0:hXXp://www.azhar.bf/ O
… O
[REDACTED] O
… O
/postal.php O
STR O
ComServer1:hXXp://www.rsvniima.org/ O
… O
[REDACTED] O
… O
/din12/postal.php O
STR O
ComServer2:hXXp://www.azhar.bf/ O
… O
[REDACTED] O
… O
/postal.php O
STR O
ComServer3:hXXp://www.rsvniima.org/ O
… O
[REDACTED] O
… O
/din12/postal.php O
STR O
ComServer4:hXXp://dneprorudnoe.info// O
… O
[REDACTED] O
… O
/postal.php O
STR O
ComServer5:hXXp://dneprorudnoe.info// O
… O
[REDACTED] O
… O
/postal.php O
STR O
ComServer6:hXXp://dneprorudnoe.info// O
… O
[REDACTED] O
… O
/postal.php O
STR O
NextSendReceive:5CC33097FB72D001 O
BYTES O
CC:000064F7 O
72E4 O
3F7D O
C817 O
474D O
A9BDBDF7 O
STR O
DaysOfLife:00000000 O
DWORD O
GUID:12FEB4A9EEDEE411B283000C29FD2872 O
BYTES O
InitialDelay:00000000 O
DWORD O
now:5523F78E O
QWORD O
hash O
: O
A88E8181CA5CE35AE70C76145DFB820D O
BYTES O
InitialCommands:78537844 O
… O
[REDACTED] O
… O
000000 O
BYTES O
xT0rvwz O
: O
DC188352A O
… O
[REDACTED] O
… O
00000 O
BYTES O
tr4qa589:K/[RAFtIP?ciD?:D O
STR O
jopcft4T O
: O
a.ini O
WIDESTR O
While O
most O
of O
the O
keys O
have O
self O
explanatory O
names O
, O
we O
would O
like O
to O
focus O
on O
the O
following O
keys O
. O
 
" O
recID O
" O
: O
Animal O
Farms O
binaries O
contain O
an O
ID O
whose O
decimal O
value O
appears O
to O
identify O
the O
target O
, O
" O
11173 O
01 O
PRS O
" O
in O
this O
case O
. O
 
For O
example O
Casper O
used O
an O
" O
ID O
" O
value O
set O
to O
" O
13001 O
" O
, O
whereas O
some O
Babar O
samples O
used O
" O
12075 O
01 O
" O
and O
" O
11162 O
01 O
" O
. O
 
We O
do O
not O
know O
the O
meaning O
of O
the O
" O
PRS O
" O
suffix O
added O
in O
the O
case O
of O
Dino O
. O
 
" O
ComServer O
" O
: O
These B-Entity
keys I-Entity
contain B-Action
the O
command B-Entity
and I-Entity
control I-Entity
( I-Entity
C&C I-Entity
) I-Entity
servers I-Entity
' I-Entity
URLs I-Entity
. O
 
All O
the O
URLs O
were O
down O
when O
we O
started O
our O
analysis O
. O
 
Those O
C&Cs O
were O
compromised O
legitimate O
websites O
, O
which O
is O
standard O
operating O
procedure O
for O
Animal O
Farm O
. O
 
" O
Version O
" O
: O
Dino O
's O
code O
version; O
here O
set O
to O
" O
1.2 O
" O
, O
which O
is O
confirmed O
by O
the O
" O
din12 O
" O
folder O
used O
in O
one O
of O
the O
C&C O
URLs O
. O
 
For O
the O
record O
, O
a O
" O
d13 O
" O
folder O
has O
been O
seen O
on O
another O
Animal O
Farm O
C&C O
( O
see O
" O
3.7 O
Calling O
home O
" O
of O
Marschalek O
's O
Babar O
report O
) O
, O
indicating O
that O
Dino O
version O
1.3 O
has O
also O
likely O
been O
deployed O
at O
some O
point O
. O
 
" O
BD_Keys O
" O
and O
" O
CC_Keys O
" O
contain O
cryptographic O
keys O
to O
encrypt B-Action
the O
network B-Entity
communications I-Entity
with B-Modifier
C&C O
servers B-Entity
. O
 
Their O
values O
start O
with O
the O
word O
" O
MAGICBOX O
" O
. O
 
The O
three O
last O
keys O
are O
displayed O
with O
obfuscated O
names O
( O
" O
xT0rvwz O
" O
, O
" O
tr4qa589 O
" O
and O
" O
jopcft4 O
T O
" O
) O
and O
store O
parameters O
for O
the O
custom O
file O
system O
we O
will O
describe O
later O
. O
 
The O
following O
Table O
lists O
the O
commands O
accepted O
by O
this O
Dino O
binary O
with O
the O
names O
chosen O
by O
the O
developers O
. O
 
Each O
of O
those O
commands O
can O
take O
one O
or O
more O
arguments O
. O
 
One O
command O
of O
particular O
interest O
is O
" O
search O
" O
, O
which O
allows O
the B-Entity
operators I-Entity
to O
look B-Action
for I-Action
files B-Entity
very O
precisely O
. O
 
For O
example O
, O
it O
can O
provide O
all O
files O
with O
a O
" O
.doc O
" O
extension O
, O
the O
size O
of O
which O
is O
bigger O
than O
10 O
kilobytes O
, O
and O
that O
were O
modified O
in O
the O
last O
3 O
days O
. O
 
We O
believe O
this O
exfiltration O
of O
files O
to O
be O
Dino O
's O
end O
goal O
. O
 
At O
startup O
Dino O
executes O
successively O
the O
commands O
stored O
in O
the O
" O
InitialCommands O
" O
field O
in O
its O
configuration; O
in O
the O
sample O
we O
analyzed O
they O
are O
. O
 
Those O
commands O
serve O
as O
a O
reconnaissance O
step O
for O
the O
operators O
. O
 
Their O
execution O
is O
managed O
by O
the O
CMDEXEC O
module O
, O
the O
commands O
being O
stored O
in O
a O
queue O
inside O
the O
CMDEXECQ O
module O
. O
 
The O
result B-Entity
is O
reported B-Action
to B-Modifier
the O
C&C B-Entity
server I-Entity
. O
 
After O
having O
described O
Dino O
's O
basics O
, O
we O
are O
now O
going O
to O
dig O
into O
two O
particularly O
interesting O
components; O
first O
, O
a O
custom O
file O
system O
used O
by O
the O
malware O
, O
and O
then O
the O
CRONTAB O
module O
in O
charge O
of O
task O
scheduling O
. O
 
Dino O
contains O
a B-Entity
custom I-Entity
file I-Entity
system I-Entity
named O
" O
ramFS O
" O
by O
its O
developers O
. O
 
It O
provides O
a O
complex O
data O
structure O
to O
store B-Action
files B-Entity
in B-Modifier
memory B-Entity
, O
each O
of O
them O
bearing O
a O
name O
corresponding O
to O
filenames O
used O
by O
usual O
file O
systems O
. O
 
RamFS O
also O
comes O
with O
a O
set O
of O
custom O
commands O
that O
can O
be O
stored O
in O
files O
and O
executed O
. O
 
It O
should O
be O
noticed O
that O
ramFS O
is O
also O
present O
in O
other O
Animal O
Farm O
binaries O
( O
see O
attribution O
paragraph O
below O
) O
, O
but O
since O
we O
are O
unaware O
of O
previous O
analysis O
of O
ramFS O
, O
we O
are O
describing O
our O
findings O
here O
. O
 
RamFS O
content O
is O
initially O
stored O
encrypted O
in O
Dino O
's O
configuration O
under O
the O
key O
" O
xT0rvwz O
" O
, O
whereas O
the O
corresponding O
RC4 O
key O
is O
stored O
under O
the O
key O
" O
tr4qa589 O
" O
. O
 
Once O
the O
file O
system O
has O
been O
decrypted O
, O
it O
is O
stored O
in O
memory O
as O
a O
linked O
list O
of O
512 O
byte O
memory O
chunks O
, O
each O
one O
of O
them O
being O
individually O
RC4 O
encrypted O
. O
 
When O
looking O
for O
a O
file O
in O
ramFS O
, O
each O
chunk O
is O
decrypted O
, O
processed O
and O
then O
re O
encrypted O
. O
 
Hence O
there O
are O
very O
few O
noticeable O
traces O
of O
ramFS O
during O
its O
use O
. O
 
Here O
are O
some O
high O
level O
characteristics O
of O
this O
file O
system O
. O
 
Several O
commands B-Entity
can O
be O
executed B-Action
in B-Modifier
the O
context B-Entity
of I-Entity
ramFS I-Entity
, O
as O
listed O
in O
the O
following O
Table O
. O
 
In O
the O
case O
of O
Dino B-Entity
, O
ramFS O
serves O
as O
protected O
storage O
for O
one O
specific O
file O
containing O
the O
instructions O
to O
remove B-Action
the O
malware B-Entity
from B-Modifier
the O
machine B-Entity
. O
 
The O
developers O
named O
this O
file O
the O
" O
cleaner O
" O
and O
it O
is O
executed O
when O
Dino O
receives O
the O
command O
" O
killBD O
" O
( O
the O
" O
BD O
" O
acronym O
is O
the O
developers O
' O
designation O
of O
the O
malware O
) O
. O
 
Figure O
2 O
shows O
the O
code O
responsible O
for O
executing O
this O
cleaner O
file O
. O
 
First O
, O
it O
retrieves O
the O
name O
of O
the O
file O
from O
Dino O
's O
configuration O
( O
" O
a.ini O
" O
) O
, O
then O
it O
retrieves O
the O
key O
to O
decrypt O
ramFS O
, O
and O
it O
finally O
mounts O
the O
file O
system O
in O
memory O
in O
order O
to O
execute O
the O
cleaner O
file O
stored O
inside O
. O
 
The O
verbosity O
of O
the O
error O
messages O
makes O
it O
particularly O
easy O
to O
understand O
the O
purpose O
of O
the O
code O
. O
 
The O
cleaner B-Entity
file I-Entity
contains O
the O
string O
" O
INSTALL O
A O
" O
wusvcd O
" O
U O
" O
which O
, O
once O
executed O
, O
will O
uninstall B-Action
the O
malware B-Entity
from B-Modifier
the O
machine B-Entity
– O
" O
wusvcd O
" O
being O
the O
name O
used O
to O
register O
Dino O
on O
the O
machine O
. O
 
Hence O
, O
ramFS B-Entity
serves B-Action
as B-Modifier
a O
protected B-Entity
container I-Entity
for I-Entity
files I-Entity
to I-Entity
be I-Entity
executed I-Entity
on I-Entity
the I-Entity
machine I-Entity
, O
offering B-Action
a O
disposable B-Entity
execution I-Entity
environment I-Entity
to I-Entity
the I-Entity
operators I-Entity
and O
leaving B-Action
very O
few B-Entity
traces I-Entity
on I-Entity
the I-Entity
system I-Entity
. O
 
The O
commands O
" O
cronadd O
" O
, O
" O
cronlist O
" O
and O
" O
crondel O
" O
serve O
respectively O
to O
add B-Action
, O
list O
, O
and O
remove O
scheduled B-Entity
tasks I-Entity
registered O
in O
the O
CRONTAB O
module O
. O
 
Those O
tasks O
are O
Dino O
's O
commands O
. O
 
The O
syntax O
to O
define O
scheduled O
tasks O
is O
similar O
to O
the O
one O
used O
by O
the O
cron O
Unix O
command O
. O
 
In O
particular O
the O
time O
at O
which O
to O
run O
a O
command O
is O
given O
by O
a O
string O
following O
the O
format O
" O
minute O
hour O
day O
month O
year O
dayofweek O
" O
. O
 
Alternatively O
, O
this O
string O
can O
be O
replaced O
by O
" O
@boot O
" O
for O
a O
command O
to O
run O
at O
each O
startup O
– O
whereas O
some O
Unix O
cron O
implementations O
accept O
" O
@reboot O
" O
. O
 
As O
an O
example O
, O
here O
is O
the O
output O
of O
the O
" O
cronlist O
" O
command O
after O
a O
" O
wakeup O
" O
command O
has O
been O
scheduled O
to O
run O
on O
7th O
April O
2015 O
at O
15:44 O
. O
 
As O
we O
can O
see O
, O
each O
entry O
is O
identified O
by O
an O
" O
I O
d O
" O
, O
an O
incrementing O
hexadecimal O
number O
starting O
at O
0xC0 O
. O
 
The O
purpose O
of O
the O
" O
Local O
" O
field O
remains O
unclear O
( O
the O
other O
possible O
value O
being O
" O
l O
" O
) O
. O
 
The O
" O
Count O
" O
parameter O
counts O
the O
number O
of O
times O
a O
command O
has O
been O
executed O
, O
" O
1 O
" O
indicating O
the O
command O
will O
be O
executed O
only O
once O
. O
 
Finally O
, O
the O
" O
Visibility O
" O
field O
defines O
whether O
the O
command O
execution O
will O
be O
reported O
to O
the O
C&C O
( O
the O
other O
possible O
value O
being O
" O
Silent O
" O
) O
. O
 
The O
amount O
of O
shared O
code O
between O
Dino O
and O
known O
Animal O
Farm O
malware O
leaves O
very O
little O
doubt O
that O
Dino O
belongs O
to O
Animal O
Farm O
's O
arsenal O
. O
 
Among O
these O
shared O
features O
, O
we O
can O
cite O
the O
following O
. O
 
At O
the O
very O
beginning O
of O
Dino B-Entity
execution O
, O
the B-Entity
current I-Entity
process I-Entity
name I-Entity
is O
checked B-Action
against B-Modifier
process O
names B-Entity
used I-Entity
by I-Entity
some I-Entity
sandboxes I-Entity
. O
 
A O
very O
similar O
check O
( O
against O
" O
klavme O
" O
, O
" O
myapp O
" O
, O
" O
TESTAPP O
" O
and O
" O
afyjevmv.exe O
" O
) O
is O
present O
in O
Bunny O
samples O
, O
and O
in O
some O
first O
stage O
implants O
deployed O
by O
Animal O
Farm O
. O
 
To O
hide O
its O
calls O
to O
certain O
API O
functions O
, O
Dino O
employs O
a O
classic O
Animal O
Farm O
ploy O
: O
a O
hash O
is O
calculated O
from O
the O
function O
's O
name O
and O
used O
to O
look O
for O
the O
address O
of O
the O
API O
function O
. O
 
The O
actual O
hashing O
algorithm O
used O
in O
Dino O
is O
the O
same O
that O
was O
used O
in O
Casper O
, O
namely O
a O
combination O
of O
rotate O
left O
( O
ROL O
) O
of O
7 O
bits O
and O
exclusive O
or O
( O
XOR O
) O
operations O
. O
 
The O
Dino O
's O
custom O
file O
system O
– O
the O
so O
called O
ramFS O
– O
is O
present O
in O
several O
droppers O
used O
by O
Animal O
Farm O
. O
 
In O
those O
binaries O
the O
file O
system O
serves O
to O
set O
the O
persistence O
of O
the O
payload O
. O
 
For O
example O
, O
here O
is O
the O
command O
executed O
by O
some O
NBOT O
droppers O
in O
the O
context O
of O
ramFS O
. O
 
As O
a O
final O
indication O
that O
Dino O
belongs O
to O
Animal O
Farm O
menagerie O
, O
it O
is O
noticeable O
that O
the O
output O
of O
Dino O
's O
sysinfo O
command O
looks O
like O
an O
updated O
version O
of O
the O
" O
beacon O
" O
from O
the O
SNOWBALL O
implant O
described O
in O
the O
leaked O
CSE O
slides O
– O
part O
of O
operation O
SNOWGLOBE O
, O
which O
led O
to O
the O
discovery O
of O
Babar O
. O
 
Dino O
's O
sysinfo O
example O
output O
Login O
/ O
Domain O
( O
owner O
) O
: O
Administrator O
/ O
JOHN O
( O
john O
) O
Computer O
name O
: O
JOHN O
Organization O
( O
country O
) O
. O
 
( O
United O
States O
) O
RecId O
: O
11173 O
01 O
PRS O
MaxDelay O
: O
3600 O
Version O
: O
1.2 O
OS O
version O
( O
SP O
) O
: O
5.1 O
( O
Service O
Pack O
3 O
) O
WOW64 O
: O
No O
Default O
browser O
: O
firefox.exe O
IE O
version O
: O
Mozilla/4.0 O
( O
compatible; O
MSIE O
7.0; O
Win32 O
) O
First O
launch O
: O
04/01/2015 O
– O
18:31:14 O
Time O
to O
kill O
: O
N O
/ O
A O
Last O
launch O
: O
04/01/2015 O
– O
19:21:44 O
Mode O
: O
N O
/ O
A O
| O
Rights O
: O
Admin O
| O
UAC O
: O
No O
ID O
: O
4635BEF0 O
D89D O
11E4 O
B283 O
000C O
29FD2872 O
InstallAv O
: O
0 O
Inj O
: O
Yes O
SNOWBALL O
implant O
beacon O
All O
these O
indicators O
together O
make O
us O
very O
confident O
that O
Dino O
was O
developed O
by O
the O
Animal O
Farm O
group O
. O
 
Dino O
adds O
at O
least O
two O
more O
indicators O
to O
those O
already O
documented O
suggesting O
that O
Animal O
Farm O
developers O
are O
French O
speaking O
. O
 
Dino O
's O
binary O
contains O
a O
resource O
whose O
language O
code O
value O
is O
1036 O
. O
 
The O
original O
purpose O
of O
this O
language O
code O
is O
to O
allow O
developers O
to O
provide O
resources O
( O
menus O
, O
icons O
, O
version O
information O
… O
) O
for O
different O
locations O
in O
the O
world O
in O
the O
corresponding O
language O
. O
 
Interestingly O
, O
when O
a O
developer O
does O
not O
manually O
specify O
the O
language O
code O
, O
the O
compiler O
sets O
it O
to O
the O
language O
of O
the O
developer O
's O
machine O
. O
 
So O
, O
which O
language O
corresponds O
to O
the O
value O
1036 O
, O
or O
0x40c O
in O
hexadecimal O
? O
French O
( O
France O
) O
. O
 
Of O
course O
a O
non O
French O
speaking O
developer O
could O
have O
deliberately O
set O
this O
value O
to O
mislead O
attribution O
efforts O
. O
 
But O
in O
more O
recent O
Animal O
Farm O
binaries O
( O
for O
example O
Casper O
) O
, O
this O
language O
code O
has O
been O
set O
to O
the O
classical O
English O
( O
USA O
) O
language O
code O
. O
 
Therefore O
, O
it O
seems O
that O
Animal O
Farm O
developers O
forgot O
to O
set O
this O
value O
in O
their O
first O
creations O
, O
realized O
their O
mistake O
at O
some O
point O
, O
and O
decided O
to O
set O
a O
standard O
value O
. O
 
Someone O
using O
the O
language O
code O
as O
a O
false O
flag O
would O
have O
likely O
kept O
the O
strategy O
going O
. O
 
For O
the O
record O
, O
this O
Dino O
sample O
is O
not O
the O
only O
Animal O
Farm O
binary O
with O
1036 O
as O
language O
code O
. O
 
Dino O
's O
binary O
is O
statically O
linked O
with O
the O
GnuMP O
library O
, O
which O
is O
used O
to O
manipulate O
big O
numbers O
in O
cryptography O
algorithms O
. O
 
The O
GnuMP O
code O
in O
Dino O
contains O
file O
paths O
coming O
from O
the O
developer O
's O
machine O
. O
 
As O
the O
attentive O
reader O
has O
probably O
guessed O
, O
" O
arithmetique O
" O
is O
the O
French O
translation O
of O
" O
arithmetic O
" O
. O
 
Dino O
's O
binary O
shows O
an O
intense O
development O
effort O
, O
from O
custom O
data O
structures O
to O
a O
homemade O
file O
system O
. O
 
As O
with O
other O
Animal O
Farm O
binaries O
, O
it O
bears O
the O
mark O
of O
professional O
and O
experienced O
developers O
. O
 
But O
Dino O
also O
shows O
a O
poor O
knowledge O
, O
or O
interest O
, O
from O
these O
developers O
in O
anti O
analysis O
techniques O
– O
contrary O
to O
what O
was O
seen O
in O
Casper O
– O
as O
demonstrated O
, O
for O
example O
, O
by O
the O
verbosity O
of O
some O
Dino O
's O
log O
messages O
. O
 
All O
those O
messages O
provide O
substantial O
help O
in O
understanding O
Dino O
's O
internal O
workings O
. O
 
One O
will O
also O
appreciate O
the O
numerous O
misspellings O
contained O
in O
the O
messages O
. O
 
Regarding O
Dino O
's O
victims O
, O
we O
know O
very O
little O
except O
that O
they O
were O
located O
in O
Iran O
in O
2013 O
. O
 
This O
is O
in O
accordance O
with O
the O
victimology O
described O
by O
Canada O
's O
CSE O
in O
its O
presentation O
. O
 
That O
leads O
us O
to O
the O
final O
point O
of O
this O
blog O
: O
several O
signs O
suggest O
that O
Dino O
's O
creators O
are O
French O
speaking O
developers O
. O
 
These O
signs O
add O
to O
the O
pretty O
long O
list O
of O
indicators O
already O
supporting O
this O
hypothesis O
, O
in O
particular O
the O
ones O
mentioned O
by O
Canada O
's O
CSE O
. O
 
Author O
Joan O
Calvet O
, O
ESET O
 
