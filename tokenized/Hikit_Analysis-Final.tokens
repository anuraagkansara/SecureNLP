Hikit O
consists O
of O
at B-Entity
least I-Entity
two I-Entity
generations I-Entity
of I-Entity
malware I-Entity
that O
provides B-Action
basic B-Entity
RAT I-Entity
functionality I-Entity
. O
 
The B-Entity
first I-Entity
generation I-Entity
of I-Entity
Hikit I-Entity
( I-Entity
referred I-Entity
to I-Entity
as I-Entity
'' I-Entity
Gen I-Entity
1 I-Entity
'' I-Entity
) I-Entity
operates B-Action
as B-Modifier
a B-Entity
server I-Entity
and O
requires O
an O
externally O
exposed O
network O
interface O
in O
order O
for O
an B-Entity
attacker I-Entity
to O
access B-Action
the B-Entity
victim I-Entity
machine I-Entity
. O
 
The B-Entity
second I-Entity
generation I-Entity
of I-Entity
Hikit I-Entity
( I-Entity
referred I-Entity
to I-Entity
as I-Entity
'' I-Entity
Gen I-Entity
2 I-Entity
'' I-Entity
) I-Entity
uses O
the O
more O
traditional O
client O
model O
and O
beacons B-Action
out B-Modifier
to I-Modifier
an B-Entity
attacker I-Entity
's I-Entity
C2 I-Entity
server I-Entity
. O
 
While O
the O
communication O
models O
shifted O
dramatically O
between O
Gen O
1 O
and O
Gen O
2 O
, O
both B-Entity
generations I-Entity
of I-Entity
Hikit I-Entity
retain B-Action
the B-Entity
same I-Entity
basic I-Entity
RAT I-Entity
function I-Entity
consisting I-Entity
of I-Entity
remote I-Entity
command I-Entity
shell I-Entity
, I-Entity
file I-Entity
management I-Entity
, I-Entity
network I-Entity
proxy I-Entity
and I-Entity
port I-Entity
forwarding I-Entity
. O
 
Both O
Gen O
1 O
and O
Gen O
2 O
sub-families O
of O
Hikit O
consist O
of O
a B-Entity
main I-Entity
DLL I-Entity
( I-Entity
referred I-Entity
to I-Entity
as I-Entity
'' I-Entity
the I-Entity
DLL I-Entity
'' I-Entity
) I-Entity
that O
contains B-Action
the B-Entity
RAT I-Entity
functionality I-Entity
; O
a O
kernel O
driver O
( O
referred O
to O
as O
'' O
the O
Driver O
'' O
) O
with O
Gen O
2 O
also O
employs O
an O
additional O
component O
: O
a O
loader O
executable O
. O
 
The O
driver O
component O
of O
Gen O
1 O
and O
Gen O
2 O
are O
drastically O
different O
in O
their O
operation O
and O
intent O
. O
 
For O
the O
Gen O
1 O
sub-family O
of O
Hikit O
, O
the O
driver O
acts O
as O
a O
NDIS O
( O
network O
) O
driver O
that O
is O
responsible O
for O
interfacing O
the O
DLL O
to O
the O
network O
while O
preventing O
a O
direct O
WinSock O
interface O
from O
occurring O
. O
 
The B-Entity
Gen I-Entity
1 I-Entity
Driver I-Entity
listens B-Action
to B-Modifier
network B-Entity
traffic I-Entity
arriving I-Entity
at I-Entity
the I-Entity
local I-Entity
network I-Entity
interface I-Entity
and O
waits O
for O
a O
specific O
trigger O
string O
. O
 
The O
trigger O
string O
varies O
by O
Driver O
and O
DLL O
sample O
. O
 
The B-Entity
Gen I-Entity
2 I-Entity
Driver I-Entity
is O
a O
simpler O
system O
driver O
that O
acts O
as O
a O
rootkit O
to O
hide B-Action
processes B-Entity
, I-Entity
registry I-Entity
keys I-Entity
and I-Entity
network I-Entity
connections I-Entity
associated I-Entity
with I-Entity
Gen I-Entity
2 I-Entity
activity I-Entity
on I-Entity
the I-Entity
victim I-Entity
's I-Entity
system I-Entity
. O
 
Gen O
2 O
uses O
a O
standard O
client-server O
malware O
model O
meaning O
that O
the O
malware O
no O
longer O
requires O
a O
direct O
Internet-facing O
network O
card O
, O
no O
longer O
uses O
a O
network O
driver O
for O
networking O
, O
and O
provides O
the O
ability O
to O
network O
multiple O
Gen O
2 O
samples O
behind O
a O
firewall O
with O
greater O
ease O
( O
from O
the O
attacker's O
perspective O
) O
. O
 
The O
Gen O
2 O
sub-family O
, O
however O
, O
no O
longer O
employs O
network O
stealth O
provided O
by O
the O
Gen O
1 O
network O
driver O
which O
exposes O
the O
C2 O
server O
addresses O
to O
analysts O
. O
 
Each O
of O
the O
Hikit O
generations O
contains O
multiple O
sub-generations O
as O
the O
author O
( O
s O
) O
of O
Hikit O
have O
evolved O
their O
code O
over O
time O
. O
 
There O
is O
a O
noticeable O
steep O
improvement O
over O
the O
code O
base O
of O
Gen O
1 O
Hikit O
family O
during O
its O
2011 O
development O
period O
. O
 
The O
Gen O
2 O
sub-generations O
share O
a O
similar O
improvement O
scale O
between O
late O
2011 O
and O
late O
2013 O
. O
 
The O
earliest O
known O
Hikit O
sample O
dates O
back O
to O
31 O
March O
2011 O
. O
 
Known O
as O
the O
Gen O
1.0 O
sub-generation O
of O
Hikit O
Gen O
1 O
, O
the O
first O
known O
sample O
of O
Hikit O
deviated O
from O
the O
later O
traditional O
Gen O
1 O
model O
. O
 
The O
Gen O
1.0 O
sample O
was O
a O
standalone O
executable O
whereas O
subsequent O
Gen O
1 O
sub-generations O
use O
a O
DLL O
running O
as O
a O
service O
. O
 
The O
Gen O
1.0 O
sample O
is O
clearly O
a O
work-in-progress O
. O
 
The O
Gen O
1.0 O
sample O
, O
while O
different O
than O
subsequent O
sub-generations O
, O
does O
still O
rely O
on O
the O
Driver O
component O
and O
for O
the O
most O
part O
the O
structure O
of O
the O
code O
does O
not O
differ O
much O
going O
forward O
into O
the O
Gen O
1 O
evolution O
. O
 
Less O
than O
three O
weeks O
after O
Gen O
1.0 O
, O
the O
author O
( O
s O
) O
of O
Hikit O
move O
into O
Gen O
1.1 O
. O
 
The O
notable O
change O
is O
that O
the O
Hikit O
model O
of O
using O
a O
DLL O
and O
driver O
, O
which O
has O
remained O
until O
present O
day O
, O
comes O
into O
being O
. O
 
The O
code O
matures O
slightly O
between O
Gen O
1.0 O
and O
Gen O
1.1 O
but O
the O
functionality O
does O
not O
change O
. O
 
Both O
Gen O
1.0 O
and O
Gen O
1.1 O
use O
plaintext O
data O
transmissions O
. O
 
Development O
appears O
to O
halt O
on O
Gen O
1 O
for O
4 O
months O
between O
20 O
June O
2011 O
and O
23 O
October O
2011 O
based O
on O
a O
lack O
of O
available O
samples O
found O
. O
 
During O
this O
time O
the O
development O
of O
Hikit O
appears O
to O
change O
locations O
. O
 
Gen O
1 O
samples O
have O
Program O
Database O
( O
PDB O
) O
file O
strings O
that O
identify O
the O
file O
path O
of O
the O
Hikit O
source O
code O
. O
 
For O
Gen O
1.0 O
and O
Gen O
1.1 O
samples O
, O
the O
file O
path O
of O
the O
Hikit O
source O
code O
is O
consistently O
h O
: O
\JmVodServer\hikit O
. O
 
Starting O
with O
Gen O
1.2 O
, O
the O
file O
path O
switches O
to O
e O
: O
\SourceCode\hikitnew O
. O
 
It O
is O
at O
this O
time O
that O
the O
functionality O
of O
Hikit O
Gen O
1 O
begins O
to O
mature O
. O
 
In O
Gen O
1.2 O
, O
the B-Entity
communication I-Entity
between I-Entity
the I-Entity
infected I-Entity
machine I-Entity
and I-Entity
the I-Entity
attacker I-Entity
is B-Action
encrypted I-Action
using B-Modifier
an B-Entity
XOR I-Entity
mask I-Entity
. O
 
A O
more O
subtle O
change O
is O
the O
renaming O
of O
the O
'' O
socks5 O
'' O
command O
to O
simply O
'' O
proxy O
'' O
within O
the O
code O
. O
 
The O
code O
within O
Hikit O
begins O
to O
mature O
but O
the O
overall O
functionality O
does O
not O
expand O
beyond O
the O
original O
set O
of O
commands O
found O
in O
Gen O
1.0 O
. O
 
The O
other O
remarkable O
change O
within O
the O
Gen O
1.1 O
to O
Gen O
1.2 O
development O
is O
the O
way O
in O
which O
the O
session O
handshake O
trigger O
operates O
. O
 
In O
Gen O
1.0 O
and O
Gen O
1.1 O
, O
the O
DLL O
instructs O
the O
Driver O
to O
listen O
for O
a O
specific O
string O
( O
typically O
a O
HTTP O
request O
string O
) O
and O
responds O
with O
another O
string O
. O
 
In O
Gen O
1.2 O
, O
the O
Driver O
has O
a O
hardcoded O
trigger O
string O
( O
a O
specific O
HTTP O
request O
string O
) O
and O
the O
DLL O
instructs O
the O
Driver O
to O
inspect O
a O
specific O
HTTP O
header O
field O
for O
a O
specific O
hexadecimal O
value O
. O
 
This O
moves O
Gen O
1.2 O
into O
more O
of O
a O
username/password O
authentication O
scheme O
whereas O
previous O
sub-generations O
could O
potentially O
be O
accessed O
by O
accidental O
HTTP O
requests O
. O
 
At O
the O
same O
time O
, O
the O
Driver O
responds O
with O
a O
specific O
value O
with O
in O
the O
Etag O
HTTP O
header O
field O
. O
 
This O
places O
Gen O
1.2 O
into O
a O
more O
stealth O
position O
as O
a O
random O
, O
non-HTTP O
compliant O
response O
from O
Gen O
1.0 O
and O
Gen O
1.1 O
samples O
is O
more O
obvious O
than O
a O
legitimate O
HTTP O
response O
with O
a O
specially O
crafted O
Etag O
header O
. O
 
Gen O
1.2 O
's O
development O
cycle O
appears O
to O
exist O
between O
23 O
October O
2011 O
and O
2 O
November O
2011 O
with O
several O
new O
samples O
being O
found O
on O
the O
Internet O
having O
legitimate O
compile O
times O
during O
this O
time O
window O
. O
 
There O
is O
, O
however O
, O
evidence O
that O
the O
development O
of O
Hikit O
Gen O
1 O
and O
Gen O
2 O
overlap O
by O
several O
months O
. O
 
The O
earliest O
Gen O
2 O
sample O
known O
to O
exist O
dates O
to O
28 O
August O
2011 O
, O
two O
months O
before O
the O
first O
known O
Gen O
1.2 O
sample O
. O
 
The O
last O
known O
Gen O
1.2 O
sample O
, O
and O
by O
extension O
, O
the O
last O
known O
Gen O
1 O
sample O
, O
dates O
to O
9 O
April O
2012 O
. O
 
The O
first O
known O
Gen O
2 O
sub-generation O
, O
Gen O
2.0 O
Alpha O
, O
much O
like O
Gen O
1.0 O
, O
represents O
an O
early O
development O
version O
of O
the O
Gen O
2 O
Hikit O
sub-family O
. O
 
Gen O
2.0 O
Alpha O
is O
a O
stand-alone O
Windows O
console O
executable O
that O
can O
run O
as O
a O
service O
executable O
. O
 
Gen O
2.0 O
Alpha O
supports O
the O
same O
commands O
as O
Gen O
1.2 O
with O
an O
additional O
command O
that O
returns O
the O
infection O
's O
configuration O
information O
. O
 
On O
9 O
February O
2012 O
the O
first O
known O
sample O
for O
Gen O
2.0 O
Beta O
is O
compiled O
by O
the O
developer O
( O
s O
) O
of O
Hikit O
. O
 
Also O
a O
stand-alone O
console O
executable O
like O
Gen O
2.0 O
Alpha O
, O
the O
Gen O
2.0 O
Beta O
code O
changes O
internally O
without O
providing O
significant O
functionality O
improvements O
with O
the O
exception O
of O
now O
the O
executable O
uses O
a O
device O
driver O
to O
hide O
network O
, O
file O
, O
and O
registry O
artifacts O
related O
to O
its O
operation O
. O
 
Both O
Gen O
2.0 O
Alpha O
and O
Gen O
2.0 O
Beta O
still O
retain O
PDB O
file O
path O
information O
within O
their O
binaries O
. O
 
During O
the O
development O
phase O
of O
Gen O
2.0 O
Alpha O
, O
development O
of O
the O
Gen O
2.0 O
Alpha O
variants O
changes O
locations O
. O
 
First O
version O
of O
the O
Gen O
2.0 O
Alpha O
malware O
, O
from O
28 O
August O
2011 O
, O
has O
the O
PDB O
path O
located O
in O
H O
: O
\JmVodServer\Matrixnew2 O
whereas O
the O
file O
path O
for O
later O
Gen O
2.0 O
Alpha O
and O
Gen O
2.0 O
Beta O
binaries O
has O
the O
PDB O
path O
in O
E O
: O
\SourceCode\Matrixnew O
which O
suggests O
that O
the O
source O
code O
for O
both O
Gen O
1 O
and O
Gen O
2 O
existed O
on O
the O
same O
machine O
and O
moved O
at O
roughly O
the O
same O
time O
. O
 
This O
may O
indicate O
either O
a O
single O
developer O
or O
a O
team O
( O
or O
set O
of O
teams O
) O
with O
shared O
resources O
. O
 
The O
first O
known O
Gen O
2.1 O
binary O
has O
a O
compile O
date O
of O
17 O
April O
2012 O
. O
 
Gen O
2.1 O
represents O
the O
first O
Gen O
2 O
sub-generation O
to O
use O
an O
executable-based O
loader O
, O
DLL O
and O
driver O
model O
, O
a O
model O
that O
all O
subsequent O
Gen O
2 O
sub-generations O
employ O
. O
 
The O
functionality O
of O
the O
Gen O
2.1 O
sub-generation O
is O
the O
same O
as O
the O
previous O
generations O
with O
no O
new O
commands O
being O
introduced O
. O
 
Gen O
2.1 O
is O
the O
first O
sub-generation O
in O
the O
Gen O
2 O
sub-family O
to O
introduce O
64-bit O
binaries O
. O
 
The O
Gen O
2.2 O
sub-generation O
appears O
to O
have O
begun O
on O
20 O
July O
2012 O
. O
 
Gen O
2.2 O
is O
notable O
for O
altering O
where O
the O
configuration O
information O
of O
the O
RAT O
is O
stored O
and O
using O
both O
DLL-based O
and O
executable- O
based O
loaders O
. O
 
Also O
notable O
is O
the O
fact O
that O
the O
sub-generation O
spans O
a O
significant O
amount O
of O
time O
with O
intermittent O
periods O
of O
development O
. O
 
The O
bulk O
of O
the O
Gen O
2.2 O
samples O
that O
have O
the O
tell-tale O
marks O
of O
being O
the O
product O
of O
a O
builder O
have O
a O
compile O
date O
of O
26 O
July O
2013 O
, O
a O
full O
year O
after O
the O
first O
known O
Gen O
2.2 O
sample O
. O
 
Between O
21 O
July O
2012 O
and O
20 O
February O
2013 O
, O
there O
are O
no O
known O
Gen O
2.2 O
binaries O
. O
 
The O
two O
20 O
July O
2012 O
samples O
have O
different O
compile O
times O
indicating O
they O
were O
not O
the O
product O
of O
a O
builder O
but O
rather O
unique O
compilations O
. O
 
Between O
21 O
February O
2013 O
and O
27 O
February O
2013 O
, O
there O
are O
4 O
unique O
compilation O
dates O
for O
the O
DLL O
component O
with O
7 O
unique O
, O
known O
Gen O
2.2 O
DLLs O
. O
 
The O
bulk O
of O
Gen O
2.2 O
samples O
have O
a O
compile O
date O
of O
26 O
July O
2013 O
. O
 
There O
are O
approximately O
25 O
known O
Gen O
2.2 O
DLLs O
with O
the O
26 O
July O
2013 O
compile O
date O
. O
 
The O
Gen O
2.2 O
sub-generation O
appears O
to O
exist O
through O
at O
least O
19 O
September O
2013 O
. O
 
The O
last O
known O
Gen O
2 O
sub-generation O
, O
Gen O
2.3 O
, O
began O
on O
12 O
December O
2013 O
. O
 
Gen O
2.3 O
is O
notable O
for O
its O
use O
of O
a O
legitimate O
SSL O
certificate O
as O
part O
of O
the O
handshake O
between O
the O
infected O
machine O
and O
the O
attacker O
's O
C2 O
. O
 
The B-Entity
DLL I-Entity
will O
send B-Action
a B-Entity
legitimate I-Entity
SSL I-Entity
certificate I-Entity
as B-Modifier
a B-Entity
means I-Entity
to I-Entity
disrupt I-Entity
heuristic I-Entity
IDS I-Entity
sensors I-Entity
that I-Entity
look I-Entity
for I-Entity
encrypted I-Entity
traffic I-Entity
. O
 
Another O
interesting O
aspect O
of O
the O
Gen O
2.3 O
sub-generation O
is O
that O
there O
is O
no O
longer O
a O
marker O
to O
designate O
the O
beginning O
of O
the O
embedded O
configuration O
. O
 
Gen O
2.1 O
and O
Gen O
2.2 O
uses O
a O
specific O
string O
to O
indicate O
the O
beginning O
of O
the O
embedded O
configuration O
presumably O
in O
order O
to O
allow O
the O
builder O
to O
locate O
the O
configuration O
space O
when O
constructing O
a O
new O
configuration O
for O
the O
binaries O
. O
 
Gen O
2.3 O
, O
however O
, O
uses O
a O
specific O
location O
instead O
, O
requiring O
the O
builder O
to O
calculate O
the O
specific O
location O
using O
the O
PE/COFF O
header O
of O
the O
binary O
. O
 
Also O
, O
while O
Gen O
2.1 O
and O
Gen O
2.2 O
retain O
the O
configuration O
within O
the O
DLL O
component O
, O
Gen O
2.3 O
stores O
the O
configuration O
within O
the O
loader O
component O
. O
 
This O
allows O
the O
attackers O
to O
configure O
the O
loader O
without O
having O
to O
update O
the O
DLL O
. O
 
The O
evolution O
of O
Hikit O
is O
a O
long O
and O
drawn O
out O
series O
of O
small O
, O
incremental O
development O
changes O
. O
 
The O
important O
take O
away O
from O
the O
evolution O
of O
Hikit O
is O
that O
the O
developers O
for O
Gen O
1 O
appear O
to O
have O
changed O
in O
late O
2011 O
and O
development O
of O
Gen O
2 O
has O
a O
several O
month O
overlap O
with O
the O
development O
and O
usage O
of O
Gen O
1 O
. O
 
The O
following O
table O
provides O
a O
quick O
reference O
to O
the O
generational O
( O
and O
sub-generational O
) O
designations O
of O
Hikit O
. O
 
The O
Driver O
component O
for O
Hikit O
varies O
based O
on O
the O
specific O
Hikit O
sub-family O
( O
Gen O
1 O
or O
Gen O
2 O
) O
. O
 
As O
such O
it O
is O
necessary O
to O
describe O
each O
in O
the O
context O
of O
its O
specific O
sub-family O
. O
 
The O
Driver O
component O
of O
Gen O
1 O
Hikit O
variants O
provides O
the O
interface O
between O
the O
victim O
's O
network O
interface O
card O
( O
NIC O
) O
and O
the O
DLL O
. O
 
The O
Driver O
is O
a O
NDIS O
( O
network O
) O
driver O
that O
integrates O
into O
the O
victim's O
network O
stack O
. O
 
The B-Entity
Driver I-Entity
intercepts B-Action
any B-Entity
and I-Entity
all I-Entity
network I-Entity
communication I-Entity
that I-Entity
traverses I-Entity
the I-Entity
Windows I-Entity
network I-Entity
stack I-Entity
and O
potentially O
removes O
the O
data O
from O
the O
network O
stack O
under O
very O
specific O
conditions O
. O
 
When O
the O
Driver O
removes O
data O
from O
the O
network O
stack O
, O
the O
Driver O
stores O
the O
removed O
data O
in O
local O
buffers O
for O
the O
Gen O
1 O
DLL O
to O
query O
against O
. O
 
The O
purpose O
of O
this O
behavior O
is O
to O
allow O
the B-Entity
DLL I-Entity
to O
interact B-Action
with B-Modifier
the B-Entity
network I-Entity
without B-Modifier
utilizes B-Entity
the I-Entity
WinSock I-Entity
API I-Entity
which I-Entity
could I-Entity
potentially I-Entity
reveal I-Entity
the I-Entity
presence I-Entity
of I-Entity
Hikit I-Entity
. O
 
In O
order O
to O
interact O
with O
the O
Driver O
, O
the O
DLL O
uses O
the O
function O
The O
Driver O
will O
remove O
data O
from O
the O
network O
stack O
only O
if O
a O
new O
channel O
is O
being O
established O
. O
 
A O
new O
channel O
occurs O
when O
the O
Driver O
detects O
a O
trigger O
string O
. O
 
The O
trigger O
string O
is O
typically O
a O
short O
form O
HTTP O
request O
with O
the O
following O
trigger O
strings O
found O
in O
the O
wild O
: O
Up O
to O
and O
including O
Gen O
1.1 O
Drivers O
required O
the O
DLL O
to O
specify O
the O
trigger O
string O
in O
addition O
to O
the O
authentication O
value O
whereas O
Gen O
1.2 O
Drivers O
had O
the O
trigger O
strings O
hardcoded O
. O
 
In O
Gen O
1.2 O
, O
whenever O
the O
Driver O
detects O
a O
trigger O
string O
, O
the O
Driver O
inspects O
the O
rest O
of O
the O
data O
received O
for O
the O
authentication O
value O
. O
 
If O
the O
token O
follows O
the O
trigger O
string O
( O
there O
is O
no O
specific O
limitation O
on O
how O
far O
from O
the O
trigger O
string O
the O
password O
token O
must O
be O
) O
, O
then O
the O
Driver O
generates O
a O
new O
channel O
that O
the O
DLL O
will O
use O
as O
the O
conduit O
between O
the O
DLL O
and O
the O
client O
. O
 
The O
Driver O
appears O
to O
be O
based O
off O
the O
NDIS O
example O
source O
code O
PassThru O
. O
 
More O
specifically O
, O
the O
author O
( O
s O
) O
of O
the O
Driver O
appear O
to O
have O
used O
the O
modified O
version O
of O
the O
PassThru O
example O
, O
PassThruEx O
, O
by O
James O
Antognini O
and O
Thomas O
Devine O
from O
a O
2003 O
blog O
post O
. O
 
The B-Entity
Gen I-Entity
2 I-Entity
sub-family I-Entity
, I-Entity
beginning I-Entity
with I-Entity
Gen I-Entity
2.0 I-Entity
Beta I-Entity
, O
employs B-Action
a B-Entity
Windows I-Entity
device I-Entity
driver I-Entity
( I-Entity
'' I-Entity
the I-Entity
Driver I-Entity
'' I-Entity
) I-Entity
to B-Modifier
hide B-Entity
aspects I-Entity
of I-Entity
the I-Entity
DLL I-Entity
's I-Entity
functionality I-Entity
from I-Entity
normal I-Entity
system I-Entity
processes I-Entity
. O
 
The O
Driver O
is O
a O
relatively O
straightforward O
piece O
of O
software O
. O
 
It O
does O
not O
attempt O
to O
obfuscate O
its O
functionality O
from O
static O
analysis O
and O
it B-Entity
hooks B-Action
a B-Entity
minimum I-Entity
number I-Entity
of I-Entity
kernel I-Entity
API I-Entity
functions I-Entity
in B-Modifier
order I-Modifier
to I-Modifier
hide B-Entity
different I-Entity
pieces I-Entity
of I-Entity
information I-Entity
. O
 
The O
Driver O
is O
based O
primarily O
on O
the O
open O
source O
Agony O
rootkit O
and O
it O
has O
evidence O
of O
some O
portions O
of O
the O
code O
coming O
directly O
from O
a O
Chinese O
blog O
. O
 
The O
Driver O
expose O
an O
IOCTL O
interface O
that O
supports O
the O
following O
OIDs O
: O
The B-Entity
Driver I-Entity
is O
capable O
of O
hiding B-Action
processes B-Entity
( O
by O
PID O
, O
not O
name O
) O
, O
system B-Entity
modules I-Entity
, O
services B-Entity
, O
network B-Entity
connections I-Entity
, O
listening B-Entity
ports I-Entity
, O
directories B-Entity
( O
and O
by O
extension O
, O
files B-Entity
) O
, O
as O
well O
as O
registry B-Entity
keys I-Entity
and I-Entity
values I-Entity
. O
 
In B-Modifier
order I-Modifier
to I-Modifier
hide B-Entity
these I-Entity
items I-Entity
, O
the B-Entity
Driver I-Entity
hooks B-Action
various B-Entity
Windows I-Entity
Kernel I-Entity
API I-Entity
calls I-Entity
. O
 
The O
following O
table O
maps O
the B-Entity
items I-Entity
the B-Entity
Driver I-Entity
can O
hide B-Action
to O
the B-Entity
API I-Entity
function I-Entity
that O
the B-Entity
Driver I-Entity
hooks B-Action
: O
In O
order O
to O
hide B-Action
services B-Entity
, O
the B-Entity
Driver I-Entity
will O
access B-Action
the B-Entity
memory I-Entity
of I-Entity
the I-Entity
services.exe I-Entity
process I-Entity
, O
locate O
the O
linked O
list O
of O
services O
and O
remove B-Action
the B-Entity
service I-Entity
entry I-Entity
that I-Entity
the I-Entity
Driver I-Entity
wishes I-Entity
to I-Entity
hide I-Entity
. O
 
This O
is O
a O
surprisingly O
invasive O
method O
to O
obfuscate B-Action
a B-Entity
process I-Entity
. O
 
Upon O
activation O
, O
the B-Entity
Driver I-Entity
will O
expose O
its O
interface O
by O
calling B-Action
IoCreateDevice B-Entity
with B-Modifier
the B-Entity
name I-Entity
\Device\agony I-Entity
( I-Entity
for I-Entity
Gen I-Entity
2.0 I-Entity
Beta I-Entity
samples I-Entity
) I-Entity
, I-Entity
\Device\HTTPS I-Entity
( I-Entity
for I-Entity
Gen I-Entity
2.1 I-Entity
samples I-Entity
) I-Entity
, I-Entity
\Device\advcachemgr I-Entity
( I-Entity
for I-Entity
Gen I-Entity
2.2 I-Entity
samples I-Entity
) I-Entity
or I-Entity
\Device\diskdump I-Entity
( I-Entity
for I-Entity
Gen I-Entity
2.3 I-Entity
samples I-Entity
) I-Entity
. O
 
The B-Entity
Driver I-Entity
also O
creates B-Action
a B-Entity
symbolic I-Entity
link I-Entity
to B-Modifier
the B-Entity
device I-Entity
using B-Modifier
the B-Entity
same I-Entity
name I-Entity
but I-Entity
under I-Entity
the I-Entity
\DosDevices\ I-Entity
tree I-Entity
. O
 
For O
reasons O
unknown O
, O
the O
authors O
of O
the O
Driver O
used O
code O
from O
a O
Chinese O
blog O
that O
details O
how O
to O
hide O
network O
connections O
on O
Windows O
Vista O
and O
later O
decided O
to O
keep O
the O
example O
IP O
address O
within O
the O
code O
. O
 
The B-Entity
Hikit I-Entity
family I-Entity
has O
supported B-Action
roughly B-Entity
the I-Entity
same I-Entity
set I-Entity
of I-Entity
commands I-Entity
since B-Modifier
the B-Entity
first I-Entity
known I-Entity
samples I-Entity
of I-Entity
Gen I-Entity
1.0 I-Entity
. O
 
Gen O
2.0 O
introduced O
a O
single O
command O
to O
provide O
insight O
into O
an O
infected O
machine O
's O
Hikit O
configuration O
( O
something O
that O
is O
not O
necessary O
for O
Gen O
1 O
variants O
since O
they O
are O
server-based O
) O
. O
 
The B-Entity
RAT I-Entity
supports B-Action
the B-Entity
following I-Entity
commands I-Entity
: O
The B-Entity
shell I-Entity
command I-Entity
activates B-Action
a B-Entity
remote I-Entity
shell I-Entity
on B-Modifier
the B-Entity
victim I-Entity
's I-Entity
computer I-Entity
. O
 
The O
remote O
shell O
function O
uses O
the O
standard O
pipe O
redirection O
method O
for O
interfacing O
a O
network O
application O
( O
in O
this O
case O
, O
the O
DLL O
) O
to O
a O
hidden O
command O
shell O
. O
 
The B-Entity
file I-Entity
command I-Entity
provides O
an O
attacker O
with O
a O
variety O
of O
disk O
access O
options O
such O
as O
listing B-Action
directories B-Entity
, O
changing O
the O
current O
directory O
, O
and O
uploading B-Action
and O
downloading B-Action
files B-Entity
. O
 
The O
connect O
function O
provides O
the O
functionality O
to O
allow O
one O
Hikit O
DLL O
to O
interface O
with O
another O
DLL O
of O
a O
similar O
version O
. O
 
The O
use O
of O
this O
functionality O
can O
best O
be O
illustrated O
by O
considering O
the O
fact O
that O
the O
Gen O
1 O
Driver O
requires O
an O
exposed O
network O
interface O
in O
order O
for O
an O
external O
attacker O
to O
access O
the O
Gen O
1 O
's O
RAT O
function O
. O
 
This O
would O
prohibit O
lateral O
movement O
within O
a O
victim O
's O
network O
as O
the O
bulk O
of O
any O
organization O
's O
network O
infrastructure O
is O
not O
directly O
exposed O
to O
the O
Internet O
. O
 
By O
using O
the O
connect O
command O
, O
an O
attacker O
can O
instruct O
the O
externally O
exposed O
Gen O
1 O
DLL O
to O
route O
traffic O
to O
a O
Gen O
1 O
DLL O
that O
is O
behind O
the O
firewall O
, O
effectively O
making O
the O
externally O
exposed O
Gen O
1 O
DLL O
a O
local O
router O
for O
Hikit O
traffic O
. O
 
The O
proxy O
( O
or O
socks5 O
) O
command O
allows O
an B-Entity
attacker I-Entity
to O
utilize B-Action
a B-Entity
Hikit-infected I-Entity
machine I-Entity
as B-Modifier
a B-Entity
proxy I-Entity
. O
 
Gen B-Entity
2 I-Entity
samples I-Entity
rely B-Action
on B-Modifier
a B-Entity
configuration I-Entity
in B-Modifier
order I-Modifier
to I-Modifier
know B-Entity
where I-Entity
the I-Entity
C2 I-Entity
server I-Entity
exists I-Entity
along O
with O
other O
operational O
aspects O
such O
as O
the O
name O
of O
its O
service O
and O
operational O
times O
. O
 
This O
information O
is O
important O
for O
the O
attacker O
to O
have O
access O
to O
in O
order O
to O
determine O
if O
any O
aspect O
of O
the O
configuration O
is O
out O
of O
date O
( O
thus O
requiring O
a O
new O
variant O
of O
the O
Gen O
2 O
binary O
to O
be O
configured O
and O
deployed O
) O
. O
 
The O
information O
command O
returns O
to O
the O
attacker O
the O
complete O
configuration O
and O
current O
state O
of O
the O
Gen O
2 O
malware O
. O
 
As O
the O
name O
implies O
, O
the O
exit O
command O
causes O
the O
DLL O
to O
discontinue O
the O
current O
connection O
. O
 
With O
the O
Gen O
1 O
sub-family O
using O
a O
server O
model O
and O
the O
Gen O
2 O
sub-family O
using O
the O
client O
model O
, O
understanding O
how O
each O
of O
the O
DLL O
components O
of O
the O
sub-families O
works O
is O
best O
done O
, O
as O
with O
the O
Driver O
above O
, O
in O
the O
context O
of O
the O
specific O
sub-family O
. O
 
As O
noted O
previously O
in O
this O
report O
, O
the O
Gen O
1 O
sub-family O
has O
several O
sub-generations O
but O
overall O
the O
functionality O
of O
the O
Gen O
1 O
sub-family O
has O
remained O
constant O
. O
 
With O
the O
exception O
of O
Gen O
1.0 O
, O
the O
functionality O
of O
Gen O
1 O
comes O
from O
the O
DLL O
component O
( O
Gen O
1.0 O
uses O
a O
stand-alone O
executable O
to O
achieve O
the O
same O
results O
) O
. O
 
The O
DLL O
operates O
as O
a O
service O
, O
requiring O
an B-Entity
attacker I-Entity
is B-Action
install I-Action
the B-Entity
DLL I-Entity
as B-Modifier
a B-Entity
service I-Entity
at B-Modifier
some B-Entity
point I-Entity
prior I-Entity
to I-Entity
activation I-Entity
. O
 
The O
DLL O
contains O
only O
two O
exports O
: O
DllEntryPoint O
and O
DllRegisterServer O
. O
 
Ultimately O
, O
both B-Entity
exports I-Entity
generate B-Action
a B-Entity
new I-Entity
thread I-Entity
of I-Entity
the I-Entity
same I-Entity
function I-Entity
( I-Entity
'' I-Entity
mainThread I-Entity
'' I-Entity
) I-Entity
. O
 
The O
difference O
between O
the O
two O
exports O
is O
that O
DllRegisterServer O
can O
take O
an O
optional O
command O
line O
argument O
of O
the O
letter O
'' O
u O
'' O
which O
will O
instruct O
the B-Entity
main I-Entity
thread I-Entity
to O
uninstall B-Action
the B-Entity
Gen I-Entity
1 I-Entity
system I-Entity
from B-Modifier
a B-Entity
victim I-Entity
's I-Entity
computer I-Entity
. O
 
If O
the O
uninstall O
argument O
exists O
, O
mainThread B-Entity
will O
simply O
remove B-Action
the B-Entity
Driver I-Entity
from B-Modifier
the B-Entity
victim I-Entity
's I-Entity
machine I-Entity
and O
terminate O
. O
 
The O
authors O
of O
Gen O
1 O
used O
freely O
available O
source O
code O
found O
online O
for O
their O
removal O
function O
. O
 
When O
the O
DLL O
activates O
, O
either O
by O
a O
call O
to O
DllEntryPoint O
or O
by O
calling B-Action
DllRegisterServer B-Entity
without B-Modifier
the B-Entity
u I-Entity
parameter I-Entity
, O
mainThread O
begins O
by O
verifying O
the O
version O
of O
the O
Driver O
installed O
on O
the O
victim O
's O
machine O
. O
 
This O
requires O
sending O
OID O
0x12C850 O
to O
the O
Driver O
and O
comparing O
the O
resulting O
32-bit O
value O
with O
the O
required O
driver O
version O
. O
 
If O
the O
version O
is O
incorrect O
( O
i.e O
. O
 
it O
does O
n't O
match O
the O
specified O
version O
) O
, O
the B-Entity
DLL I-Entity
installs B-Action
the B-Entity
version I-Entity
of I-Entity
the I-Entity
Driver I-Entity
found I-Entity
within I-Entity
the I-Entity
DLL I-Entity
's I-Entity
resource I-Entity
section I-Entity
( I-Entity
under I-Entity
the I-Entity
BIN I-Entity
resource I-Entity
tree I-Entity
) I-Entity
. O
 
With O
the O
Driver O
version O
verified O
( O
or O
forcibly O
corrected O
by O
installing B-Action
the B-Entity
appropriate I-Entity
Driver I-Entity
) O
, O
the O
DLL O
will O
instruct O
the O
Driver O
to O
use O
a O
specified O
string O
( O
for O
Gen O
1.0 O
and O
Gen O
1.1 O
samples O
) O
or O
a O
DWORD O
( O
for O
Gen O
1.2 O
samples O
) O
as O
the O
acknowledgment O
value O
to O
send O
to O
a O
connecting O
client O
who O
requests O
the O
appropriate O
URL O
. O
 
The O
DLL O
again O
checks O
the O
version O
of O
the O
Driver O
and O
, O
in O
some O
versions O
of O
the O
DLL O
, O
will O
print O
a O
message O
indicating O
the O
version O
of O
the O
Driver O
installed O
and O
report O
the O
'' O
Transate O
version O
'' O
( O
the O
word O
translate O
is O
misspelled O
within O
the O
binary O
) O
. O
 
It O
appears O
that O
the O
Driver O
and O
the O
communication O
protocol O
version O
do O
not O
necessarily O
have O
to O
match O
exactly O
, O
allowing O
the O
possibility O
that O
the O
Driver O
and O
the O
DLL O
could O
be O
compiled O
at O
separate O
times O
. O
 
If O
the O
Driver O
version O
is O
less O
than O
the O
'' O
Transate O
'' O
version O
( O
indicating O
that O
the O
Driver O
is O
a O
version O
too O
old O
to O
support O
the O
necessary O
communication O
protocols O
) O
, O
the O
DLL O
will O
, O
in O
some O
version O
of O
the O
DLL O
, O
print O
out O
a O
line O
to O
the O
screen O
indicating O
the O
DRIVERMINVERSION O
required O
along O
with O
the O
current O
Driver O
version O
. O
 
Following O
this O
, O
the B-Entity
DLL I-Entity
will O
then O
attempt O
to O
install B-Action
the B-Entity
correct I-Entity
version I-Entity
of I-Entity
the I-Entity
Driver I-Entity
prior B-Modifier
to I-Modifier
terminating B-Entity
. O
 
It O
is O
unclear O
why O
this O
code O
exists O
given O
that O
the O
DLL O
will O
check O
the O
Driver O
version O
and O
correct O
the O
Driver O
if O
necessary O
prior O
to O
reaching O
the O
portion O
of O
the O
code O
that O
reports O
the O
DRIVERMINVERSION O
. O
 
It O
is O
possible O
that O
the B-Entity
second I-Entity
Driver I-Entity
version I-Entity
check I-Entity
is O
a O
last O
ditch O
effort O
to O
ensure B-Action
the B-Entity
correct I-Entity
Driver I-Entity
is I-Entity
installed I-Entity
. O
 
The O
DLL O
enters O
an O
infinite O
loop O
where O
the O
DLL O
waits O
for O
the O
Driver O
to O
report O
a O
new O
channel O
exists O
. O
 
A O
channel O
represents O
an O
established O
connection O
between O
the O
Driver O
and O
an O
external O
party O
that O
has O
provided O
the O
proper O
initial O
request O
and O
, O
for O
Gen O
1.2 O
variants O
, O
provided O
the O
proper O
authentication O
value O
. O
 
When O
the O
Driver O
establishes O
a O
new O
channel O
, O
the B-Entity
DLL I-Entity
generates O
a O
runtime O
data O
structure O
before O
generating B-Action
a B-Entity
new I-Entity
thread I-Entity
( I-Entity
'' I-Entity
HikitThreadFunc I-Entity
'' I-Entity
) I-Entity
which I-Entity
will I-Entity
service I-Entity
any I-Entity
request I-Entity
coming I-Entity
from I-Entity
the I-Entity
new I-Entity
channel I-Entity
. O
 
This O
allows O
the O
DLL O
to O
service O
multiple O
channels O
at O
one O
time O
. O
 
The O
HikitThreadFunc O
function O
is O
, O
at O
its O
core O
, O
a O
simple O
wait O
and O
respond O
loop O
. O
 
The O
function O
begins O
by O
transmitting O
a O
Hikit O
command O
prompt O
to O
the O
client O
( O
Hikit O
> O
) O
before O
settling O
into O
an O
infinite O
loop O
of O
The O
communication O
scheme O
between O
the O
DLL O
and O
the O
client O
consists O
of O
a O
20 O
to O
24 O
byte O
header O
( O
for O
Gen O
1.0 O
and O
Gen O
1.1 O
) O
or O
a O
28 O
byte O
header O
( O
for O
Gen O
1.2 O
) O
followed O
by O
an O
optional O
payload O
. O
 
The O
format O
of O
the O
Gen O
1.0 O
and O
Gen O
1.1 O
header O
is O
as O
follows O
: O
While O
the O
Gen O
1.2 O
header O
is O
: O
For O
Gen O
1.0 O
and O
Gen O
1.1 O
samples O
, O
the O
magic O
field O
contains O
the O
string O
'' O
.. O
 
.. O
 
'' O
( O
two O
dots O
followed O
by O
a O
space O
then O
two O
more O
dots O
) O
. O
 
Whereas O
the O
key O
field O
in O
Gen O
1.2 O
samples O
contains O
a O
32-bit O
value O
that O
represents O
the O
XOR O
key O
for O
the O
remainder O
of O
the O
PacketHeader O
and O
any O
additional O
payload O
data O
. O
 
The O
XOR O
scheme O
works O
on O
32-bit O
chunks O
of O
data O
where O
each O
32-bit O
chunk O
of O
data O
is O
XOR O
'd O
against O
the O
key O
value O
. O
 
Version O
checking O
is O
important O
in O
all O
Gen O
1 O
variants O
. O
 
The B-Entity
dwHikitVersion I-Entity
field I-Entity
allows B-Action
the B-Entity
client I-Entity
and I-Entity
the I-Entity
DLL I-Entity
to B-Modifier
ensure B-Entity
that I-Entity
they I-Entity
have I-Entity
a I-Entity
compatible I-Entity
communication I-Entity
scheme I-Entity
in I-Entity
place I-Entity
prior B-Modifier
to I-Modifier
executing B-Entity
commands I-Entity
. O
 
Gen O
1 O
samples O
have O
a O
particular O
interest O
in O
the O
victim O
's O
locale O
language O
preferences O
. O
 
While O
it O
is O
typical O
for O
most O
RATs O
that O
provide O
remote O
shells O
to O
simply O
pass O
data O
unfiltered O
from O
client O
to O
server O
and O
server O
to O
client O
without O
regard O
to O
code O
pages O
, O
Gen O
1 O
samples O
take O
special O
care O
to O
record O
the O
code O
page O
and O
locale O
information O
in O
each O
and O
every O
packet O
header O
that O
traverses O
the O
divide O
between O
client O
and O
server O
and O
server O
and O
client O
. O
 
This O
could O
indicate O
that O
the O
authors O
of O
Gen O
1 O
understood O
from O
an O
early O
stage O
in O
the O
development O
of O
Gen O
1 O
that O
they O
would O
be O
attacking O
computer O
systems O
with O
different O
locales O
and O
code O
pages O
. O
 
The B-Entity
Gen I-Entity
2 I-Entity
sub-family I-Entity
, O
like O
Gen O
1.2 O
, O
uses B-Action
a B-Entity
DLL I-Entity
for B-Modifier
the B-Entity
core I-Entity
of I-Entity
its I-Entity
RAT I-Entity
functionality I-Entity
. O
 
In B-Modifier
order I-Modifier
for I-Modifier
the B-Entity
DLL I-Entity
to I-Entity
load I-Entity
, O
Gen B-Entity
2 I-Entity
( O
starting O
with O
Gen O
2.1 O
) O
uses B-Action
a B-Entity
loader I-Entity
application I-Entity
( O
referred O
to O
simply O
as O
'' O
the O
Loader O
'' O
) O
. O
 
The O
Loader O
comes O
in O
the O
form O
of O
a O
standard O
executable O
image O
or O
a O
DLL O
image O
. O
 
Despite O
the O
different O
models O
, O
both B-Entity
variants I-Entity
of I-Entity
the I-Entity
Loader I-Entity
load B-Action
the B-Entity
embedded I-Entity
DLL I-Entity
in B-Modifier
the B-Entity
exact I-Entity
same I-Entity
way I-Entity
. O
 
The O
only O
difference O
between O
the O
executable O
and O
DLL O
versions O
of O
the O
Loader O
comes O
in O
how O
they O
handle O
the O
initialization O
of O
the O
embedded O
DLL O
. O
 
Figure O
1 O
provides O
a O
side O
by O
side O
comparison O
of O
the O
startup O
routines O
for O
the O
executable O
and O
DLL O
Loaders O
. O
 
Both B-Entity
versions I-Entity
of I-Entity
the I-Entity
Loader I-Entity
begin O
by O
loading B-Action
the B-Entity
embedded I-Entity
DLL I-Entity
from B-Modifier
the B-Entity
Loader I-Entity
's I-Entity
resources I-Entity
( O
item O
102 O
under O
the O
Group O
Icons O
resource O
tree O
) O
, O
decrypting O
and O
decompressing O
the O
image O
into O
memory O
, O
then O
manually O
loading B-Action
the B-Entity
DLL I-Entity
into B-Modifier
memory B-Entity
using B-Modifier
a B-Entity
custom I-Entity
loading I-Entity
routine I-Entity
. O
 
The O
function O
LoadEmbeddedImage O
, O
as O
seen O
in O
part O
in O
Figure O
2 O
, O
is O
responsible O
for O
this O
operation O
. O
 
The O
Loader O
obfuscates O
many O
strings O
by O
using O
a O
simple O
XOR O
encoding O
scheme O
. O
 
Decryption O
of O
encoded O
strings O
consists O
of O
taking O
the O
first O
value O
of O
the O
string O
as O
the O
XOR O
key O
, O
XOR'ing O
all O
subsequent O
bytes O
until O
the O
result O
of O
the O
XOR O
returns O
0 O
. O
 
The O
decoding O
of O
the O
encoded O
strings O
is O
handled O
by O
the O
DecodeString O
function O
. O
 
The O
Loader O
stores O
the O
embedded O
DLL O
within O
a O
Group O
Icon O
resource O
within O
a O
legitimate O
icon O
image O
. O
 
In O
order O
to O
locate O
the O
embedded O
DLL O
, O
LoadEmbeddedImage O
will O
use O
the O
DecodeString O
function O
to O
decrypt O
the O
delimiter O
string O
( O
which O
is O
typically O
zzzzzzzzzz O
or O
yyyyyyyyyy O
) O
and O
then O
search O
the O
icon's O
resource O
memory O
for O
the O
delimiter O
string O
. O
 
Once O
located O
, O
LoadEmbeddedImage O
will O
use O
the O
first O
12 O
bytes O
immediately O
after O
the O
string O
as O
the O
information O
structure O
about O
the O
embedded O
DLL O
. O
 
The O
structure O
( O
seen O
below O
) O
defines O
the O
size O
of O
the O
embedded O
DLL O
within O
the O
icon O
's O
resource O
memory O
, O
the O
size O
of O
the O
DLL O
after O
it O
is O
decompressed O
and O
a O
4-byte O
XOR O
key O
that O
LoadEmbeddedImage O
must O
use O
to O
decode O
the O
embedded O
DLL O
prior O
to O
decompression O
. O
 
LoadEmbeddedImage B-Entity
copies B-Action
the B-Entity
compressed I-Entity
embedded I-Entity
DLL I-Entity
into B-Modifier
a B-Entity
newly I-Entity
allocated I-Entity
heap I-Entity
buffer I-Entity
and O
then O
calls B-Action
the B-Entity
function I-Entity
decodeBuffer I-Entity
( I-Entity
using I-Entity
the I-Entity
EncodingKey I-Entity
value I-Entity
) I-Entity
to B-Modifier
decrypt B-Entity
the I-Entity
embedded I-Entity
DLL I-Entity
. O
 
Another O
heap O
buffer O
is O
allocated O
with O
a O
size O
equal O
to O
the O
value O
of O
dwImageSizeDecompressed O
. O
 
The O
decompression O
buffer O
along O
with O
the O
now O
decoded O
compressed O
buffer O
are O
given O
to O
lzodecompress O
which O
decompresses O
the O
compressed O
image O
using O
the O
LZO1X O
algorithm O
. O
 
With O
the O
embedded O
DLL O
now O
decompressed O
into O
a O
heap O
buffer O
, O
LoadEmbeddedImage B-Entity
calls B-Action
ImageLoaderData B-Entity
: I-Entity
:LoadDll I-Entity
to O
manually O
load B-Action
the B-Entity
DLL I-Entity
into B-Modifier
memory B-Entity
. O
 
ImageLoaderData B-Entity
: I-Entity
:LoadDll I-Entity
interprets O
the O
PE/COFF O
header O
of O
the O
DLL O
image O
, O
loads B-Action
the B-Entity
image I-Entity
into B-Modifier
the B-Entity
appropriate I-Entity
memory I-Entity
configuration I-Entity
, O
performs O
the O
necessary O
relocation O
operations O
, O
and O
calls B-Action
the B-Entity
DllMain I-Entity
( I-Entity
DLL I-Entity
's I-Entity
entry I-Entity
point I-Entity
) I-Entity
function I-Entity
. O
 
After O
loading B-Action
the B-Entity
embedded I-Entity
DLL I-Entity
image I-Entity
into B-Modifier
memory B-Entity
, O
the B-Entity
Loader I-Entity
will O
either O
call B-Action
the B-Entity
DLL's I-Entity
StartServer I-Entity
or I-Entity
MatrixMain I-Entity
function I-Entity
depending O
on O
the O
type O
of O
Loader O
. O
 
The B-Entity
standalone I-Entity
Loaders I-Entity
use B-Action
the B-Entity
MatrixMain I-Entity
function I-Entity
while O
the B-Entity
DLL I-Entity
Loaders I-Entity
will O
call B-Action
the B-Entity
StartServer I-Entity
function I-Entity
. O
 
The B-Entity
Loaders I-Entity
, O
upon B-Modifier
unloading B-Entity
, O
will O
call B-Action
the B-Entity
StopServer I-Entity
function I-Entity
in B-Modifier
order I-Modifier
to I-Modifier
shut B-Entity
down I-Entity
the I-Entity
embedded I-Entity
DLL I-Entity
. O
 
The O
Gen O
2 O
DLL O
exposes O
five O
exported O
functions O
( O
besides O
the O
DllEntryPoint/DllMain O
) O
. O
 
MatrixMain B-Entity
and I-Entity
StartServer I-Entity
both O
ultimately O
generate B-Action
a B-Entity
new I-Entity
thread I-Entity
( O
using B-Modifier
the B-Entity
POSIX I-Entity
API I-Entity
function I-Entity
beginthreadex I-Entity
instead B-Modifier
of I-Modifier
the B-Entity
more I-Entity
common I-Entity
CreateThread I-Entity
) O
that O
contains O
the O
main O
loop O
of O
the O
Gen O
2 O
RAT O
functionality O
. O
 
MatrixMain O
, O
however O
, O
has O
added O
functionality O
. O
 
The O
prototype O
for O
MatrixMain O
is O
as O
follows O
: O
where O
Arguments O
parameter O
can O
be O
: O
If O
the O
i O
parameter O
is O
given O
, O
the B-Entity
DLL I-Entity
will O
install B-Action
itself B-Entity
as B-Modifier
a B-Entity
service I-Entity
on B-Modifier
the B-Entity
victim I-Entity
's I-Entity
machine I-Entity
. O
 
The B-Entity
DLL I-Entity
will O
create B-Action
a B-Entity
new I-Entity
service I-Entity
( O
e.g O
. O
 
'' O
Network O
DDE O
Service O
'' O
) O
and O
assign O
itself O
as O
the O
executable O
for O
the O
service O
. O
 
The B-Entity
DLL I-Entity
's I-Entity
RAT I-Entity
functionality I-Entity
provides B-Action
basic O
features O
such O
as O
network O
port O
forwarding O
( O
proxying O
) O
, O
file O
transfer O
, O
and O
remote B-Entity
command I-Entity
shell I-Entity
. O
 
The O
RAT O
functionality O
provides O
an O
attacker O
with O
the O
ability O
to O
establish O
a O
phantom O
network O
within O
a O
victim O
's O
infrastructure O
by O
having O
individual B-Entity
instances I-Entity
of I-Entity
Gen I-Entity
2 I-Entity
DLL I-Entity
listen B-Action
for B-Modifier
incoming B-Entity
connections I-Entity
on B-Modifier
local B-Entity
ports I-Entity
( O
presumably O
, O
NAT O
'd O
ports O
) O
and O
accept B-Action
commands B-Entity
from B-Modifier
the B-Entity
inbound I-Entity
connection I-Entity
. O
 
This O
allows O
an O
attacker O
to O
establish O
several O
Gen2 O
infections O
within O
a O
victim's O
infrastructure O
and O
if O
outbound O
connectivity O
is O
prohibited O
for O
any O
of O
the O
infected O
machines O
, O
the O
attacker O
can O
route O
commands O
to O
the O
pseudo-isolated O
infections O
through O
accessible O
infected O
machines O
providing B-Action
a B-Entity
high I-Entity
level I-Entity
of I-Entity
persistence I-Entity
to B-Modifier
the B-Entity
malware I-Entity
. O
 
Each B-Entity
Gen I-Entity
2 I-Entity
infection I-Entity
can O
support B-Action
up B-Modifier
to I-Modifier
10 B-Entity
listening I-Entity
ports I-Entity
. O
 
The B-Entity
communication I-Entity
between I-Entity
the I-Entity
Gen I-Entity
2 I-Entity
malware I-Entity
and I-Entity
the I-Entity
C2 I-Entity
( O
or O
other O
Gen O
2 O
malware O
, O
in O
the O
case O
of O
the O
internal O
routing O
functionality O
) O
is B-Action
encrypted I-Action
using B-Modifier
a B-Entity
simple I-Entity
DWORD I-Entity
XOR I-Entity
scheme I-Entity
. O
 
Each O
communication O
burst O
( O
either O
between O
the O
malware O
and O
the O
C2 O
or O
the O
malware O
and O
neighboring O
malware O
) O
begins O
with O
a O
24-byte O
header O
identical O
to O
the O
header O
found O
in O
Gen O
1.2 O
. O
 
Immediately O
following O
the O
header O
is O
the O
type-specific O
( O
as O
indicated O
by O
the O
dwPayloadType O
field O
) O
payload O
data O
. O
 
Note O
that O
the O
dwXORKey O
value O
is O
NOT O
encoded O
with O
the O
XOR O
value O
, O
but O
rather O
is O
the O
value O
that O
is O
used O
for O
encoding O
the O
header O
and O
payload O
. O
 
Each O
DLL O
includes O
a O
hardcoded O
, O
default O
configuration O
. O
 
At O
the O
time O
that O
the O
RAT O
functionality O
activates O
, O
the O
DLL O
will O
drop O
the O
current O
configuration O
to O
disk O
. O
 
If O
the O
configuration O
file O
already O
exists O
, O
then O
the O
RAT O
will O
use O
the O
file O
version O
of O
the O
configuration O
over O
the O
default O
configuration O
. O
 
The O
configuration O
data O
structure O
( O
seen O
below O
) O
doubles O
as O
a O
current O
state O
record O
for O
some O
aspects O
of O
the O
communication O
subsystem O
of O
the O
DLL O
. O
 
When O
stored O
on O
disk O
, O
the O
configuration O
is O
preceded O
by O
a O
GUID O
value O
( O
16 O
bytes O
) O
that O
represents O
the O
unique O
identifier O
for O
the O
specific O
infection O
. O
 
The O
configuration O
is O
XOR O
encoded O
using O
the O
first O
4 O
bytes O
( O
as O
a O
DWORD O
) O
of O
the O
GUID O
. O
 
In O
order O
to O
provide O
some O
level O
of O
stealth O
, O
the B-Entity
RAT I-Entity
will O
install B-Action
a B-Entity
rootkit I-Entity
on B-Modifier
32-bit B-Entity
versions I-Entity
of I-Entity
Windows I-Entity
. O
 
The O
DLL O
contains O
a O
device O
driver O
image O
embedded O
within O
an O
encoded O
buffer O
which O
the O
RAT O
functionality O
code O
will O
extract O
to O
the O
% O
TEMP O
% O
directory O
( O
after O
XOR'ing O
the O
buffer O
with O
0x76 O
) O
. O
 
To O
activate O
the O
rootkit O
, O
the B-Entity
RAT I-Entity
functionality I-Entity
code I-Entity
creates B-Action
a B-Entity
service I-Entity
with B-Modifier
the B-Entity
driver I-Entity
in I-Entity
the I-Entity
% I-Entity
TEMP I-Entity
% I-Entity
directory I-Entity
as I-Entity
the I-Entity
executable I-Entity
for I-Entity
the I-Entity
service I-Entity
. O
 
The B-Entity
RAT I-Entity
functionality I-Entity
code I-Entity
then O
activates B-Action
the B-Entity
service I-Entity
and O
opens O
a O
handle O
to O
device O
driver O
's O
interface O
( O
e.g O
. O
 
\Globals\HTTPS O
) O
. O
 
With O
the O
handle O
open O
to O
the O
rootkit O
driver O
, O
the B-Entity
RAT I-Entity
functionality I-Entity
code I-Entity
deletes B-Action
the B-Entity
service I-Entity
in B-Modifier
order I-Modifier
to I-Modifier
reduce B-Entity
the I-Entity
visible I-Entity
footprint I-Entity
of I-Entity
the I-Entity
new I-Entity
driver I-Entity
. O
 
To O
further O
reduce O
the O
footprint O
of O
the O
driver O
, O
the B-Entity
RAT I-Entity
functionality I-Entity
code I-Entity
also O
uses O
the O
cloaking O
functionality O
of O
the O
rootkit O
to O
hide B-Action
the B-Entity
DLL I-Entity
's I-Entity
PID I-Entity
, O
any O
references O
to O
the O
GUID O
{ O
4AE26357-79A3-466D-A6D9- O
FC38BFB67DEA O
} O
, O
the B-Entity
DLL I-Entity
's I-Entity
service I-Entity
names I-Entity
( I-Entity
e.g I-Entity
. I-Entity
'' I-Entity
NetDDESrv I-Entity
'' I-Entity
and I-Entity
'' I-Entity
Network I-Entity
DDE I-Entity
Service I-Entity
'' I-Entity
) I-Entity
and I-Entity
the I-Entity
service I-Entity
entry I-Entity
as I-Entity
well I-Entity
. O
 
Additionally O
, O
the B-Entity
code I-Entity
also O
attempts O
to O
hide B-Action
a B-Entity
service I-Entity
named I-Entity
'' I-Entity
Hitx I-Entity
'' I-Entity
. O
 
In O
addition O
to O
the O
main O
Hikit O
malware O
, O
there O
are O
at O
least O
two O
examples O
of O
support O
programs O
that O
belong O
to O
the O
Hikit O
family O
. O
 
Samples O
b04de6c417b6f8836e3f2d8822be2e68f4f9722b O
and O
7c4da9deff3e5c7611b9e1bd67d0e74aa7d2d0f6 O
are O
examples O
of O
Gen O
1.0 O
and O
Gen O
1.2 O
operator O
consoles O
. O
 
The B-Entity
console I-Entity
is O
a O
text O
based O
application O
that O
takes O
a O
Gen O
1.0 O
or O
Gen O
1.2 O
infection O
's O
IP O
address O
and O
proceeds O
to O
connect B-Action
and I-Action
authenticate I-Action
with B-Modifier
the B-Entity
infected I-Entity
server I-Entity
. O
 
Once O
connected O
, O
the B-Entity
operator I-Entity
has B-Action
the B-Entity
basic I-Entity
Hikit I-Entity
functionalities I-Entity
available I-Entity
to I-Entity
them I-Entity
via B-Modifier
commands B-Entity
such I-Entity
as I-Entity
file I-Entity
and I-Entity
shell I-Entity
. O
 
Detecting O
Hikit O
variants O
on O
disk O
and O
in O
memory O
is O
possible O
using O
the O
following O
YARA O
signature O
developed O
by O
Symantec O
: O
Detecting O
nominal O
Gen O
1.2 O
and O
later O
network O
activity O
is O
problematic O
given O
the O
nature O
of O
the O
communication O
structure O
. O
 
The O
encrypted O
nature O
of O
the O
nominal O
Gen O
1.2 O
and O
later O
network O
traffic O
makes O
a O
signature O
difficult O
. O
 
Snort O
signature O
30948 O
may O
detect O
some O
Hikit O
based O
network O
traffic O
for O
only O
Gen O
1.0 O
and O
Gen O
1.1 O
. O
 
From O
a O
system O
objects O
perspective O
, O
Gen B-Entity
2 I-Entity
samples I-Entity
produce B-Action
up B-Modifier
to I-Modifier
three B-Entity
named I-Entity
events I-Entity
. O
 
The O
event O
names O
change O
per O
infection O
, O
but O
have O
a O
common O
format O
. O
 
The O
following O
three O
strings O
represent O
the O
known O
mutex O
strings O
for O
Gen O
2 O
samples O
: O
where O
the O
% O
s O
format O
variable O
is O
replaced O
with O
a O
UUID O
value O
string O
specific O
to O
the O
infected O
machine. O
