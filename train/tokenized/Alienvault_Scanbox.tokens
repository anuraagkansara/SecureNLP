A O
few O
days O
ago O
we O
detected O
a O
watering O
hole O
campaign O
in O
a O
website O
owned O
by O
one O
big O
industrial O
company O
. O
 
The O
website O
is O
related O
to O
software O
used O
for O
simulation O
and O
system O
engineering O
in O
a O
wide O
range O
of O
industries O
, O
including O
automotive O
, O
aerospace O
, O
and O
manufacturing O
. O
 
The B-Entity
attackers I-Entity
were O
able O
to O
compromise B-Action
the B-Entity
website I-Entity
and O
include O
code B-Entity
that O
loaded B-Action
a B-Entity
malicious I-Entity
Javascript I-Entity
file I-Entity
from B-Modifier
a B-Entity
remote I-Entity
server I-Entity
. O
 
This B-Entity
Javascript I-Entity
file I-Entity
is B-Action
a B-Entity
framework I-Entity
for I-Entity
reconnaissance I-Entity
that O
the O
attackers O
call O
'' O
Scanbox O
'' O
and O
includes O
some O
of O
the O
techniques O
we O
described O
in O
a O
previous O
blog O
post O
: O
The B-Entity
Scanbox I-Entity
framework I-Entity
first O
configures B-Action
the B-Entity
remote I-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
that I-Entity
it I-Entity
will I-Entity
use I-Entity
and O
collects B-Action
a B-Entity
small I-Entity
amount I-Entity
of I-Entity
information I-Entity
about B-Modifier
the B-Entity
victim I-Entity
that I-Entity
is I-Entity
visiting I-Entity
the I-Entity
compromised I-Entity
website I-Entity
including O
: O
Resulting O
in O
something O
like O
this O
: O
Before O
sending B-Action
the B-Entity
information I-Entity
to B-Modifier
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
, O
Scanbox B-Entity
encodes B-Action
and O
encrypts B-Action
the B-Entity
data I-Entity
with B-Modifier
the B-Entity
following I-Entity
function I-Entity
: O
Producing O
the O
following O
request O
: O
If O
we O
decrypt O
the O
data O
it O
translates O
to O
: O
After O
the O
first O
request O
, O
the B-Entity
framework I-Entity
contains O
several O
plugins O
to O
extract B-Action
different B-Entity
information I-Entity
from B-Modifier
the B-Entity
victim I-Entity
. O
 
While O
the O
user O
is O
browsing O
the O
compromised O
website O
, O
all B-Entity
keystrokes I-Entity
are O
being B-Action
recorded I-Action
and O
sent B-Action
to B-Modifier
the B-Entity
C I-Entity
& I-Entity
C I-Entity
periodically B-Entity
. O
 
It B-Entity
will O
also O
send B-Action
keystrokes B-Entity
when B-Modifier
the B-Entity
user I-Entity
submits I-Entity
web I-Entity
forms I-Entity
that I-Entity
can I-Entity
potentially I-Entity
include I-Entity
passwords I-Entity
and I-Entity
other I-Entity
sensitive I-Entity
data I-Entity
. O
 
As O
we O
have O
seen O
, O
this O
is O
a O
very O
powerful O
framework O
that O
gives O
attackers O
a O
lot O
of O
insight O
into O
the O
potential O
targets O
that O
will O
help O
them O
launching O
future O
attacks O
against O
them O
. O
 
We O
have O
also O
seen O
several O
Metasploit-produced O
exploits O
that O
target O
different O
versions O
of O
Java O
in O
the O
same O
IP O
address O
that O
hosts O
the O
Scanbox O
framework O
( O
122.10.9 O
[ O
. O
 
] O
109 O
) O
. O
 
We O
recommend O
you O
look O
for O
this O
type O
of O
activity O
against O
the O
following O
machines O
in O
your O
network O
: O
