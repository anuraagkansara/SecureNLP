Suspect O
# O
4 O
is O
the O
fourth O
out O
of O
a O
row O
of O
malware O
samples O
, O
which O
are O
believed O
to O
stem O
from O
the O
same O
malicious O
actor O
. O

Insights O
on O
the O
campaign O
were O
first O
presented O
at O
Hack.lu O
Conference O
2014 O
in O
Luxembourg O
. O

The O
name O
' O
EvilBunny O
' O
is O
derived O
from O
a O
link O
to O
debug O
information O
embedded O
in O
the O
dropper O
binary O
of O
suspect O
# O
4 O
. O

The O
path O
to O
the O
associated O
.pdb O
- O
file O
contains O
the O
name O
of O
the O
project O
and O
sub O
project O
, O
namely O
' O
bunny O
2.3.2 O
' O
and O
' O
Transporter2 O
' O
. O

EvilBunny B-Entity
has O
been O
seen O
spreading B-Action
through B-Modifier
a O
malicious B-Entity
PDF I-Entity
document I-Entity
, O
exploiting O
CVE- O
2011 O
- O
4369 O
on O
20th O
of O
December O
2011 O
. O

The O
exploit B-Entity
would O
download B-Action
the O
bunny B-Entity
dropper I-Entity
and O
install B-Action
suspect O
# B-Entity
4 I-Entity
on B-Modifier
the O
infected B-Entity
system I-Entity
. O

Both O
, O
dropper O
and O
payload O
were O
compiled O
on O
25th O
of O
October O
2011 O
, O
while O
CVE-2011 O
- O
4369 O
was O
released O
only O
on O
16 O
th O
of O
December O
. O

It O
is O
unclear O
as O
of O
when O
the O
attacks O
started O
; O
although O
, O
clearly O
, O
either O
the O
attackers O
adopted O
the O
vulnerability O
within O
4 O
days O
or O
the O
attacks O
were O
performed O
using O
an O
AdobeReader O
0-day O
. O

The O
functionality O
of O
the O
dropper O
can O
be O
summarized O
in O
the O
following O
steps O
. O

Searching B-Action
for B-Modifier
a O
sandbox B-Entity
environment I-Entity
, O
the O
malware O
takes O
a O
number O
of O
simple O
steps O
to O
verify O
. O

It O
tests O
the O
module O
file O
name O
to O
see O
if O
it O
is O
less O
than O
5 O
characters O
long O
or O
if O
it O
contains O
either O
of O
the O
four O
strings O
' O
klavme O
' O
, O
' O
myapp O
' O
, O
' O
TESTAPP O
' O
or O
' O
afyjevmv.exe O
' O
. O

Also O
, O
it O
verifies O
if O
less O
than O
15 O
processes O
are O
running O
in O
the O
environment O
, O
using O
the O
API O
call O
EnumProcesses O
. O

In O
case O
any O
of O
the O
conditions O
is O
met O
execution O
will O
abort O
. O

Up O
to O
the O
time O
of O
writing O
it O
remains O
unclear O
which O
environment O
the O
mentioned O
strings O
aim O
to O
identify O
, O
if O
any O
. O

Accessing O
the O
systems O
WMI O
( O
Windows O
Management O
Interface O
) O
the B-Entity
malware I-Entity
queries B-Action
the O
installed B-Entity
AntiVirus I-Entity
software I-Entity
by O
issuing O
' O
SELECT O
* O
FROM O
AntiVirusProduct O
' O
. O

More O
specifically O
, O
the O
malware O
is O
interested O
in O
the O
data O
fields O
' O
productUptoDate O
' O
, O
' O
VersionNumber O
' O
, O
' O
DisplayName O
' O
and O
' O
productState O
' O
. O

The O
information O
about O
AntiVirus O
provided O
by O
WMI O
differs O
between O
Windows O
versions O
, O
so O
the O
requests O
address O
different O
namespaces O
, O
' O
ROOT\SecurityCenter O
' O
for O
WindowsXP O
and O
' O
ROOT\SecurityCenter2 O
' O
for O
Windows O
Vista O
and O
newer O
versions O
. O

Names O
of O
AntiVirus O
products O
are O
represented O
as O
hard O
coded O
SHA-256 O
hashes O
, O
namely O
the O
following O
. O

d4634c9d57c06983e1d2d6dc92e74e6103c132a97f8dc3e7158fa89420647ec3 O
4db3801a45802041baa44334303e0498c2640cd5dfd6892545487bf7c8c9219f O
bfe74ca464620a62f11b8c47a3778bb132d84fecd90ce7c75817970f2eeeca51 O
Antivirus O
443b6fb65fa57d57ee3113e48e9b4ed1db2921d5352e27fa85064cd60553c3ff O
BitDefender O
e1625a7f2f6947ea8e9328e66562a8b255bc4d5721d427f943002bb2b9fc5645 O
588730213eb6ace35caadcb651217bfbde3f615d94a9cca41a31ee9fa09b186c O
f1761a5e3856dceb3e14d4555af92d3d1ac47604841f69fc72328b53ab45ca56 O
Kaspersky O
Only O
three O
of O
the O
seven O
hashes O
were O
identified O
. O

If O
any O
of O
the O
indicated O
products O
is O
installed O
and O
active O
on O
the O
machine O
execution O
will O
abort O
. O

The O
dropper O
comes O
with O
its O
payload O
attached O
in O
the O
resource O
section O
. O

The O
resource O
RCData O
contains O
the O
entire O
netmgr.exe O
binary O
; O
alleged O
suspect O
# O
4 O
. O

The O
binary O
is O
dropped O
as O
netmgr.exe O
, O
either O
located O
in O
% O
APPDATA%\Perf O
Manager\ O
or O
% O
WINDIR%\msapps\. O

The O
final O
directory O
location O
depends O
whether O
the O
dropper O
is O
running O
with O
administrative O
privileges O
or O
not O
. O

Interestingly O
, O
the O
dropper O
also O
changes O
the O
creation O
time O
stamp O
of O
the O
newly O
created O
binary O
to O
time O
stamp O
of O
the O
system O
executable O
explorer.exe O
. O

This O
serves O
to O
avoid B-Action
raising O
suspicion B-Entity
of I-Entity
a I-Entity
forensic I-Entity
analysts I-Entity
or I-Entity
tools I-Entity
. O

As B-Modifier
a O
means B-Entity
of I-Entity
persistence I-Entity
the O
dropper B-Entity
creates B-Action
an O
entry B-Entity
under I-Entity
[ I-Entity
HKLM| I-Entity
HKCU]\ I-Entity
... I-Entity
\CurrentVersion\Run I-Entity
which O
points O
to O
the O
dropped O
netmgr.exe O
binary O
. O

This O
ensures B-Action
that B-Modifier
netmgr.exe O
will B-Entity
be I-Entity
executed I-Entity
every I-Entity
time I-Entity
the I-Entity
system I-Entity
boots I-Entity
. O

Furthermore O
, O
the B-Entity
dropper I-Entity
generates B-Action
another O
entry B-Entity
in I-Entity
the I-Entity
Windows I-Entity
registry I-Entity
, O
under O
[ O
HKLM| O
HKCU]\Software\Microsoft\IPSec O
. O

This O
entry O
is O
named O
' O
isakmpAutoNegociate O
' O
and O
points O
to O
the O
dropper O
binary O
. O

This O
key O
will O
be O
requested O
by O
netmgr.exe B-Entity
later O
to O
locate O
the O
dropper O
binary O
and O
delete B-Action
it B-Entity
. O

The O
naming O
of O
the O
key O
for O
cleanup O
of O
the O
dropper O
is O
chosen O
to O
confuse O
analysts O
, O
although O
the O
name O
is O
clearly O
misspelled O
. O

Another O
interesting O
side O
fact O
is O
that O
the O
dropper O
does O
not O
start O
the O
dropped O
malware O
, O
neither O
does O
it O
contain O
code O
which O
could O
even O
do O
so O
. O

This O
implies O
, O
the O
final O
infection O
stage O
does O
not O
start O
unless O
the O
infected O
machine O
is O
rebooted O
. O

Also O
, O
the O
dropper O
binary O
will O
not O
be O
deleted O
in O
the O
meanwhile O
. O

Suspect O
# O
4 O
was O
the O
fourth O
discovered O
sample O
in O
a O
row O
of O
malware O
related O
to O
the O
EvilBunny O
attacks O
; O
even O
before O
its O
dropper O
. O

Yet O
, O
it O
is O
by O
far O
the O
most O
interesting O
one O
. O

It O
is O
a O
multi- O
threaded O
bot O
with O
an O
integrated O
scripting O
engine O
. O

It O
incorporates O
a O
Lua O
engine O
and O
downloads O
and O
executes O
Lua O
scripts O
to O
reach O
a O
certain O
level O
of O
polymorphism O
. O

The O
Lua B-Entity
scripts I-Entity
can O
call O
back O
into O
the O
C++ O
code O
to O
alter B-Action
the O
malware B-Entity
behavior I-Entity
at B-Modifier
runtime B-Entity
. O

The O
malware B-Entity
seeks O
to O
keep B-Action
a O
low B-Entity
profile I-Entity
on B-Modifier
the O
infected B-Entity
machine I-Entity
, O
while O
executing B-Action
the O
botmaster B-Entity
's I-Entity
commands I-Entity
and I-Entity
Lua I-Entity
scripts I-Entity
. O

In O
total O
Suspect O
# O
4 O
exhibits O
three O
different O
methods O
for O
receiving O
C&C O
input O
and O
executing O
commands O
; O
directly O
via O
HTTP O
, O
through O
a O
downloaded O
database O
file O
or O
as O
a O
scheduled O
task O
. O

Also O
, O
the B-Entity
malware I-Entity
will O
generate O
numerous O
files O
to O
help O
its O
execution O
and O
frequently O
reply B-Action
back I-Action
to B-Modifier
the O
C&C B-Entity
with B-Modifier
status O
messages B-Entity
. O

The O
initial O
purpose O
of O
the O
malware O
seems O
to O
be O
sharing O
execution O
load O
among O
infected O
host O
machines O
. O

However O
, O
due O
to O
the O
lack O
of O
the O
original O
Lua O
scripts O
and O
the O
extensive O
functionality O
of O
the O
embedded O
Lua O
engine O
the O
original O
intentions O
of O
the O
attackers O
remain O
unknown O
. O

Suspect O
# O
4 O
is O
written O
in O
C++ O
, O
and O
just O
like O
its O
dropper O
, O
it O
is O
not O
protected O
by O
any O
runtime O
packer O
or O
crypter O
. O

It O
is O
, O
however O
, O
compiled O
with O
a O
performance O
optimization O
option O
which O
causes O
a O
lot O
of O
code O
in O
- O
lining O
and O
duplicate O
code O
in O
the O
binary O
. O

Duplication O
also O
applies O
to O
string O
constants O
, O
as O
every O
string O
is O
present O
once O
per O
function O
, O
if O
the O
given O
function O
uses O
it O
. O

This O
might O
accelerate O
execution O
speed O
of O
the O
bot O
at O
runtime O
, O
but O
implicitly O
or O
even O
on O
purpose O
hinders O
static O
analysis O
of O
the O
binary O
code O
. O

Cross O
referencing O
of O
strings O
or O
helper O
functions O
is O
ineffective O
due O
to O
the O
duplications O
. O

Only O
few B-Entity
anti I-Entity
- I-Entity
analysis I-Entity
measures I-Entity
can O
be B-Action
found I-Action
in B-Modifier
the O
binary B-Entity
. O

One O
function O
exists O
, O
which O
resembles O
the O
sandbox O
check O
of O
its O
dropper O
with O
minor O
extensions O
. O

This O
sandbox O
detection O
consists O
of O
three O
parts O
. O

Another O
evasion B-Entity
trick I-Entity
implemented B-Action
by O
the B-Entity
malware I-Entity
is O
the O
partial O
obfuscation O
of O
API O
names O
. O

For O
no O
obvious O
reason O
though O
, O
the O
obfuscation O
algorithm O
is O
only O
applied O
to O
a O
small O
subset O
of O
APIs O
used O
in O
the O
code O
. O

The O
algorithm O
uses O
the O
fixed O
value O
AB34CD77h O
and O
a O
combination O
of O
XOR O
and O
ROL O
instructions O
to O
calculate O
hashes O
from O
the O
export O
names O
of O
kernel32.dll O
, O
advapi32.dll O
and O
psapi.dll O
. O

It O
is O
important O
to O
note O
that O
this O
obfuscation O
trick O
and O
the O
according O
hash O
function O
remain O
consistent O
through O
out O
all O
related O
samples O
. O

Similar O
to O
its O
dropper O
, O
suspect B-Entity
# I-Entity
4 I-Entity
enumerates B-Action
the O
system B-Entity
's I-Entity
installed I-Entity
AntiVirus I-Entity
product I-Entity
and O
checks B-Action
firewall O
settings B-Entity
. O

For O
AntiVirus O
detection O
it O
utilizes O
WMI O
and O
issues O
' O
SELECT O
* O
FROM O
AntiVirusProduct O
' O
. O

Identification O
of O
installed O
products O
is O
achieved O
by O
comparing O
the O
hashed O
product O
name O
to O
a O
set O
of O
SHA-256 O
hashes O
; O
although O
, O
a O
different O
and O
much O
bigger O
set O
than O
used O
by O
its O
dropper O
. O

With O
the O
help O
of O
hash O
tables O
from O
perturb.org O
and O
md5decoder.org O
it O
is O
possible O
to O
revert O
some O
of O
the O
hashes O
to O
their O
original O
text O
form O
. O

The O
malware O
retrieves O
the O
attributes O
' O
productState O
' O
, O
' O
DisplayName O
' O
and O
on O
WindowsXP O
also O
' O
productUptoDate O
' O
. O

It O
is O
noteworthy O
though O
, O
that O
for O
netmgr.exe O
the O
existence O
of O
any O
of O
the O
indicated O
AntiVirus O
products O
does O
not O
pose O
a O
reason O
to O
end O
execution O
. O

In O
fact O
, O
these O
hashes O
are O
the O
only O
measure O
for O
obfuscating O
strings O
in O
the O
binary O
. O

Firewall O
detection O
works O
equally O
via O
querying O
WMI O
through O
" O
SELECT O
* O
FROM O
FirewallProduct O
" O
, O
while O
this O
time O
the O
malware O
searches O
for O
the O
attributes O
' O
enabled O
' O
, O
' O
VersionNumber O
' O
and O
' O
DisplayName O
' O
. O

AntiVirus O
and O
firewall O
information O
is O
stored O
in O
objects O
in O
a O
linked O
list O
at O
runtime O
. O

It B-Entity
will O
later O
either O
be B-Action
exfiltrated I-Action
to B-Modifier
a O
C&C B-Entity
server I-Entity
directly I-Entity
or O
dumped B-Action
to B-Modifier
a O
local B-Entity
file I-Entity
on I-Entity
disk I-Entity
. O

Either O
way O
, O
the O
results O
of O
this O
check O
do O
not O
influence O
the O
flow O
of O
execution O
. O

After O
start O
- O
up O
the B-Entity
malware I-Entity
aims O
to O
inject B-Action
itself B-Entity
to B-Modifier
an O
svchost.exe B-Entity
process I-Entity
. O

For O
stealthiness O
the B-Entity
malware I-Entity
can O
either O
inject B-Action
itself B-Entity
as B-Modifier
a O
remote B-Entity
thread I-Entity
to I-Entity
a I-Entity
running I-Entity
svchost.exe I-Entity
process I-Entity
or O
perform O
the O
same O
procedure O
on O
a O
newly O
created O
one O
. O

As B-Modifier
a O
singular B-Entity
means I-Entity
of I-Entity
persistence I-Entity
the O
malware B-Entity
relies B-Action
on B-Modifier
the O
auto B-Entity
- I-Entity
start I-Entity
registry I-Entity
key I-Entity
created I-Entity
by I-Entity
its I-Entity
dropper I-Entity
under I-Entity
[ I-Entity
HKLM|HKCU]\ I-Entity
... I-Entity
\CurrentVersion\Run I-Entity
, I-Entity
which I-Entity
will I-Entity
start I-Entity
netmgr.exe I-Entity
on I-Entity
every I-Entity
system I-Entity
boot I-Entity
. O

Also O
, O
the B-Entity
payload I-Entity
retrieves O
the O
dropper O
's O
path O
from O
' O
isakmpAutoNegociate O
' O
under O
[ O
HKLM| O
HKCU]\Software\Microsoft\IPSec O
, O
then O
deletes B-Action
the O
binary B-Entity
and I-Entity
the I-Entity
' I-Entity
isakmpAutoNegociate I-Entity
' I-Entity
registry I-Entity
key I-Entity
. O

At O
start O
- O
up O
netmgr.exe O
decrypts O
a O
configuration O
file O
stored O
in O
its O
resource O
section O
, O
revealing O
three O
URLs O
, O
among O
timeout O
settings O
and O
encryption O
keys O
. O

All O
three O
of O
these O
URLs O
served O
as O
C&C O
contacts O
when O
the O
attack O
was O
still O
ongoing O
, O
sending O
commands O
or O
Lua O
scripts O
to O
the O
infected O
host O
. O

Interesting O
is O
that O
two O
of O
the O
domains O
are O
actual O
fake O
domains O
resembling O
legitimate O
websites O
while O
one O
is O
a O
legitimate O
domain O
nowadays O
. O

Le O
- O
progres.net O
could O
be O
easily O
confused O
with O
leprogres.fr O
, O
the O
official O
website O
of O
the O
Lyon O
news O
paper O
Le O
Progres O
. O

Usthb O
- O
dz.org O
is O
remarkably O
similar O
to O
usthb.dz O
, O
the O
website O
of O
the O
University O
of O
Sciences O
and O
Technology O
Houari O
Boumediene O
in O
Algiers O
, O
Algeria O
. O

The O
third O
domain O
though O
, O
ghatreh.com O
, O
is O
the O
legitimate O
address O
of O
an O
Iranian O
news O
website O
. O

According O
to O
domaintools.com O
, O
this O
domain O
has O
been O
created O
in O
November O
2004 O
while O
the O
last O
change O
happened O
in O
September O
2012 O
. O

Also O
, O
domaintools.com O
reveals O
14 O
unique O
IP O
addresses O
and O
4 O
different O
registrars O
. O

It O
is O
assumed O
that O
the O
domain O
has O
been O
dropped O
by O
the O
attackers O
in O
2012 O
and O
picked O
up O
by O
legitimate O
operators O
. O

The O
IP O
addresses O
of O
the O
domains O
in O
2011 O
, O
at O
a O
time O
when O
dropper O
, O
payload O
and O
C&Cs O
were O
still O
active O
, O
were O
69.90.160.65 O
, O
70.38.107.13 O
and O
70.38.12.10 O
. O

All O
three O
IPs O
are O
located O
in O
Canada O
, O
two O
relate O
to O
Montr O
al O
, O
one O
to O
Oakville O
. O

The O
complete O
passive O
DNS O
history O
can O
be O
reviewed O
in O
appendix O
A. O

The O
binary O
also O
contains O
the O
URL O
' O
http://1.9.32.11/bunny/test.php?rec=nvista O
' O
, O
but O
the O
purpose O
of O
it O
remains O
unclear O
. O

This O
IP O
address O
is O
never O
contacted O
by O
the O
malware O
. O

Find O
the O
entire O
decrypted O
configuration O
below O
. O

< O
COMMAND_KEY O
> O
wqNbo8DSbWZiq1QZ4NnmTcibYRJIFxmlSBQh1zdF8IlDKin2zkNOVtKvlx92Q0QOQnA O
Nt1NCbDItwVQWY0HBQ2GKYPecpfuQ6JPZG0dQRarhCy7nTT3ukET9YzQEPN81</COMMAND_KEY O
> O
< O
STORAGE_KEY O
> O
lbuLmdAouhUkSsMXckMUevjNf87S4ATWYwLYGLM44O1ortQEE2vr34QGzjPhrWeosFB O
YQpT6dRwDuPPuP13zzqZhW3PeCQA7OUEghovMwEGYx1annboIwRxKbhUOIMsf</STORAGE_KEY O
> O
< O
RESPONSE_KEY>8kMQOWondQc2ZgYgirg9NHg0QUiIIBdPe0YtIVfvxa9rvJ9wtFGx8ko4oFY34PrSkW O
9cKzEFZYDnM54qeWcvSMIi9sBAkcD5ggFDmQOGdO42ef344I7s9wAKoAXKeq1s</RESPONSE_KEY O
> O
< O
COMMAND_FILE_PATH_AND_PREFIX>%SELFDIR%\net.cap</COMMAND_FILE_PATH_AND_PREFIX O
> O
< O
URL1>http://le O
- O
progres.net O
/ O
images O
/ O
php O
/ O
test.php?rec=11206 O
- O
01</URL1 O
> O
< O
URL2>http://ghatreh.com O
/ O
skins O
/ O
php O
/ O
test.php?rec=11206 O
- O
01</URL2 O
> O
< O
URL3>http://www.usthb O
- O
dz.org O
/ O
includes O
/ O
php O
/ O
test.php?rec=11206 O
- O
01</URL3 O
> O
< O
INJECTED>0</INJECTED O
> O
< O
STARTDELAY>0</STARTDELAY O
> O
< O
DIEDELAY>120</DIEDELAY O
> O
The O
configuration O
provides O
three O
keys O
for O
encryption O
and O
decryption O
of O
data O
. O

The O
command_key O
is O
used O
to O
decrypt O
commands O
received O
from O
the O
C&C O
server O
, O
the O
storage_key O
is O
used O
to O
encrypt O
and O
decrypt O
data O
being O
stored O
to O
files O
on O
disk O
and O
the O
response_key O
will O
encrypt O
callbacks O
to O
the O
C&C O
server O
. O

All O
data O
exchanged O
with O
any O
of O
the O
C&C O
servers O
as O
well O
as O
data O
stored O
to O
a O
file O
on O
disk O
is O
encrypted O
with O
the O
according O
key O
. O

Diedelay O
and O
startdelay O
are O
timeout O
settings O
, O
the O
exact O
use O
of O
the O
parameter O
injected O
is O
unclear O
up O
to O
the O
time O
of O
writing O
. O

Command_file_path_and_prefix O
defines O
the O
name O
of O
the O
file O
which O
will O
holds O
C&C O
commands O
and O
Lua O
scripts O
at O
runtime O
. O

The O
malware O
performs O
C&C O
command O
parsing O
and O
Lua O
script O
execution O
with O
dedicated O
threads O
, O
of O
which O
every O
thread O
creates O
its O
own O
net.cap O
file O
, O
extending O
the O
name O
by O
a O
fixed O
digit O
namely O
0 O
, O
1 O
, O
3 O
or O
4 O
. O

At O
runtime O
the O
malware O
adds O
additional O
configuration O
parameters O
, O
which O
are O
not O
assigned O
an O
obvious O
name O
like O
those O
retrieved O
from O
the O
resource O
section O
. O

The O
synonyms O
for O
all O
encrypted O
configuration O
values O
as O
they O
are O
stored O
in O
Windows O
registry O
are O
. O

After O
the O
configuration O
is O
retrieved O
from O
the O
resource O
section O
the B-Entity
malware I-Entity
will O
create B-Action
a O
subkey B-Entity
for I-Entity
every I-Entity
parameter I-Entity
under B-Modifier
[ O
HKLM|HKCU]\Software\Microsoft\IPSec B-Entity
. O

This O
key B-Entity
has O
initially O
been B-Action
created I-Action
by O
the B-Entity
dropper I-Entity
. O

The O
attributes O
are O
encrypted O
before O
being O
written O
to O
registry O
, O
and O
will O
be O
decrypted O
on O
the O
fly O
every O
time O
the O
malware O
requests O
a O
specific O
parameter O
. O

Suspect O
# O
4 O
comes O
with O
a O
solid O
multi O
- O
threading O
model O
, O
which O
seeks O
to O
assure O
fail O
- O
safe O
and O
high O
- O
performance O
execution O
. O

The O
malware O
runs O
a O
main O
thread O
, O
which O
manages O
four O
worker O
threads O
and O
performs O
C&C O
command O
parsing O
and O
Lua O
script O
execution O
. O

The O
worker B-Entity
threads I-Entity
are O
dedicated O
to O
receive B-Action
commands O
and B-Entity
scripts I-Entity
through B-Modifier
different O
ways B-Entity
. O

Next O
to O
that O
, O
the O
main O
thread O
also O
runs O
sub B-Entity
threads I-Entity
to O
maintain B-Action
log O
files B-Entity
the I-Entity
malware I-Entity
creates I-Entity
at I-Entity
during I-Entity
execution I-Entity
and O
to O
keep B-Action
track I-Action
of B-Modifier
the O
overall B-Entity
system I-Entity
load I-Entity
the I-Entity
malware I-Entity
creates I-Entity
. O

The O
threads O
are O
coordinated O
via O
named O
events O
, O
global O
flag O
variables O
, O
in O
some O
cases O
also O
mutexes O
or O
semaphores O
are O
used O
. O

The O
main O
action O
of O
the O
malware O
is O
carried O
out O
in O
the O
main O
thread O
, O
which O
parses O
commands O
and O
executes O
Lua O
scripts O
, O
provided O
by O
the O
worker O
threads O
via O
command O
files O
. O

The O
threading O
model O
is O
summarized O
in O
the O
following O
graphic O
. O

A O
dedicated B-Entity
thread I-Entity
is O
present O
for O
monitoring B-Action
the O
CPU B-Entity
load I-Entity
the I-Entity
malware I-Entity
itself I-Entity
generates I-Entity
. O

Therefor O
the O
thread O
enumerates O
all O
threads O
from O
the O
current O
process O
and O
calculates O
their O
execution O
time O
. O

The O
user- O
and O
kernel O
land O
execution O
time O
is O
measured O
for O
every O
thread O
using O
the O
kernel32 O
! O
GetThreadTimes O
API O
; O
then O
aggregated O
, O
so O
the O
final O
value O
holds O
the O
overall O
CPU O
usage O
time O
of O
the O
malware O
process O
. O

The O
thread O
keeps O
track O
of O
the O
time O
passing O
between O
executions O
. O

If O
the O
malware O
's O
active O
execution O
time O
in O
percentage O
of O
this O
delta O
exceeds O
a O
configured O
threshold O
, O
the O
malware O
will O
suspend O
all O
threads O
of O
its O
process O
for O
at O
least O
5s O
. O

The O
threshold O
is O
retrieved O
from O
configuration O
in O
Windows O
registry O
, O
and O
can O
be O
controlled O
by O
the O
botmaster O
via O
the O
C&C O
command O
setcpulimit O
( O
see O
section O
2.5 O
) O
. O

This O
clearly O
is O
an O
attempt O
to O
keeping O
a O
low O
profile O
on O
the O
infected O
machine O
. O

By O
maintaining O
its O
own O
execution O
load O
the O
bot O
's O
compromised O
svchost.exe O
process O
will O
not O
catch O
attention O
on O
the O
process O
list O
. O

The O
backfile O
launching O
thread O
got O
its O
name O
from O
the O
named O
event O
' O
backfilelaunching O
' O
which O
is O
set O
to O
indicate O
that O
the O
dedicated O
thread O
has O
started O
. O

Also O
in O
a O
1s O
- O
frequency O
the O
malware O
runs O
the O
backfile O
thread O
to O
push O
dump O
files O
to O
one O
of O
its O
remote O
servers O
. O

The O
files O
are O
named O
Perflib_Perfdat_dmpbX.dat O
, O
where O
X O
is O
an O
index O
number O
starting O
with O
0 O
. O

The O
data O
written O
to O
the O
file O
are O
status O
messages O
including O
a O
time O
stamp O
, O
which O
are O
returned O
by O
command O
and O
Lua O
script O
execution O
. O

The O
data O
is O
encrypted O
using O
the O
response_key O
from O
the O
configuration O
. O

The O
term O
' O
hearer O
' O
can O
be O
found O
plenty O
of O
times O
in O
the O
binary O
, O
it O
is O
assumed O
that O
it O
is O
equivalent O
to O
' O
listener O
' O
of O
some O
sort O
. O

All O
together O
suspect O
# O
4 O
manages O
4 O
hearer O
threads O
including O
one O
command O
file O
per O
thread O
. O

The O
command O
file O
is O
named O
net.capX O
, O
where O
X O
is O
the O
index O
of O
the O
thread O
; O
0 O
, O
1 O
, O
3 O
or O
4 O
. O

The O
hearer B-Entity
thread I-Entity
's I-Entity
purpose O
is O
to O
receive B-Action
instructions O
from B-Entity
the I-Entity
remote I-Entity
servers I-Entity
and O
provide O
them O
to O
the O
main O
thread O
. O

Such O
instructions O
are O
commands O
and/or O
one O
or O
more O
Lua O
scripts O
. O

Each O
hearer O
has O
a O
dedicated O
method O
to O
receive O
instructions O
which O
is O
either O
separately O
via O
HTTP O
from O
the O
server O
, O
aggregated O
through O
a O
downloaded O
data O
file O
or O
as O
tasks O
to O
be O
configured O
as O
scheduled O
tasks O
. O

The O
hearer O
threads O
dump O
the O
received O
instructions O
to O
their O
net.cap-files O
, O
from O
where O
the O
main O
thread O
's O
command O
parsing O
routine O
fetches O
and O
executes O
them O
. O

The O
data O
is O
encrypted O
with O
the O
storage_key O
before O
written O
to O
disk O
. O

Generic O
hearer O
thread O
. O

Started O
, O
but O
not O
involved O
in O
command O
fetching O
and O
parsing O
. O

Hearer O
1 B-Entity
receives B-Action
commands O
and B-Entity
Lua I-Entity
scripts I-Entity
directly O
via B-Modifier
HTTP B-Entity
from B-Modifier
one O
of B-Entity
the I-Entity
C&C I-Entity
servers I-Entity
. O

These O
are O
encrypted O
with O
the O
storage_key O
and O
stored O
to O
net.cap1 O
in O
the O
malware O
's O
working O
directory O
. O

Interestingly O
, O
the O
malware O
handles O
successful O
downloads O
with O
the O
HTTP O
status O
code O
418 O
. O

This O
code O
is O
not O
part O
of O
the O
original O
HTTP O
standard O
, O
but O
was O
introduced O
in O
RFC2324 O
, O
1998 O
's O
traditional O
IETF O
April O
Fool O
's O
joke O
. O

The O
textual O
representation O
of O
status O
418 O
is O
" O
I O
'm O
a O
teapot O
. O
" O
. O

Hearer O
2 O
is O
responsible O
for O
managing O
the O
scheduled O
tasks O
, O
titled O
' O
crontasks O
' O
by O
the O
malware O
. O

The O
tasks O
are O
stored O
in O
a O
file O
named O
perf.tmp O
, O
and O
when O
due O
for O
execution O
are O
copied O
to O
the O
according O
net.cap-file O
, O
net.cap2 O
in O
this O
case O
. O

From O
there O
the O
main O
thread O
can O
fetch O
and O
execute O
them O
in O
its O
command O
parsing O
loop O
. O

Hearer O
2 O
also O
creates O
a O
swap O
file O
named O
perf.tmp2 O
, O
which O
helps O
in O
selectively O
editing O
the O
initial O
task O
file O
and O
in O
managing O
the O
task O
list O
. O

Hearer O
3 O
searches O
for O
a O
file O
named O
netdump.db O
in O
its O
local O
working O
directory O
. O

If O
found O
, O
the B-Entity
thread I-Entity
will O
read B-Action
its O
content B-Entity
in B-Modifier
chunks O
representing B-Entity
different I-Entity
commands I-Entity
and O
paste O
these O
to O
net.cap3 O
. O

Again O
, O
the O
data O
is O
encrypted O
with O
the O
storage_key O
. O

No O
functionality O
could O
be O
found O
in O
the O
malware O
code O
to O
write O
to O
netdump.db O
, O
which O
leaves O
the O
conclusion O
that O
this B-Entity
file I-Entity
will O
be B-Action
downloaded I-Action
from B-Modifier
a O
C&C B-Entity
server I-Entity
. O

After O
initializing O
and O
starting O
all O
four O
hearer O
threads O
the O
main O
thread O
enters O
a O
command O
parsing O
loop O
. O

For O
every O
hearer O
the O
main O
thread O
invokes O
the O
command O
and O
script O
execution O
function O
. O

Therefor O
data O
is O
read O
from O
the O
encrypted O
net.capX- O
file O
, O
where O
X O
indicates O
the O
index O
of O
the O
hearer O
; O
0 O
, O
1 O
, O
3 O
or O
4 O
. O

Once O
decrypted O
, O
this O
data O
is O
parsed O
to O
find O
valid O
C&C O
commands O
and O
/ O
or O
valid O
Lua O
scripts O
to O
execute O
. O

More O
details O
on O
command O
and O
script O
execution O
can O
be O
found O
in O
section O
2.6 O
. O

Notable O
is O
that O
the O
command O
parsing O
and O
execution O
happens O
in O
a O
serial O
fashion O
, O
while O
Lua O
script O
execution O
is O
handed O
over O
to O
dedicated O
threads O
. O

Also O
, O
no O
direct O
relation O
between O
C&C O
commands O
and O
Lua O
script O
execution O
could O
be O
identified O
. O

The O
most O
notable O
actions O
of O
the O
bot O
can O
be O
summarized O
as O
follows O
. O

However O
, O
suspect O
# O
4 O
does O
accept O
a O
list O
of O
hard O
coded O
commands O
to O
be O
sent O
by O
the O
C&C O
server O
. O

These O
mainly O
serve O
the O
purpose O
of O
controlling O
operation O
of O
the O
bot O
on O
the O
infected O
machine O
, O
such O
as O
restarting B-Action
threads B-Entity
or O
setting B-Action
configuration O
parameters B-Entity
. O

The O
full O
list O
of O
C&C O
commands O
can O
be O
found O
below O
. O

Every O
command O
execution O
function O
returns O
a O
status O
line O
, O
such O
as O
for O
example O
" O
ftp O
command O
succeeded O
for O
: O
% O
s!\n O
" O
. O

The O
initial B-Entity
command I-Entity
, I-Entity
the I-Entity
status I-Entity
line I-Entity
and I-Entity
a I-Entity
current I-Entity
time I-Entity
stamp I-Entity
are O
encrypted B-Action
and O
sent B-Action
back I-Action
to B-Modifier
the O
C&C B-Entity
server I-Entity
. O

Additionally O
, O
the B-Entity
same I-Entity
data I-Entity
is O
written B-Action
to B-Modifier
the O
Perflib_Perfdat_dmpbX.dat B-Entity
file I-Entity
which O
is O
regularly O
pushed B-Action
to B-Modifier
the O
C&C B-Entity
by B-Modifier
the O
backfile B-Entity
thread I-Entity
. O

For O
hearer O
1 O
and O
3 O
the O
command O
parsing O
routine O
will O
additionally O
manage O
two O
continuous O
log O
files O
which O
are O
named O
Perflib_Perfdata41X.dat O
and O
Perflib_Perfdata_42X.dat O
, O
where O
X O
is O
the O
respective O
hearer O
thread O
's O
index O
. O

More O
specifically O
, O
command O
parsing O
will O
increment O
a O
global O
variable O
holding O
the O
total O
amount O
of O
executed O
commands O
and O
scripts O
. O

This O
4-byte O
value O
is O
appended O
to O
Perflib_Perfdata41X.dat O
before O
and O
Perlfib_Perfdata42X.dat O
after O
command O
execution O
. O

These O
files B-Entity
survive B-Action
restart O
or B-Entity
cleanup I-Entity
, O
so O
every O
time O
the B-Entity
malware I-Entity
boots O
it O
reads B-Action
the O
current B-Entity
status I-Entity
from B-Modifier
these O
logs B-Entity
and O
continues O
from O
the O
latest O
value O
. O

This O
mechanism O
helps O
the O
botmaster O
to O
keep O
track O
of O
the O
bots O
activity O
on O
an O
infected O
host O
and O
could O
also O
be O
helpful O
in O
trouble O
shooting O
. O

Suspect O
# O
4 O
incorporates O
an O
interpreter O
for O
Lua O
5.1 O
, O
LuaSocket O
2.0.2 O
and O
C O
/ O
Invoke O
Lua O
bindings O
. O

Lua O
is O
a O
lightweight O
programming O
language O
designed O
as O
a O
scripting O
language O
which O
can O
be O
embedded O
into O
applications O
, O
providing O
a O
C O
API O
for O
doing O
so O
. O

C O
bindings O
are O
provided O
through O
C O
/ O
Invoke O
and O
enable O
Lua O
scripts O
to O
perform O
callbacks O
to O
C O
/ O
C++ O
code O
. O

This O
constellation O
can O
be O
found O
in O
many O
video O
game O
engines O
to O
provide O
polymorphic O
behavior O
in O
games O
. O

Engine O
and O
game O
play O
features O
are O
injected O
through O
Lua O
scripts O
, O
which O
instrument O
the O
game O
engine O
code O
. O

The O
Lua O
interpreter O
is O
very O
small O
, O
compiled O
roughly O
180kB O
, O
thus O
can O
easily O
be O
integrated O
in O
an O
application O
. O

The O
C O
/ O
Invoke O
bindings O
enable O
Lua O
to O
be O
completely O
independent O
from O
the O
C O
/ O
C++ O
application O
, O
so O
injected O
scripts O
can O
be O
pure O
Lua O
code O
. O

A O
script O
, O
if O
delivered O
to O
one O
of O
the O
hearer O
threads O
, O
will O
be O
provided O
through O
the O
corresponding O
net.cap-file O
of O
the O
hearer O
along O
with O
a O
C&C O
command O
. O

If O
a O
script O
is O
included O
in O
the O
data O
read O
from O
the O
net.cap-file O
, O
this O
is O
indicated O
by O
the O
start O
sentinel O
' O
< O
$ O
' O
. O

Likewise O
, O
the O
end O
of O
a O
script O
is O
indicated O
by O
' O
$ O
> O
' O
. O

Command O
execution O
goes O
hand O
in O
hand O
with O
Lua O
script O
execution O
, O
thus O
is O
dependent O
of O
the O
four O
hearer O
threads O
. O

The O
work O
flow O
for O
each O
hearer O
per O
execution O
loop O
in O
the O
main O
thread O
is O
as O
follows O
. O

After O
starting O
the B-Entity
Lua I-Entity
thread I-Entity
requests B-Action
a O
value B-Entity
from I-Entity
Windows I-Entity
registry I-Entity
named I-Entity
' I-Entity
EnableLua I-Entity
' I-Entity
under I-Entity
SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System I-Entity
. O

This O
key O
name O
stands O
for O
enable O
limited O
user O
account O
. O

When O
set O
to O
zero O
this O
key O
effectively O
disables O
UAC O
( O
User O
Account O
Control O
) O
. O

The O
malware O
only O
requests O
the O
key O
value O
but O
does O
not O
change O
it O
. O

The O
value O
is O
later O
used O
by O
a O
callback O
function O
named O
' O
popenWin O
' O
to O
decide O
on O
a O
way O
how O
a O
sub O
process O
should O
be O
started O
. O

Options O
are O
via O
WMIC O
using O
wmic.exe O
, O
Microsoft O
CScript O
engine O
using O
cscript.exe O
or O
directly O
via O
spawning O
a O
command O
line O
through O
cmd.exe O
. O

However O
, O
spawning O
sub O
processes O
is O
not O
the O
only O
feature O
which O
comes O
with O
Lua O
. O

The O
Lua O
interpreter O
is O
a O
powerful O
code O
base O
which O
enables O
suspect O
# O
4 O
to O
change O
functionality O
on O
the O
fly O
, O
as O
different O
scripts O
are O
downloaded O
and O
executed O
. O

The O
scripts O
define O
the O
functionality O
as O
they O
perform O
callbacks O
to O
the O
C O
/ O
C++ O
code O
in O
the O
malware O
binary O
. O

The O
potential O
of O
the O
Lua O
interpreter O
can O
be O
investigated O
on O
the O
project O
homepage O
. O

Like O
command O
execution O
, O
Lua B-Entity
script I-Entity
execution I-Entity
also O
returns B-Action
a O
status B-Entity
message I-Entity
which I-Entity
is I-Entity
extended I-Entity
by I-Entity
a I-Entity
time I-Entity
stamp I-Entity
and O
forwarded B-Action
to B-Modifier
one O
of B-Entity
the I-Entity
C&C I-Entity
servers I-Entity
, O
as O
well O
as O
written B-Action
to B-Modifier
the O
backfile B-Entity
log I-Entity
in I-Entity
Perflib_Perfdat_dmpbX.dat I-Entity
. O

Likewise O
, O
the B-Entity
Lua I-Entity
threads I-Entity
log B-Action
their O
activity B-Entity
to B-Modifier
Perflib_Perfdata_41X.dat/42X.dat B-Entity
. O

Due O
to O
the O
absence O
of O
C&C O
servers O
which O
hold O
the O
Lua O
scripts O
for O
the O
bot O
's O
Lua O
interpreter O
the O
true O
nature O
of O
this O
feature O
remains O
unclear O
. O

Throughout O
analysis O
and O
due O
to O
the O
help O
of O
Paul O
Rascagni O
res O
a O
number O
of O
binaries O
which O
relate O
to O
EvilBunny O
were O
identified O
. O

The O
binaries O
share O
parts O
of O
source O
code O
, O
most O
notably O
is O
the O
identical O
API O
name O
obfuscation O
algorithm O
and O
respective O
key O
AB34CD77h O
. O

The O
indicators O
of O
a O
relation O
among O
all O
samples O
or O
a O
subset O
of O
samples O
are O
the O
following O
. O

Mentioned O
set O
of O
malware O
also O
shows O
parallels O
in O
coding O
style O
and O
structure O
. O

However O
, O
it O
has O
to O
be O
pointed O
out O
that O
suspect O
# O
4 O
without O
doubt O
sticks O
out O
in O
terms O
of O
complexity O
and O
functionality O
. O

It O
is O
assumed O
that O
suspect O
# O
4 O
was O
created O
by O
the O
same O
authors O
, O
but O
this O
can O
not O
be O
proved O
. O

Four O
of O
the O
set O
of O
identified O
samples O
are O
identical O
in O
functionality O
and O
capability O
. O

They O
possess O
respectable O
flooding O
capabilities O
and O
also O
provide O
remote O
access O
. O

However O
, O
they O
do O
not O
support O
data O
stealing O
or O
any O
spying O
functionality O
. O

Two O
more O
C&C O
domains O
were O
identified O
for O
this O
group O
. O

Regarding O
the O
nature O
of O
the O
attack O
or O
the O
actor O
behind O
EvilBunny O
only O
vague O
conclusions O
can O
be O
drawn O
. O

There O
has O
been O
public O
contemplation O
that O
the O
actor O
might O
be O
french O
and O
that O
the O
malware O
might O
be O
related O
to O
samples O
analyzed O
by O
the O
Canadian O
CSEC O
. O

However O
, O
there O
hasn't O
been O
any O
hard O
evidence O
which O
links O
the O
attack O
to O
a O
group O
or O
a O
geographical O
location O
. O

Attribution O
is O
a O
tricky O
task O
and O
assumptions O
must O
not O
be O
drawn O
easily O
. O

For O
providing O
technical O
insights O
, O
support O
and O
if O
I O
remember O
right O
even O
water O
, O
coffee O
or O
occationally O
rum O
, O
I O
want O
to O
express O
my O
deepest O
gratitude O
to O
Morgan O
Marquis O
- O
Boire O
, O
Sebastien O
Larinier O
, O
Paul O
Rascagni O
res O
, O
Nicolas O
Brulez O
, O
Michael O
Shalyt O
and O
Inbar O
Raz O
. O

Further O
I O
want O
to O
thank O
Fred O
Arbogast O
, O
Alexandre O
Dulaunoy O
, O
Raphael O
Vinot O
and O
the O
remaining O
organizing O
team O
of O
Hack.lu O
for O
their O
advice O
and O
effort O
, O
even O
in O
situations O
of O
widespread O
insomnia O
. O

All O
of O
you O
– O
such O
wow O
, O
very O
awesome O
; O
rock O
on O
! O
[ O
1 O
] O
An O
Analysis O
Of O
CVE-2011 O
- O
4369 O
http://blog.9bplus.com/analyzing-cve-2011-4369-part-one/ O
[ O
2 O
] O
ThreatExpert O
Report O
on O
c40e3ee23cf95d992b7cd0b7c01b8599 O
http://www.threatexpert.com/report.aspx?md5=c40e3ee23cf95d992b7cd0b7c01b8599 O
[ O
3 O
] O
How O
to O
disable O
UAC O
https://social.technet.microsoft.com O
/ O
Forums O
/ O
windowsserver O
/ O
en O
- O
US/0aeac9d8 O
- O
3591 O
- O
4294- O
b13e-825705b27730/how O
- O
to O
- O
disable O
- O
uac O
[ O
4 O
] O
The O
Lua O
Project O
http://www.lua.org/ O
[ O
5 O
] O
The O
C O
/ O
Invoke O
Project O
http://www.nongnu.org/cinvoke/ O
[ O
6 O
] O
Lua O
scriptable O
game O
engines O
( O
Wikipedia O
) O
http://en.wikipedia.org/wiki/Category:Lua-scriptable_game_engines O
[ O
7 O
] O
All O
file O
hashes O
related O
to O
the O
EvilBunny O
malware O
http://pastebin.com/7iedeFF5 O
[ O
8 O
] O
Hack.lu O
2014 O
Keynote O
on O
TS O
/ O
NOFORN O
http://www.slideshare.net/pinkflawd/tsnoforn O
[ O
9 O
] O
Quand O
les O
Canadiens O
partent O
en O
chasse O
de O
Babar O
http://www.lemonde.fr O
/ O
international O
/ O
article/2014/03/21/quand O
- O
les O
- O
canadiens O
- O
partent O
- O
en- O
chasse O
- O
de O
- O
babar_4387233_3210.html O
Marked O
in O
Grey O
is O
the O
data O
of O
sinkholes O
for O
the O
mentioned O
domains O
, O
currently O
operated O
by O
Kaspersky O
. O

