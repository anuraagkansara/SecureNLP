G O
Data O
Red O
Paper O
February O
2014 O
: O
Uroburos O
G O
Data O
Red O
Paper O
February O
2014 O
: O
Uroburos O
G O
Data O
Security O
experts O
have O
analyzed O
a B-Entity
very I-Entity
complex I-Entity
and I-Entity
sophisticated I-Entity
piece I-Entity
of I-Entity
malware I-Entity
, O
designed O
to O
steal B-Action
confidential O
data B-Entity
. O

G O
Data O
refers O
to O
it O
as O
Uroburos O
, O
in O
correspondence O
with O
a O
string O
found O
in O
the O
malware O
's O
code O
and O
following O
an O
ancient O
symbol O
depicting O
a O
serpent O
or O
dragon O
eating O
its O
own O
tail O
. O

Uroburos O
is O
a O
rootkit O
, O
composed O
of O
two O
files O
, O
a O
driver O
and O
an O
encrypted O
virtual O
file O
system O
. O

The O
rootkit B-Entity
is O
able O
to O
take B-Action
control O
of B-Entity
an I-Entity
infected I-Entity
machine I-Entity
, O
execute B-Action
arbitrary O
commands B-Entity
and O
hide B-Action
system O
activities B-Entity
. O

It B-Entity
can O
steal B-Action
information B-Entity
( O
most O
notably O
: O
files O
) O
and O
it B-Entity
is O
also O
able O
to O
capture B-Action
network O
traffic B-Entity
. O

Its O
modular O
structure O
allows O
extending O
it O
with O
new O
features O
easily O
, O
which O
makes O
it O
not O
only O
highly O
sophisticated O
but O
also O
highly O
flexible O
and O
dangerous O
. O

Uroburos O
' O
driver O
part O
is O
extremely O
complex O
and O
is O
designed O
to O
be O
very O
discrete O
and O
very O
difficult O
to O
identify O
. O

The O
development O
of O
a O
framework O
like O
Uroburos O
is O
a O
huge O
investment O
. O

The O
development O
team O
behind O
this O
malware O
obviously O
comprises O
highly O
skilled O
computer O
experts O
, O
as O
you O
can O
infer O
from O
the O
structure O
and O
the O
advanced O
design O
of O
the O
rootkit O
. O

We O
believe O
that O
the O
team O
behind O
Uroburos O
has O
continued O
working O
on O
even O
more O
advanced O
variants O
, O
which O
are O
still O
to O
be O
discovered O
. O

Uroburos O
is O
designed O
to O
work O
in O
peer O
- O
to O
- O
peer O
mode O
, O
meaning O
that O
infected B-Entity
machines I-Entity
communicate O
among O
each O
other O
, O
commanded B-Action
by B-Modifier
the O
remote B-Entity
attackers I-Entity
. O

By O
commanding O
one O
infected O
machine O
that O
has O
Internet O
connection O
, O
the B-Entity
malware I-Entity
is O
able O
to O
infect B-Action
further O
machines B-Entity
within B-Modifier
the O
network B-Entity
, O
even O
the O
ones O
without O
Internet O
connection O
. O

It B-Entity
can O
spy B-Action
on B-Modifier
each O
and B-Entity
every I-Entity
infected I-Entity
machine I-Entity
and O
manages O
to O
send B-Action
the O
exfiltrated B-Entity
information I-Entity
back O
to B-Modifier
the O
attackers B-Entity
, O
by B-Modifier
relaying O
this B-Entity
exfiltrated I-Entity
data I-Entity
through I-Entity
infected I-Entity
machines I-Entity
to I-Entity
one I-Entity
machine I-Entity
with I-Entity
Internet I-Entity
connection I-Entity
. O

This O
malware O
behavior O
is O
typical O
for O
propagation O
in O
networks O
of O
huge O
companies O
or O
public O
authorities O
. O

The O
attackers O
expect O
that O
their O
target O
does O
have O
computers O
cut O
off O
from O
the O
Internet O
and O
uses O
this O
technique O
as O
a O
kind O
of O
workaround O
to O
achieve O
their O
goal O
. O

Uroburos O
supports O
32-bit O
and O
64-bit O
Microsoft O
Windows O
systems O
. O

Due O
to O
the O
complexity O
of O
this O
malware O
and O
the O
supposed O
spying O
techniques O
used O
by O
it O
, O
we O
assume O
that O
this O
rootkit O
targets O
governments O
, O
research O
institutes O
, O
or O
/ O
and O
big O
companies O
. O

Due O
to O
many O
technical O
details O
( O
file O
name O
, O
encryption O
keys O
, O
behavior O
and O
more O
details O
mentioned O
in O
this O
report O
) O
, O
we O
assume O
that O
the O
group O
behind O
Uroburos O
is O
the O
same O
group O
that O
performed O
a O
cyberattack O
against O
the O
United O
States O
of O
America O
in O
2008 O
with O
a O
malware O
called O
Agent O
. O
BTZ O
. O

Uroburos O
checks O
for O
the O
presence O
of O
Agent O
. O
BTZ O
and O
remains O
inactive O
if O
it O
is O
installed O
. O

It O
appears O
that O
the O
authors O
of O
Uroburos O
speak O
Russian O
( O
the O
language O
appears O
in O
a O
sample O
) O
, O
which O
corroborates O
the O
relation O
to O
Agent O
. O
BTZ O
. O

Furthermore O
, O
according O
to O
public O
newspaper O
articles O
, O
this O
fact O
, O
the O
usage O
of O
Russian O
, O
also O
applied O
for O
the O
authors O
of O
Agent O
. O
BTZ O
. O

According O
to O
all O
indications O
we O
gathered O
from O
the O
malware O
analyses O
and O
the O
research O
, O
we O
are O
sure O
of O
the O
fact O
that O
attacks O
carried O
out O
with O
Uroburos O
are O
not O
targeting O
John O
Doe O
but O
high O
profile O
enterprises O
, O
nation O
states O
, O
intelligence O
agencies O
and O
similar O
targets O
. O

The O
Uroburos O
rootkit O
is O
one O
of O
the O
most O
advanced O
rootkits O
we O
have O
ever O
analyzed O
in O
this O
environment O
. O

The O
oldest O
driver O
we O
identified O
was O
compiled O
in O
2011 O
, O
which O
means O
that O
the O
campaign O
remained O
undiscovered O
for O
at O
least O
three O
years O
. O

At O
the O
current O
stage O
of O
the O
investigations O
it O
is O
unknown O
how O
Uroburos O
initially O
infiltrates O
high O
profile O
networks O
. O

Many O
infection O
vectors O
are O
conceivable O
. O

E.g. O

spear O
phishing O
, O
drive O
- O
by O
- O
infections O
, O
USB O
sticks O
, O
or O
social O
engineering O
attacks O
. O

The O
G O
Data O
SecurityLabs O
discovered O
the O
rootkit O
dubbed O
Uroburos O
during O
2013 O
. O

We O
decided O
to O
investigate O
in O
depth O
soon O
after O
we O
identified O
the O
following O
three O
interesting O
aspects O
. O

Uroburos O
is O
a O
direct O
reference O
to O
the O
Greek O
word O
Ouroboros O
( O
Οὐροβόρος O
) O
. O

The O
Ouroboros O
is O
an O
ancient O
symbol O
depicting O
a O
serpent O
or O
dragon O
eating O
its O
own O
tail O
. O

The O
name O
of O
this O
rootkit O
is O
inspired O
by O
a O
plain O
text O
string O
available O
in O
several O
driver O
files O
: O
Ur0bUr()sGotyOu O
# O
Furthermore O
, O
we O
identified O
other O
references O
to O
the O
ancient O
serpent O
/ O
dragon O
symbol O
within O
the O
rootkit O
's O
code O
, O
for O
example O
the O
following O
strings O
. O

Another O
interesting O
notion O
: O
The O
exact O
spelling O
, O
Uroburos O
, O
can O
even O
be O
found O
in O
a O
webcomic O
called O
Homestuck O
. O

In O
this O
interactive O
webcomic O
, O
the O
reader O
/ O
player O
needs O
two O
codes O
to O
receive O
virtual O
magic O
objects O
( O
called O
juju O
) O
. O

Those O
two O
codes O
are O
in O
fact O
uROBuROS O
and O
UrobUros O
. O

We O
can O
notice O
that O
the O
uppercase O
and O
lowercase O
character O
order O
matches O
the O
string O
found O
within O
the O
malware O
code O
. O

The O
rootkit O
is O
basically O
composed O
of O
two O
files O
. O

We O
identified O
several O
file O
names O
for O
the O
driver O
, O
for O
example O
: O
Ultra3.sys O
, O
msw32.sys O
, O
vstor32.sys O
. O

We O
have O
encountered O
32-bit O
and O
64-bit O
driver O
versions O
. O

The O
two O
binaries O
may O
be O
installed O
simultaneously O
on O
one O
system O
. O

The O
file O
containing O
the O
virtual O
file O
system O
has O
a O
random O
name O
, O
followed O
by O
the O
extension O
.dat O
. O

Furthermore O
, O
this O
file O
is O
located O
in O
the O
same O
directory O
as O
the O
driver O
file O
. O

The O
installation O
directory O
does O
change O
, O
but O
we O
were O
able O
to O
identify O
the O
following O
pattern O
. O

The O
malware O
's O
persistence O
is O
established O
by O
the O
creation O
of O
a O
service O
which O
automatically O
executes O
during O
each O
startup O
of O
the O
system O
. O

The O
service O
is O
located O
in O
The O
driver O
is O
needed O
to O
A O
rootkit O
naturally O
tries O
to O
hide B-Action
its O
activities B-Entity
from B-Modifier
the O
user B-Entity
and O
so O
does O
Uroburos B-Entity
. O

The O
driver O
uses O
inline O
patching O
to O
perform O
the O
hooks O
, O
which O
is O
a O
common O
way O
to O
perform O
this O
task O
. O

Inline O
patching O
is O
carried O
out O
by O
modifying O
the O
beginning O
of O
a O
targeted O
system O
's O
function O
in O
order O
to O
redirect O
the O
execution O
flow O
to O
a O
custom O
code O
before O
jumping O
back O
to O
the O
original O
function O
. O

In O
the O
current O
case O
, O
the O
inline O
patching O
adds O
a O
new O
interrupt O
instruction O
( O
int O
0xc3 O
) O
at O
the O
beginning O
of O
the O
hooked O
function O
. O

Doing O
this O
, O
the O
malware O
adds O
malicious O
behavior O
to O
legitimate O
functions O
. O

The O
main O
hooked O
functions O
are O
. O

The O
Uroburos O
rootkit O
uses O
two O
virtual O
file O
systems O
– O
one O
NTFS O
file O
system O
and O
one O
FAT O
file O
system O
. O

They O
are O
stored O
locally O
, O
on O
the O
infected O
machine O
. O

This O
means O
that O
the O
victim O
's O
computer O
contains O
an O
encrypted O
file O
, O
which O
, O
in O
reality O
, O
hosts O
another O
file O
system O
. O

The O
virtual O
file O
systems O
are O
used O
as O
a O
work O
space O
by O
the O
attackers O
. O

They O
can O
store O
third O
party O
tools O
, O
post O
- O
exploitation O
tools O
, O
temporary O
files O
and O
binary O
output O
. O

The O
virtual O
file O
systems O
can O
be O
accessed O
through O
the O
devices O
\Device\RawDisk1 O
and O
\Device\RawDisk2 O
and O
the O
volume O
\\.\Hd1 O
and O
\\.\Hd2 O
. O

The O
encryption O
used O
for O
the O
file O
systems O
is O
CAST-128 O
1 O
. O

The O
respective O
encryption O
key O
is O
hardcoded O
within O
the O
driver O
file O
. O

Once O
decrypted O
, O
the O
virtual O
file O
system O
is O
a O
classic O
NTFS O
volume O
, O
which O
can O
be O
simply O
accessed O
through O
the O
standard O
Microsoft O
file O
system O
APIs O
. O

During O
our O
analysis O
, O
we O
identified O
several O
files O
the O
file O
systems O
contained O
. O

The O
.bat O
scripts O
contain O
some O
net O
use O
commands O
to O
map O
a O
remote O
file O
server O
, O
netstat O
commands O
to O
have O
network O
information O
, O
system O
info O
commands O
to O
get O
a O
complete O
view O
of O
the O
system O
configuration O
. O

1 O
http://en.wikipedia.org/wiki/CAST-128 O
Copyright O
2014 O
G O
Data O
Software O
AG O
6 O
G O
Data O
Red O
Paper O
February O
2014 O
: O
Uroburos O
The O
queue O
file O
is O
the O
most O
interesting O
and O
complex O
part O
of O
the O
virtual O
file O
system O
. O

Each O
message O
in O
the O
queue O
contains O
a O
unique O
ID O
, O
a O
type O
, O
a O
timestamp O
and O
content O
. O

The O
content O
is O
also O
encrypted O
using O
the O
CAST-128 O
algorithm O
and O
the O
respective O
key O
is O
stored O
in O
a O
message O
, O
too O
. O

The O
messages O
can O
contain O
the O
following O
information O
. O

We O
found O
classic O
post O
- O
exploitation O
tools O
, O
used O
by O
a O
lot O
of O
different O
APT O
actors O
. O

The O
following O
list O
provides O
an O
overview O
of O
the O
tools O
found O
in O
the O
virtual O
file O
system O
. O

The O
driver O
injects O
several O
libraries O
into O
user O
land O
. O

These O
libraries O
are O
stored O
in O
encrypted O
form O
in O
the O
queue O
file O
. O

These O
files O
are O
used O
to O
create O
a O
kind O
of O
" O
proxy O
" O
between O
the O
kernel O
land O
and O
the O
user O
land O
. O

The O
driver O
injects O
two O
noteworthy O
libraries O
. O

If O
the O
infected O
system O
is O
a O
64-bit O
system O
, O
Win32 O
is O
replaced O
by O
Win64 O
. O

The O
libraries O
are O
very O
huge O
( O
more O
than O
150 O
functions O
) O
and O
contain O
a O
lot O
of O
features O
. O

They O
are O
able O
to O
manipulate O
the O
queue O
file O
from O
the O
user O
land O
. O

Following O
, O
a O
list O
of O
functions O
dedicated O
to O
the O
queue O
management O
( O
qm O
) O
. O

The O
libraries O
have O
the O
capability O
to O
create O
and O
manage O
a O
pcap O
3 O
capture O
. O

The O
purpose O
of O
this B-Entity
feature I-Entity
is O
to O
generate B-Action
a O
snapshot B-Entity
of I-Entity
the I-Entity
network I-Entity
traffic I-Entity
. O

The O
libraries O
are O
furthermore O
used O
to O
exfiltrate O
data O
to O
the O
outside O
world O
, O
namely O
the O
attackers O
. O

We O
identified O
several O
protocols O
to O
perform O
this O
task O
: O
generally O
, O
the O
configuration O
needed O
for O
each O
protocol O
is O
stored O
in O
the O
queue O
file O
and O
not O
within O
the O
library O
itself O
. O

 O
HTTP O
protocol O
the B-Entity
attackers I-Entity
can O
choose O
to O
use B-Action
a O
website B-Entity
to B-Modifier
exfiltrate O
data B-Entity
. O

The O
rootkit O
supports O
GET O
and O
POST O
requests O
and O
proxy O
authentication O
, O
too O
. O

The O
default O
URI O
is O
http://%s O
/ O
default.asp O
but O
it O
is O
configurable O
. O

The O
media O
type O
of O
the O
request O
is O
chosen O
from O
the O
following O
list O
. O

The O
design O
chosen O
by O
the O
developers O
is O
truly O
efficient O
: O
to O
add O
a O
new O
protocol O
and O
a O
new O
capability O
, O
the O
attackers O
do O
not O
need O
to O
recompile O
( O
or O
reinstall O
) O
the O
entire O
rootkit O
. O

They O
simply O
need O
to O
adjust O
the O
library O
and O
replace O
the O
library O
in O
the O
queue O
file O
with O
the O
adjusted O
one O
. O

The O
library O
usage O
results O
in O
modularity O
well O
thought O
out O
. O

Thanks O
to O
the O
protocol O
described O
previously O
, O
the O
attacker O
can O
even O
target O
victims O
not O
directly O
connected O
to O
the O
Internet O
. O

The O
following O
figure O
shows O
an O
example O
of O
a O
network O
scheme O
we O
discovered O
in O
2013 O
. O

The O
targeted O
machine O
( O
A O
) O
is O
a O
machine O
with O
access O
to O
sensitive O
data O
, O
e.g. O

a O
server O
. O

The O
rootkit O
installed O
on O
the O
system O
opens O
a O
Microsoft O
named O
pipe O
and O
waits O
for O
an O
incoming O
connection O
. O

This O
machine O
can O
be O
named O
" O
spied O
- O
on O
node O
" O
. O

The O
second O
machine O
( O
B O
) O
is O
an O
office O
machine O
with O
the O
capability O
to O
connect O
to O
the O
Internet O
. O

The O
rootkit O
is O
configured O
to O
connect O
to O
system O
( O
A O
) O
, O
with O
the O
help O
of O
the O
named O
pipe O
, O
and O
administrate O
the O
machine O
remotely O
. O

Finally O
, O
machine B-Entity
( I-Entity
B I-Entity
) I-Entity
is O
able O
to O
pass B-Action
on I-Action
all O
data B-Entity
received I-Entity
from I-Entity
machine I-Entity
( I-Entity
A I-Entity
) I-Entity
to B-Modifier
the O
Internet B-Entity
. O

This O
machine O
( O
B O
) O
could O
be O
named O
" O
proxy O
node O
" O
. O

This O
peer O
- O
to O
- O
peer O
design O
is O
really O
efficient O
, O
scalable O
and O
resilient O
. O

In O
case O
a O
" O
proxy O
node O
" O
is O
not O
available O
/ O
detected O
, O
the O
attackers O
can O
use O
another O
infected O
one O
. O

The O
advantage O
for O
the O
attackers O
: O
even O
if O
a O
security O
specialist O
finds O
one O
" O
spied O
- O
on O
node O
" O
, O
he O
can O
not O
easily O
find O
the O
" O
proxy O
node O
" O
, O
due O
to O
the O
fact O
that O
this O
node O
is O
a O
passive O
node O
. O

Furthermore O
, O
the O
analyst O
does O
not O
automatically O
have O
the O
command O
and O
control O
URL O
. O

In O
case O
of O
incident O
response O
, O
this O
design O
is O
complicated O
to O
apprehend O
and O
it O
is O
hard O
to O
contain O
the O
infection O
. O

Due O
to O
the O
complexity O
of O
the O
Uroburos O
rootkit O
, O
we O
estimate O
that O
it O
was O
designed O
to O
target O
government O
institutions O
, O
research O
institutions O
or O
companies O
dealing O
with O
sensitive O
information O
as O
well O
as O
similar O
high O
- O
profile O
targets O
. O

Concerning O
the O
attribution O
, O
we O
found O
some O
technical O
information O
which O
allows O
us O
to O
link O
the O
Uroburos O
rootkit O
to O
a O
cyber O
- O
attack O
against O
the O
United O
States O
of O
America O
, O
carried O
out O
in O
2008 O
4 O
and O
, O
particularly O
, O
to O
the O
worm O
used O
by O
the O
attackers O
, O
called O
Agent O
. O
BTZ O
. O

During O
this O
2008 O
campaign O
, O
a O
USB O
stick O
was O
deliberately O
" O
lost O
" O
in O
the O
parking O
lot O
of O
the O
United O
States O
Department O
of O
Defense O
. O

This O
USB O
stick O
contained O
malicious O
code O
and O
infected O
the O
military O
's O
network O
. O

The O
following O
leads O
make O
us O
link O
what O
we O
discovered O
during O
our O
analysis O
with O
the O
cyber O
- O
attack O
carried O
out O
in O
2008 O
. O

In O
an O
article O
published O
by O
Reuters O
, O
in O
2011 O
, O
the O
journalist O
mentioned O
that O
" O
U.S. O

government O
strongly O
suspects O
that O
the O
original O
attack O
was O
crafted O
by O
Russian O
Intelligence O
. O
" O
5 O
We O
found O
Uroburos O
samples O
with O
a O
resource O
in O
Russian O
language O
. O

In O
case O
someone O
from O
the O
audience O
of O
this O
report O
notices O
an O
infection O
caused O
by O
the O
Uroburos O
rootkit O
and O
needs O
help O
, O
would O
like O
to O
receive O
further O
technical O
information O
or O
would O
like O
to O
contribute O
any O
information O
about O
this O
case O
, O
please O
feel O
free O
to O
contact O
us O
by O
email O
using O
the O
following O
mailbox O
: O
intelligence@gdata.de O
The O
Uroburos O
rootkit O
is O
one O
of O
the O
most O
advanced O
rootkits O
we O
have O
ever O
analyzed O
. O

The O
oldest O
driver O
we O
identified O
was O
compiled O
in O
2011 O
, O
which O
means O
that O
the O
campaign O
remained O
undiscovered O
for O
at O
least O
three O
years O
. O

The O
investment O
to O
develop O
a O
complete O
framework O
such O
as O
Uroburos O
is O
extremely O
high O
. O

The O
developer O
team O
behind O
the O
development O
and O
the O
design O
of O
such O
an O
enhanced O
framework O
is O
really O
skilled O
. O

We O
believe O
that O
, O
until O
today O
, O
the O
team O
behind O
Uroburos O
has O
developed O
an O
even O
more O
sophisticated O
framework O
, O
which O
still O
remains O
undiscovered O
. O

The O
design O
is O
highly O
professional O
; O
the O
fact O
the O
attackers O
use O
a O
driver O
and O
a O
virtual O
file O
system O
in O
two O
separate O
files O
which O
can O
only O
work O
in O
combination O
, O
makes O
the O
analysis O
really O
complicated O
. O

One O
needs O
to O
have O
the O
two O
components O
to O
correctly O
analyze O
the O
framework O
. O

The O
driver O
contains O
all O
of O
the O
necessary O
functionality O
and O
the O
file O
system O
alone O
simply O
can O
not O
be O
decrypted O
. O

The O
network O
design O
is O
extraordinarily O
efficient O
, O
too O
; O
for O
an O
incident O
response O
team O
, O
it O
is O
always O
complicated O
to O
deal O
with O
peer O
- O
to O
- O
peer O
infrastructure O
. O

It O
is O
also O
hard O
to O
handle O
passive O
nodes O
, O
because O
one O
can O
not O
quickly O
identify O
the O
link O
between O
the O
different O
infected O
machines O
. O

This O
kind O
of O
data O
stealing O
software O
is O
too O
expensive O
to O
be O
used O
as O
common O
spyware O
. O

We O
assume O
that O
the O
attackers O
reserve O
the O
Uroburos O
framework O
for O
dedicated O
and O
critical O
targets O
. O

This O
is O
the O
main O
reason O
why O
the O
rootkit O
was O
only O
detected O
many O
years O
after O
the O
suspected O
first O
infection O
. O

Furthermore O
, O
we O
assume O
that O
the O
framework O
is O
designed O
to O
perform O
cyber O
espionage O
within O
governments O
and O
high O
profile O
enterprises O
but O
, O
due O
to O
its O
modularity O
, O
it O
can O
be O
easily O
extended O
to O
gain O
new O
features O
and O
perform O
further O
attacks O
as O
long O
as O
it O
remains O
undetected O
within O
its O
target O
. O

There O
are O
some O
strong O
indications O
which O
suggest O
that O
the O
group O
behind O
Uroburos O
is O
the O
same O
as O
the O
one O
behind O
Agent O
. O
BTZ O
, O
which O
allegedly O
was O
part O
of O
an O
intelligence O
agency O
cyberattack O
targeting O
US O
military O
bases O
in O
2008 O
. O

Notable O
hints O
include O
the O
usage O
of O
the O
exact O
same O
encryption O
key O
then O
and O
now O
, O
as O
well O
as O
the O
presence O
of O
Russian O
language O
in O
both O
cases O
. O

SHA256 O
: O
BF1CFC65B78F5222D35DC3BD2F0A87C9798BCE5A48348649DD271CE395656341 O
MD5 O
: O
320F4E6EE421C1616BD058E73CFEA282 O
Filesize O
: O
210944 O
For O
further O
information O
contact O
intelligence@gdata.de O

