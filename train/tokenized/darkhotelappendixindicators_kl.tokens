Downloaders O
, O
injectors O
, O
infostealers O
Example O
md5s O
of O
files O
detected O
with O
Kaspersky O
's O
Virus.Win32.Pioneer.dx O
and O
Symantec O
's O
Infostealer.Nemim O
! O
inf O
: O
To O
ensure B-Action
only B-Entity
single I-Entity
instance I-Entity
of I-Entity
the I-Entity
module I-Entity
is I-Entity
running I-Entity
, O
the B-Entity
module I-Entity
verifies O
if O
system O
mutex O
named O
«132DF6E» O
exists O
. O
 
If O
it O
exists O
the O
module O
exits O
, O
if O
not O
­the O
module O
creates O
one O
. O
 
The B-Entity
module I-Entity
implements B-Action
a B-Entity
method I-Entity
to B-Modifier
resist B-Entity
running I-Entity
in I-Entity
virtual I-Entity
environment I-Entity
. O
 
It B-Entity
gets B-Action
CPU B-Entity
name I-Entity
and I-Entity
identifier I-Entity
from B-Modifier
the B-Entity
registry I-Entity
at I-Entity
HKLM\HARDWARE\DESCRIPTION\ I-Entity
System\CentralProcessor\0 I-Entity
and O
collects B-Action
IP B-Entity
and I-Entity
MAC I-Entity
addresses I-Entity
of I-Entity
local I-Entity
network I-Entity
adapters I-Entity
. O
 
After O
that O
it O
compiles O
a O
string O
describing O
the O
system O
in O
the O
following O
format O
: O
« O
C O
P O
U O
: O
% O
CPUNAME O
% O
< O
br O
> O
Net O
card O
: O
% O
IP O
% O
( O
% O
MACADDR O
% O
) O
< O
br O
> O
» O
. O
 
Next O
it O
checks O
if O
this O
string O
contains O
one O
of O
the O
following O
substrings O
: O
If O
any O
of O
these O
strings O
is O
found O
, O
the O
module O
terminates O
. O
 
After O
that O
, O
there O
is O
a O
hardcoded O
value O
of O
10 O
, O
which O
delays O
further O
execution O
of O
the O
module O
for O
10 O
seconds O
. O
 
Then O
the B-Entity
module I-Entity
attempts O
to O
delete B-Action
some B-Entity
other I-Entity
, I-Entity
prob- I-Entity
ably I-Entity
older I-Entity
, I-Entity
components I-Entity
which I-Entity
might I-Entity
be I-Entity
present I-Entity
on I-Entity
the I-Entity
system I-Entity
. O
 
The O
list O
of O
deleted O
files O
includes O
the O
following O
: O
The O
next O
is O
step O
is O
to O
check B-Action
if B-Entity
current I-Entity
directory I-Entity
has I-Entity
a I-Entity
file I-Entity
named I-Entity
«U» I-Entity
. O
 
If O
not O
, O
the O
module O
proceeds O
with O
network O
communication O
routine O
. O
 
But O
if O
this O
file O
is O
found O
it O
does O
some O
additional O
checks O
. O
 
If O
«U» O
file O
is O
older O
than O
180 O
days O
, O
the B-Entity
module I-Entity
wipes B-Action
the B-Entity
file I-Entity
. O
 
If O
not O
, O
it O
triggers O
a B-Entity
special I-Entity
variable I-Entity
that O
makes B-Action
module B-Entity
dormant B-Entity
and O
dis- O
ables O
further O
communication O
with O
C O
& O
C O
server O
. O
 
After O
all O
, O
if O
the O
module O
is O
ready O
and O
allowed O
to O
communicate O
with O
C O
& O
C O
server O
it O
does O
that O
in O
the O
following O
manner O
. O
 
1 O
. O
 
The B-Entity
module I-Entity
connects B-Action
to B-Modifier
autolace.twilightparadox.com B-Entity
( I-Entity
or I-Entity
automachine I-Entity
. I-Entity
servequake.com I-Entity
) I-Entity
and O
issues B-Action
a B-Entity
HTTP I-Entity
GET I-Entity
request I-Entity
with B-Modifier
hardcoded B-Entity
User­Agent I-Entity
string I-Entity
: O
The O
server O
response O
should O
contain O
«DEXT87» B-Entity
string I-Entity
which O
is B-Action
used I-Action
to B-Modifier
rec- B-Entity
ognize I-Entity
valid I-Entity
response I-Entity
. O
 
The O
malware O
locates O
«DEXT87» O
and O
reads O
the O
data O
appended O
to O
it O
. O
 
The O
appended O
data O
should O
be O
an O
IP O
address O
in O
plaintext O
. O
 
This O
is O
used O
a O
real O
C O
& O
C O
IP O
address O
. O
 
Reading O
stops O
when O
non­digit O
or O
dot O
symbol O
is O
found O
. O
 
Here O
is O
an O
example O
of O
shortest O
possible O
valid O
server O
response O
: O
2 O
. O
 
If O
the O
real O
C O
& O
C O
IP O
address O
is O
not O
valid O
the B-Entity
module I-Entity
may O
try O
to O
send B-Action
identical B-Entity
request I-Entity
again B-Entity
but O
using B-Modifier
a B-Entity
different I-Entity
HTTP I-Entity
path I-Entity
: O
If O
the O
C O
& O
C O
IP O
address O
is O
valid O
, O
the B-Entity
module I-Entity
issues B-Action
another B-Entity
HTTP I-Entity
request I-Entity
: O
The O
server O
response O
can O
be O
one O
of O
the O
following O
: O
Where O
< O
DATASIZE O
> O
is O
a O
decimal O
integer O
that O
represents O
length O
of O
< O
DATA O
> O
field O
in O
bytes; O
< O
DATA O
> O
is O
a O
binary O
data O
separated O
from O
< O
DATASIZE O
> O
field O
by O
semicolon O
. O
 
Please O
note O
, O
that O
after O
receiving O
< O
DATA O
> O
, O
it B-Entity
is B-Action
XORed I-Action
with B-Modifier
byte B-Entity
value I-Entity
0x55 I-Entity
and O
saved B-Action
to B-Modifier
a B-Entity
disk I-Entity
in B-Modifier
a B-Entity
file I-Entity
named I-Entity
«ctfmon.exe» I-Entity
( O
current O
directory O
is O
used O
) O
. O
 
Upon O
successful O
receiving O
of O
the O
file O
it O
is O
started O
in O
a O
new O
process O
. O
 
This O
module O
is O
relatively O
large O
( O
455Kb O
) O
and O
comes O
as O
a O
part O
of O
WinRar B-Entity
SFX I-Entity
file I-Entity
that O
drops B-Action
and O
starts B-Action
the B-Entity
module I-Entity
from B-Modifier
% B-Entity
APPDATA I-Entity
% I-Entity
\Microsoft\Display\DmaUp3 I-Entity
. I-Entity
exe I-Entity
. O
 
The O
main O
purpose O
of O
the B-Entity
module I-Entity
is O
to O
collect B-Action
various B-Entity
secrets I-Entity
stored I-Entity
on I-Entity
a I-Entity
local I-Entity
system I-Entity
. O
 
This O
module O
is O
designed O
not O
to O
run O
on O
Windows O
with O
system O
default O
codepage O
set O
to O
Korean O
. O
 
From O
the O
very O
beginning O
this B-Entity
module I-Entity
checks B-Action
if B-Entity
«bdagent.exe» I-Entity
process I-Entity
is I-Entity
running I-Entity
on I-Entity
current I-Entity
system I-Entity
. O
 
Bdagent.exe O
is O
a O
name O
for O
BitDefender O
Antivirus O
component O
. O
 
If O
it O
is O
running O
, O
it B-Entity
uses B-Action
simple B-Entity
AV I-Entity
heuristics I-Entity
evasion I-Entity
technique I-Entity
. O
 
The B-Entity
code I-Entity
starts B-Action
a B-Entity
thread I-Entity
that I-Entity
simulates I-Entity
keystrokes I-Entity
of I-Entity
ESC I-Entity
keyboard I-Entity
key I-Entity
and I-Entity
then I-Entity
shows I-Entity
a I-Entity
system I-Entity
modal I-Entity
message I-Entity
box I-Entity
. O
 
Pushing O
ESC O
key O
closes O
the O
modal O
message O
box O
. O
 
Right O
after O
that O
keystroke B-Entity
generation I-Entity
thread I-Entity
is B-Action
terminated I-Action
and O
the O
module O
continues O
normal O
execution O
as O
if O
«bdagent.exe» O
was O
not O
running O
. O
 
Next O
the B-Entity
module I-Entity
makes B-Action
sure I-Action
only B-Entity
one I-Entity
instance I-Entity
of I-Entity
current I-Entity
code I-Entity
is I-Entity
running I-Entity
by B-Modifier
checking B-Entity
if I-Entity
system I-Entity
mutex I-Entity
object I-Entity
named I-Entity
«920111215» I-Entity
exists I-Entity
. O
 
After O
that O
, O
the B-Entity
mod- I-Entity
ule I-Entity
collects B-Action
information B-Entity
about I-Entity
current I-Entity
system I-Entity
which I-Entity
includes I-Entity
the I-Entity
following I-Entity
: O
If O
the O
module O
reveals O
that O
current O
System O
default O
codepage O
is O
0412 O
( O
Korean O
) O
it O
terminates O
. O
 
There O
is O
one O
interesting O
specifics O
in O
Microsoft O
IntelliForms O
which O
reveals O
attack- O
er O
's O
interests O
. O
 
IntelliForms O
technology O
keeps O
login/password O
information O
in O
the O
registry O
in O
encrypted O
form O
. O
 
However O
, O
there O
is O
no O
clear O
information O
about O
the O
corre- O
sponding O
website O
which O
requires O
given O
login O
and O
password O
. O
 
The O
only O
information O
Intelliforms O
offers O
about O
the O
place O
where O
given O
login/password O
should O
be O
used O
is O
a O
hash O
of O
the O
webpage O
URL O
. O
 
So O
far O
, O
the B-Entity
attackers I-Entity
can O
steal B-Action
logins B-Entity
and I-Entity
pass- I-Entity
words I-Entity
but O
to O
understand O
where O
they O
are O
from O
they O
must O
guess O
the O
string O
which O
produced O
given O
hash O
. O
 
They O
have O
implemented O
this O
logics O
in O
the O
malware O
. O
 
When O
IntelliForms B-Entity
information I-Entity
is B-Action
stolen I-Action
the O
malware O
tries O
to O
check O
the O
list O
of O
known O
login O
page O
URLs O
to O
recover O
the O
originating O
webpage O
address O
. O
 
Here O
is O
the O
list O
of O
URLs O
that O
are O
checked O
by O
the O
malware O
: O
The O
list O
of O
targeted O
services O
includes O
some O
local O
services O
specifically O
popular O
in O
: O
The B-Entity
module I-Entity
uses B-Action
several B-Entity
simple I-Entity
XOR­based I-Entity
algorithms I-Entity
to B-Modifier
encrypt B-Entity
embedded I-Entity
string I-Entity
data I-Entity
. O
 
String O
encryption/decryption O
functions O
use O
the O
following O
keys O
: O
The O
module O
works O
with O
all O
Firefox O
versions O
prior O
to O
Mozilla O
Firefox O
12.0 O
. O
 
Depend- O
ing O
on O
version O
of O
Firefox O
, O
it O
can O
read O
Firefox O
database O
directly O
to O
dump O
stored O
se- O
crets O
or O
utilize O
one O
Firefox O
libraries O
to O
access O
the O
configuration O
data O
. O
 
In O
addition O
it O
makes O
use O
of O
the O
following O
Mozilla O
Firefox O
libraries O
depending O
on O
Firefox O
version O
: O
When O
stealing B-Action
secrets B-Entity
from B-Modifier
Firefox B-Entity
and I-Entity
Chrome I-Entity
it B-Entity
uses O
built­in O
SQLite O
library O
code O
. O
 
The O
module O
is O
linked O
with O
SQLite O
version O
3.7.5 O
release O
candidate O
2 O
, O
release O
hash O
ed759d5a9edb3bba5f48f243df47be29e3fe8cd7 O
dated O
as O
2011­01­28 O
17:03:50 O
. O
 
After O
stealing B-Action
secrets B-Entity
from B-Modifier
local B-Entity
system I-Entity
the B-Entity
malware I-Entity
executes B-Action
some B-Entity
kind I-Entity
of I-Entity
embedded I-Entity
script I-Entity
. O
 
It B-Entity
is B-Action
logging I-Action
all B-Entity
actions I-Entity
to B-Modifier
inform B-Entity
the I-Entity
operator I-Entity
what I-Entity
exactly I-Entity
was I-Entity
executed I-Entity
by I-Entity
this I-Entity
variant I-Entity
of I-Entity
the I-Entity
malware I-Entity
. O
 
The B-Entity
result I-Entity
of I-Entity
this I-Entity
execution I-Entity
is O
appended O
to O
the O
stolen O
data O
and O
uploaded B-Action
to B-Modifier
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
. O
 
The B-Entity
module I-Entity
uploads B-Action
all B-Entity
collected I-Entity
information I-Entity
to B-Modifier
one B-Entity
of I-Entity
the I-Entity
following I-Entity
URLs I-Entity
via B-Modifier
POST B-Entity
request I-Entity
: O
It O
's O
the O
first O
time O
we O
see O
.pn O
 
domain O
used O
in O
malware O
. O
 
This O
top O
level O
country O
code O
domain O
is O
quite O
exotic O
and O
is O
assigned O
to O
Pitcairn O
Islands O
, O
which O
is O
Overseas O
ter- O
ritory O
of O
the O
United O
Kingdom O
in O
the O
Pacific O
. O
 
As O
of O
2013 O
estimated O
population O
of O
Pitcairn O
Islands O
is O
only O
56 O
people O
. O
 
An O
official O
.pn O
 
domain O
costs O
$ O
100/year O
from O
the O
registry O
, O
however O
.eu.pn O
 
domains O
seem O
to O
be O
given O
away O
for O
free O
. O
 
The O
malware O
uses O
fixed O
User­Agent O
string O
: O
The B-Entity
data I-Entity
is B-Action
uploaded I-Action
as B-Modifier
a B-Entity
POST I-Entity
request I-Entity
binary I-Entity
in B-Modifier
the B-Entity
following I-Entity
format I-Entity
: O
where O
< O
UserId O
> O
is O
hardcoded O
identifier O
( O
i.e O
. O
 
«user2» O
in O
current O
sample O
) O
; O
< O
UniqueMachineId O
> O
is O
a O
32 O
characters O
long O
hex O
string O
which O
derived O
from O
net- O
work O
card O
MAC O
address; O
< O
EncryptionKey O
> O
is O
symmetrical O
encryption O
key O
used O
to O
encrypt O
< O
UserId O
> O
and O
< O
GeneralSysInfo O
> O
values O
. O
 
The O
malware O
uses O
text O
protocol O
, O
which O
is O
why O
potentially O
binary O
values O
of O
< O
UserId O
> O
and O
< O
GeneralSysInfo O
> O
are O
ad- O
ditionally O
encoded O
using O
Base64 O
algorithm O
. O
 
< O
GeneralSysInfo O
> O
field O
contains O
only O
basic O
information O
about O
the O
system O
, O
i.e O
. O
 
: O
If O
the O
server O
reply O
contains O
a O
keyword O
«minmei» O
it B-Entity
continues O
sending B-Action
additional B-Entity
in- I-Entity
formation I-Entity
. O
 
«Minmei» O
may O
be O
a O
reference O
to O
a O
popular O
Japanese O
anime O
and O
manga O
known O
as O
«The O
Super O
Dimension O
Fortress O
Macross» O
. O
 
A O
quote O
from O
Wikipedia O
: O
«Born O
in O
Yokohama O
Chinatown O
, O
Japan O
( O
though O
she O
is O
of O
partial O
Chinese O
descent O
) O
as O
Linn O
Minmei O
, O
Minmay O
moved O
in O
with O
her O
uncle O
Shaochin O
( O
少江 O
) O
and O
aunt O
Feic- O
hun O
( O
慧中 O
) O
on O
South O
Ataria O
Island O
in O
hopes O
of O
finding O
the O
path O
to O
fulfill O
her O
dream O
of O
becoming O
a O
star.» O
The B-Entity
trojan I-Entity
iterates B-Action
through B-Modifier
running B-Entity
processes I-Entity
and O
looks B-Action
for B-Modifier
security B-Entity
software I-Entity
basing I-Entity
on I-Entity
executable I-Entity
filenames I-Entity
from I-Entity
the I-Entity
list I-Entity
below I-Entity
. O
 
If O
the O
process O
is O
found O
it O
keeps O
a O
record O
of O
the O
software O
name O
using O
short O
AV O
Identifier O
string O
from O
the O
fol- O
lowing O
table O
of O
rules O
The B-Entity
malware I-Entity
uses O
a O
trick O
to O
evade B-Action
running B-Entity
on I-Entity
a I-Entity
VMware I-Entity
. O
 
First O
, O
it B-Entity
checks B-Action
if B-Entity
cur- I-Entity
rent I-Entity
process I-Entity
is I-Entity
running I-Entity
in I-Entity
WOW64 I-Entity
environment I-Entity
. O
 
If O
yes O
it O
does O
additional O
port O
I/O O
specific O
to O
VMWare O
virtual O
machine O
( O
the O
VMware O
hypervisor O
port O
: O
0x5658; O
VMware O
hypervisor O
magic O
value O
: O
0x564D5868 O
) O
. O
 
Another B-Entity
method I-Entity
to O
detect B-Action
VM B-Entity
en- I-Entity
vironment I-Entity
is O
to O
check B-Action
local B-Entity
network I-Entity
adapter I-Entity
's I-Entity
IP I-Entity
address I-Entity
. O
 
If O
it O
belongs O
to O
subnet O
192.168.100 O
. O
 
* O
then O
the O
malware O
believes O
it O
's O
running O
in O
a O
VM O
. O
 
If B-Modifier
VM B-Entity
is I-Entity
detected I-Entity
the B-Entity
process I-Entity
instantly O
terminates B-Action
. O
 
Next O
the B-Entity
malware I-Entity
submits B-Action
collected B-Entity
information I-Entity
to B-Modifier
the B-Entity
C I-Entity
& I-Entity
C I-Entity
server I-Entity
using B-Modifier
HTTP B-Entity
GET I-Entity
request I-Entity
and I-Entity
the I-Entity
following I-Entity
URL I-Entity
format I-Entity
: I-Entity
http I-Entity
: I-Entity
// I-Entity
< I-Entity
C2DOMAIN I-Entity
> I-Entity
/bin/readi.php I-Entity
? I-Entity
a1= I-Entity
% I-Entity
STEPID I-Entity
% I-Entity
& I-Entity
a2= I-Entity
% I-Entity
HOSTID I-Entity
% I-Entity
& I-Entity
a3= I-Entity
% I-Entity
SYSINFO I-Entity
% I-Entity
& I-Entity
a4= I-Entity
% I-Entity
AVSOFTID I-Entity
% I-Entity
, I-Entity
where I-Entity
% I-Entity
C2DOMAIN I-Entity
% I-Entity
is I-Entity
one I-Entity
of I-Entity
the I-Entity
following I-Entity
C I-Entity
& I-Entity
C I-Entity
domains I-Entity
: O
% O
STEPID O
% O
is O
special O
text O
string O
indicating O
stage O
of O
malware O
operation O
. O
 
This O
string O
varies O
depending O
on O
the O
local O
system O
language O
and O
may O
be O
one O
of O
the O
following O
: O
% O
HOSTID O
% O
is O
a O
special O
value O
generated O
from O
local O
network O
card O
MAC O
address; O
% O
SYSINFO O
% O
is O
a O
string O
with O
general O
system O
information O
( O
please O
see O
description O
above O
) O
; O
% O
AVSOFTID O
% O
is O
a O
string O
that O
contains O
indexes O
of O
AV O
software O
names O
in O
internal O
table O
of O
AV O
Identifiers O
( O
please O
see O
the O
table O
above O
) O
. O
 
Igfxext.exe B-Entity
can O
download B-Action
a B-Entity
file I-Entity
and O
drop B-Action
it B-Entity
to B-Modifier
% B-Entity
APPDATA I-Entity
% I-Entity
\microsoft\dis- I-Entity
play\ctfmon.exe I-Entity
( I-Entity
md5= I-Entity
e8bfb82b0dd5cef46116d61f62c25060 I-Entity
) I-Entity
. O
 
After O
execution O
, O
the B-Entity
downloaded I-Entity
file I-Entity
drops B-Action
SMAGENT.EXE B-Entity
( I-Entity
md5 I-Entity
0306f9ae- I-Entity
7786570139f78e78bc940597 I-Entity
) I-Entity
to B-Modifier
% B-Entity
APPDATA I-Entity
% I-Entity
\MICROSOFT\DISPLAY I-Entity
and O
ex- B-Action
ecutes I-Action
it B-Entity
. O
 
This B-Entity
component I-Entity
is O
a O
virus O
, O
and O
is O
used O
to O
selectively O
infiltrate B-Action
into B-Modifier
other B-Entity
computers I-Entity
via B-Modifier
USB B-Entity
or O
network B-Entity
shares I-Entity
. O
 
A O
large O
number O
of O
files O
are O
detected O
by O
Kaspersky O
Lab O
scanners O
as O
Virus.Win32 O
. O
 
Pioneer.dx O
. O
 
These B-Entity
files I-Entity
are O
all O
legitimate O
files O
that O
have O
been B-Action
infected I-Action
by O
another B-Entity
Darkhotel I-Entity
component I-Entity
. O
 
All B-Entity
of I-Entity
these I-Entity
infected I-Entity
files I-Entity
drop B-Action
a B-Entity
63kb I-Entity
self I-Entity
injecting I-Entity
compo- I-Entity
nent I-Entity
. O
 
This O
malware O
is O
63kb O
in O
size O
. O
 
It O
is O
bound O
to O
a O
variety O
of O
other O
software O
packages O
that O
vary O
in O
name O
, O
but O
the O
host O
package O
is O
consistently O
detected O
as O
'' O
Virus.Win32 O
. O
 
Pioneer.dx O
'' O
. O
 
The B-Entity
igfxext.exe I-Entity
component I-Entity
is B-Action
dropped I-Action
to B-Modifier
disk B-Entity
and O
run B-Action
. O
 
It B-Entity
spawns B-Action
an- B-Entity
other I-Entity
suspended I-Entity
process I-Entity
with B-Modifier
its B-Entity
own I-Entity
igfxext.exe I-Entity
image I-Entity
, O
but O
decrypts O
a O
smaller O
32kb O
executable O
( O
cf1319d94f33380622ba000b7d8ad6e9 O
, O
Trojan­Downloader O
. O
 
Win32.Agent.xwge O
) O
from O
its O
.data O
 
section O
in O
memory O
with O
a O
simple O
xor O
0xbb O
. O
 
The B-Entity
running I-Entity
process I-Entity
overwrites B-Action
the B-Entity
igfxext.exe I-Entity
image I-Entity
in B-Modifier
the B-Entity
suspended I-Entity
process I-Entity
with B-Modifier
this B-Entity
smaller I-Entity
chunk I-Entity
of I-Entity
code I-Entity
. O
 
It O
then O
resumes O
the O
thread O
in O
the O
new O
process O
. O
 
This O
smaller O
code O
section O
maintains O
similar O
functionality O
to O
the O
'' O
worm O
'' O
compo- O
nent O
: O
Host B-Entity
package I-Entity
files I-Entity
detected I-Entity
as I-Entity
'' I-Entity
Virus.Win32.Pioneer.dx I-Entity
'' I-Entity
are B-Action
infected B-Entity
legitimate I-Entity
files I-Entity
, O
that O
do O
not O
have O
any O
self­propagation O
routines O
. O
 
It O
is O
signed O
with O
the O
familiar O
'' O
'' O
digital O
certificate O
. O
 
This B-Entity
sample I-Entity
is B-Action
started I-Action
by O
code B-Entity
running I-Entity
within I-Entity
svchost.exe I-Entity
on I-Entity
WinXP I-Entity
SP3 I-Entity
. O
 
It B-Entity
drops B-Action
a B-Entity
keylogger I-Entity
. O
 
The O
debug O
path O
inside O
: O
The B-Entity
dropper I-Entity
above I-Entity
maintains B-Action
, I-Action
drops I-Action
and I-Action
installs I-Action
this B-Entity
kernel I-Entity
mode I-Entity
keylogger I-Entity
: O
Likely O
, O
it O
was O
developed O
as O
a O
part O
of O
a O
mid­to­late O
2009 O
project O
: O
This O
driver O
package O
is O
built O
to O
look O
like O
a O
legitimate O
low O
level O
Microsoft O
system O
device O
. O
 
It B-Entity
is B-Action
installed I-Action
as B-Modifier
a B-Entity
system I-Entity
kernel I-Entity
driver I-Entity
'' I-Entity
Ndiskpro I-Entity
'' I-Entity
service I-Entity
, O
described O
as O
a O
'' O
Microcode O
Update O
Device O
'' O
. O
 
It O
is O
somewhat O
surprising O
that O
there O
is O
no O
rootkit O
functionality O
hiding O
this O
service O
: O
When O
loaded B-Action
, O
the B-Entity
NDISKPRO.SYS I-Entity
driver I-Entity
hooks B-Action
both B-Entity
INT I-Entity
0x01 I-Entity
and I-Entity
INT I-Entity
0xff I-Entity
, O
and O
retrieves B-Action
keystroke B-Entity
data I-Entity
directly B-Modifier
from I-Modifier
port B-Entity
0x60 I-Entity
, I-Entity
the I-Entity
motherboard I-Entity
keyboard I-Entity
con- I-Entity
troller I-Entity
itself I-Entity
. O
 
Here O
we O
see O
the O
local O
port O
variables O
assigned O
values O
And O
here O
, O
the O
ports O
are O
directly O
being O
read O
with O
READPORTUCHAR O
( O
0x64 O
) O
and O
then O
READPORTUCHAR O
( O
0x60 O
) O
: O
It O
buffers O
, O
then O
communicates O
the O
data O
to O
the O
running O
user O
mode O
component O
. O
 
This B-Entity
component I-Entity
then O
encrypts B-Action
and O
writes B-Action
the B-Entity
retrieved I-Entity
values I-Entity
ondisk I-Entity
to B-Modifier
a B-Entity
ran- I-Entity
domly I-Entity
named I-Entity
.tmp I-Entity
, I-Entity
file I-Entity
like I-Entity
ffffz07131101.tmp I-Entity
. O
 
This O
file O
is O
located O
in O
the O
same O
directory O
as O
the B-Entity
original I-Entity
dropper I-Entity
, O
which O
maintains B-Action
persistence B-Entity
across B-Modifier
reboots B-Entity
with B-Modifier
a B-Entity
simple I-Entity
addition I-Entity
to I-Entity
the I-Entity
HKCU I-Entity
run I-Entity
key I-Entity
. O
 
Here O
is O
debug O
output O
demonstrating O
this O
component O
's O
data O
retrieval O
when O
the O
letter O
'' O
D O
'' O
is O
repeatedly O
pressed O
on O
the O
keyboard O
. O
 
Keyscan O
make O
and O
break O
codes O
are O
'' O
0x20 O
'' O
and O
'' O
0xA0 O
'' O
and O
for O
the O
key O
press O
and O
key O
release O
for O
the O
'' O
D O
'' O
key O
. O
 
The O
'' O
0x1D O
'' O
value O
from O
port O
0x64 O
that O
you O
see O
below O
is O
basically O
an O
indication O
that O
the O
output O
buffer O
is O
full O
and O
the O
keyboard O
is O
locked O
, O
so O
it O
is O
safe O
for O
the O
driver O
to O
access O
the O
key O
value O
in O
port O
0x60 O
: O
These O
debug O
messages O
and O
code O
style O
are O
duplicates O
of O
what O
chpie O
posted O
in O
the O
past O
. O
 
This B-Entity
keylogger I-Entity
module I-Entity
encrypts B-Action
and O
stores B-Action
gathered B-Entity
data I-Entity
in B-Modifier
a B-Entity
log I-Entity
file I-Entity
, O
as O
men- O
tioned O
previously O
. O
 
Its O
encryption O
algorithm O
is O
similar O
to O
RC4 O
. O
 
Interesting O
part O
is O
that O
the O
module O
randomly O
generates O
the O
key O
and O
stores O
it O
in O
an O
unexpected O
place O
: O
in O
the O
middle O
of O
the O
log O
file O
name O
. O
 
Hence O
, O
the O
numeric O
part O
of O
the O
filename O
is O
used O
as O
a O
seed O
for O
the O
pseudorandom O
number O
generator O
. O
 
Rand O
function O
is O
statically O
linked O
to O
insure O
same O
results O
on O
different O
computers O
. O
 
Here O
is O
the O
commented O
RC4 O
encryption O
code O
: O
